{"version":3,"file":"assets/abcui.js","sources":["webpack:///webpack/bootstrap ce7695f7c41dc8754dd8","webpack:///src/abcui.js","webpack:///./~/airbitz-core-js/dist/abc.cjs.js","webpack:///./~/base-x/index.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/buffer/~/isarray/index.js","webpack:///./~/aes-js/index.js","webpack:///./~/hmac-drbg/lib/hmac-drbg.js","webpack:///./~/hash.js/lib/hash.js","webpack:///./~/hash.js/lib/hash/utils.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/hash.js/lib/hash/common.js","webpack:///./~/hash.js/lib/hash/sha.js","webpack:///./~/hash.js/lib/hash/ripemd.js","webpack:///./~/hash.js/lib/hash/hmac.js","webpack:///./~/minimalistic-crypto-utils/lib/utils.js","webpack:///./~/minimalistic-assert/index.js","webpack:///./~/scrypt-js/scrypt.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/process/browser.js","webpack:///./~/url/url.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/querystring/index.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///crypto (ignored)","webpack:///node-fetch (ignored)","webpack:///node-localstorage (ignored)"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ce7695f7c41dc8754dd8","var abc = require('airbitz-core-js')\n\nvar DomWindow\nvar DomDocument\nif (typeof (window) === 'undefined') {\n  DomWindow = {}\n} else {\n  DomWindow = window\n}\nif (typeof (document) === 'undefined') {\n  DomDocument = {\n    createElement: function () {\n      console.log('createElement: Error browser routine used in non-browser environment')\n    },\n    getElementsByTagName: function () {\n      console.log('getElementsByTagName: Error browser routine used in non-browser environment')\n    }\n  }\n} else {\n  DomDocument = document\n}\nfunction createIFrame (path) {\n  var frame = DomDocument.createElement('iframe')\n  var body = DomDocument.getElementsByTagName('BODY')[0]\n  body.appendChild(frame, body)\n  frame.setAttribute('src', path)\n  frame.setAttribute('frameborder', '0')\n  frame.setAttribute('allowtransparency', 'true')\n  frame.setAttribute('style', 'border: 0px none transparent; overflow: hidden; visibility: visible; margin: 0px; padding: 0px; position: fixed; left: 0px; top: 0px; width: 100%; height: 100%; z-index: 9999; display: block; background: transparent;')\n  return frame\n}\n\nfunction removeIFrame (frame) {\n  frame.parentNode.removeChild(frame)\n}\n\nfunction makeABCUIContext (args) {\n  return new InnerAbcUi(args)\n}\n\nfunction InnerAbcUi (args) {\n  var apiKey = args.apiKey\n  if (!apiKey) {\n    throw Error('Missing api key')\n  }\n  DomWindow.abcContext = this.abcContext =\n    abc.makeContext({'apiKey': args.apiKey, 'accountType': args.accountType})\n  if (args['bundlePath']) {\n    this.bundlePath = args.bundlePath\n  } else {\n    this.bundlePath = '/abcui'\n  }\n  DomWindow.abcuiContext = {\n    'vendorName': args.vendorName,\n    'bundlePath': this.bundlePath\n  }\n\n  if (typeof args.vendorImageUrl === 'string') {\n    DomWindow.abcuiContext.vendorImageUrl = args.vendorImageUrl\n  } else {\n    DomWindow.abcuiContext.vendorImageUrl = ''\n  }\n}\n\nInnerAbcUi.prototype.openLoginWindow = function (callback) {\n  var frame = createIFrame(this.bundlePath + '/assets/index.html')\n  var that = this\n  var abcContext = DomWindow.abcContext\n  DomWindow.loginCallback = function (error, account) {\n    if (account) {\n\n      // if (opts && opts.setupRecovery) {\n      //   opts.noRequirePassword = true\n      //   that.openSetupRecoveryWindow(account, opts, function () {})\n      // } else if (!abcContext.pinExists(account.username)) {\n      //   that.openChangePinEdgeLoginWindow(account, opts, function () {})\n      // }\n      DomWindow.abcAccount = account\n      callback(error, account)\n      removeIFrame(frame)\n    }\n  }\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame)\n  }\n}\n\nInnerAbcUi.prototype.getABCContext = function () {\n  return this.abcContext\n}\n\nInnerAbcUi.prototype.openRecoveryWindow = function (callback) {\n  createIFrame(this.bundlePath + '/assets/index.html#/recovery')\n}\n\nInnerAbcUi.prototype.openSetupRecoveryWindow = function (account, opts, callback) {\n  var frame\n  if (opts && opts.noRequirePassword) {\n    frame = createIFrame(this.bundlePath + '/assets/index.html#/account/setuprecovery-nopassword')\n  } else {\n    frame = createIFrame(this.bundlePath + '/assets/index.html#/account/setuprecovery')\n  }\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame)\n  }\n}\n\nInnerAbcUi.prototype.openChangePinEdgeLoginWindow = function (account, callback) {\n  var frame = createIFrame(this.bundlePath + '/assets/index.html#/account/changepin-edge-login')\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame)\n  }\n}\n\nInnerAbcUi.prototype.openManageWindow = function (account, callback) {\n  DomWindow.abcAccount = account\n  var frame = createIFrame(this.bundlePath + '/assets/index.html#/home/')\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame)\n    callback(null)\n  }\n}\n\nvar abcui = {}\nabcui.makeABCUIContext = makeABCUIContext\nmodule.exports = abcui\n\n\n\n// WEBPACK FOOTER //\n// src/abcui.js","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar baseX = _interopDefault(require('base-x'));\nvar buffer = require('buffer');\nvar buffer__default = _interopDefault(buffer);\nvar aesjs = _interopDefault(require('aes-js'));\nvar HmacDRBG = _interopDefault(require('hmac-drbg'));\nvar scryptJs = _interopDefault(require('scrypt-js'));\nvar url = _interopDefault(require('url'));\nvar crypto = _interopDefault(require('crypto'));\nvar fetch = _interopDefault(require('node-fetch'));\nvar nodeLocalstorage = require('node-localstorage');\n\nvar base58Codec = baseX('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n\nvar base16 = {\n  parse: function parse (text) {\n    return new buffer.Buffer(text, 'hex')\n  },\n  stringify: function stringify (data) {\n    return new buffer.Buffer(data).toString('hex')\n  }\n};\n\nvar base58 = {\n  parse: function parse (text) {\n    return new buffer.Buffer(base58Codec.decode(text))\n  },\n  stringify: function stringify (data) {\n    return base58Codec.encode(data)\n  }\n};\n\nvar base64 = {\n  parse: function parse (text) {\n    return new buffer.Buffer(text, 'base64')\n  },\n  stringify: function stringify (data) {\n    return new buffer.Buffer(data).toString('base64')\n  }\n};\n\nvar utf8 = {\n  parse: function parse (text) {\n    return new buffer.Buffer(text, 'utf8')\n  },\n  stringify: function stringify (data) {\n    return new buffer.Buffer(data).toString('utf8')\n  }\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar cryptoBundle = createCommonjsModule(function (module, exports) {\n(function(e, a) { for(var i in a) { e[i] = a[i]; } }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\t{ return installedModules[moduleId].exports; }\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// These two libraries are broken under Rollup.js,\n\t// so we have to webpack them before we include them in our bundle.\n\t// This is the Webpack entry point.\n\n\texports.elliptic = __webpack_require__(1);\n\texports.hashjs = __webpack_require__(18);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar elliptic = exports;\n\n\telliptic.version = __webpack_require__(2).version;\n\telliptic.utils = __webpack_require__(3);\n\telliptic.rand = __webpack_require__(9);\n\telliptic.curve = __webpack_require__(11);\n\telliptic.curves = __webpack_require__(17);\n\n\t// Protocols\n\telliptic.ec = __webpack_require__(25);\n\telliptic.eddsa = __webpack_require__(29);\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"elliptic\",\n\t\t\"version\": \"6.4.0\",\n\t\t\"description\": \"EC cryptography\",\n\t\t\"main\": \"lib/elliptic.js\",\n\t\t\"files\": [\n\t\t\t\"lib\"\n\t\t],\n\t\t\"scripts\": {\n\t\t\t\"jscs\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n\t\t\t\"jshint\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n\t\t\t\"lint\": \"npm run jscs && npm run jshint\",\n\t\t\t\"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n\t\t\t\"test\": \"npm run lint && npm run unit\",\n\t\t\t\"version\": \"grunt dist && git add dist/\"\n\t\t},\n\t\t\"repository\": {\n\t\t\t\"type\": \"git\",\n\t\t\t\"url\": \"git@github.com:indutny/elliptic\"\n\t\t},\n\t\t\"keywords\": [\n\t\t\t\"EC\",\n\t\t\t\"Elliptic\",\n\t\t\t\"curve\",\n\t\t\t\"Cryptography\"\n\t\t],\n\t\t\"author\": \"Fedor Indutny <fedor@indutny.com>\",\n\t\t\"license\": \"MIT\",\n\t\t\"bugs\": {\n\t\t\t\"url\": \"https://github.com/indutny/elliptic/issues\"\n\t\t},\n\t\t\"homepage\": \"https://github.com/indutny/elliptic\",\n\t\t\"devDependencies\": {\n\t\t\t\"brfs\": \"^1.4.3\",\n\t\t\t\"coveralls\": \"^2.11.3\",\n\t\t\t\"grunt\": \"^0.4.5\",\n\t\t\t\"grunt-browserify\": \"^5.0.0\",\n\t\t\t\"grunt-cli\": \"^1.2.0\",\n\t\t\t\"grunt-contrib-connect\": \"^1.0.0\",\n\t\t\t\"grunt-contrib-copy\": \"^1.0.0\",\n\t\t\t\"grunt-contrib-uglify\": \"^1.0.1\",\n\t\t\t\"grunt-mocha-istanbul\": \"^3.0.1\",\n\t\t\t\"grunt-saucelabs\": \"^8.6.2\",\n\t\t\t\"istanbul\": \"^0.4.2\",\n\t\t\t\"jscs\": \"^2.9.0\",\n\t\t\t\"jshint\": \"^2.6.0\",\n\t\t\t\"mocha\": \"^2.1.0\"\n\t\t},\n\t\t\"dependencies\": {\n\t\t\t\"bn.js\": \"^4.4.0\",\n\t\t\t\"brorand\": \"^1.0.1\",\n\t\t\t\"hash.js\": \"^1.0.0\",\n\t\t\t\"hmac-drbg\": \"^1.0.0\",\n\t\t\t\"inherits\": \"^2.0.1\",\n\t\t\t\"minimalistic-assert\": \"^1.0.0\",\n\t\t\t\"minimalistic-crypto-utils\": \"^1.0.0\"\n\t\t}\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = exports;\n\tvar BN = __webpack_require__(4);\n\tvar minAssert = __webpack_require__(7);\n\tvar minUtils = __webpack_require__(8);\n\n\tutils.assert = minAssert;\n\tutils.toArray = minUtils.toArray;\n\tutils.zero2 = minUtils.zero2;\n\tutils.toHex = minUtils.toHex;\n\tutils.encode = minUtils.encode;\n\n\t// Represent num in a w-NAF form\n\tfunction getNAF(num, w) {\n\t  var naf = [];\n\t  var ws = 1 << (w + 1);\n\t  var k = num.clone();\n\t  while (k.cmpn(1) >= 0) {\n\t    var z;\n\t    if (k.isOdd()) {\n\t      var mod = k.andln(ws - 1);\n\t      if (mod > (ws >> 1) - 1)\n\t        { z = (ws >> 1) - mod; }\n\t      else\n\t        { z = mod; }\n\t      k.isubn(z);\n\t    } else {\n\t      z = 0;\n\t    }\n\t    naf.push(z);\n\n\t    // Optimization, shift by word if possible\n\t    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n\t    for (var i = 1; i < shift; i++)\n\t      { naf.push(0); }\n\t    k.iushrn(shift);\n\t  }\n\n\t  return naf;\n\t}\n\tutils.getNAF = getNAF;\n\n\t// Represent k1, k2 in a Joint Sparse Form\n\tfunction getJSF(k1, k2) {\n\t  var jsf = [\n\t    [],\n\t    []\n\t  ];\n\n\t  k1 = k1.clone();\n\t  k2 = k2.clone();\n\t  var d1 = 0;\n\t  var d2 = 0;\n\t  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n\t    // First phase\n\t    var m14 = (k1.andln(3) + d1) & 3;\n\t    var m24 = (k2.andln(3) + d2) & 3;\n\t    if (m14 === 3)\n\t      { m14 = -1; }\n\t    if (m24 === 3)\n\t      { m24 = -1; }\n\t    var u1;\n\t    if ((m14 & 1) === 0) {\n\t      u1 = 0;\n\t    } else {\n\t      var m8 = (k1.andln(7) + d1) & 7;\n\t      if ((m8 === 3 || m8 === 5) && m24 === 2)\n\t        { u1 = -m14; }\n\t      else\n\t        { u1 = m14; }\n\t    }\n\t    jsf[0].push(u1);\n\n\t    var u2;\n\t    if ((m24 & 1) === 0) {\n\t      u2 = 0;\n\t    } else {\n\t      var m8 = (k2.andln(7) + d2) & 7;\n\t      if ((m8 === 3 || m8 === 5) && m14 === 2)\n\t        { u2 = -m24; }\n\t      else\n\t        { u2 = m24; }\n\t    }\n\t    jsf[1].push(u2);\n\n\t    // Second phase\n\t    if (2 * d1 === u1 + 1)\n\t      { d1 = 1 - d1; }\n\t    if (2 * d2 === u2 + 1)\n\t      { d2 = 1 - d2; }\n\t    k1.iushrn(1);\n\t    k2.iushrn(1);\n\t  }\n\n\t  return jsf;\n\t}\n\tutils.getJSF = getJSF;\n\n\tfunction cachedProperty(obj, name, computer) {\n\t  var key = '_' + name;\n\t  obj.prototype[name] = function cachedProperty() {\n\t    return this[key] !== undefined ? this[key] :\n\t           this[key] = computer.call(this);\n\t  };\n\t}\n\tutils.cachedProperty = cachedProperty;\n\n\tfunction parseBytes(bytes) {\n\t  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n\t                                     bytes;\n\t}\n\tutils.parseBytes = parseBytes;\n\n\tfunction intFromLE(bytes) {\n\t  return new BN(bytes, 'hex', 'le');\n\t}\n\tutils.intFromLE = intFromLE;\n\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n\t  'use strict';\n\n\t  // Utils\n\t  function assert (val, msg) {\n\t    if (!val) { throw new Error(msg || 'Assertion failed'); }\n\t  }\n\n\t  // Could use `inherits` module, but don't want to move from single file\n\t  // architecture yet.\n\t  function inherits (ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\n\t  // BN\n\n\t  function BN (number, base, endian) {\n\t    if (BN.isBN(number)) {\n\t      return number;\n\t    }\n\n\t    this.negative = 0;\n\t    this.words = null;\n\t    this.length = 0;\n\n\t    // Reduction context\n\t    this.red = null;\n\n\t    if (number !== null) {\n\t      if (base === 'le' || base === 'be') {\n\t        endian = base;\n\t        base = 10;\n\t      }\n\n\t      this._init(number || 0, base || 10, endian || 'be');\n\t    }\n\t  }\n\t  if (typeof module === 'object') {\n\t    module.exports = BN;\n\t  } else {\n\t    exports.BN = BN;\n\t  }\n\n\t  BN.BN = BN;\n\t  BN.wordSize = 26;\n\n\t  var Buffer$$1;\n\t  try {\n\t    Buffer$$1 = __webpack_require__(6).Buffer;\n\t  } catch (e) {\n\t  }\n\n\t  BN.isBN = function isBN (num) {\n\t    if (num instanceof BN) {\n\t      return true;\n\t    }\n\n\t    return num !== null && typeof num === 'object' &&\n\t      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n\t  };\n\n\t  BN.max = function max (left, right) {\n\t    if (left.cmp(right) > 0) { return left; }\n\t    return right;\n\t  };\n\n\t  BN.min = function min (left, right) {\n\t    if (left.cmp(right) < 0) { return left; }\n\t    return right;\n\t  };\n\n\t  BN.prototype._init = function init (number, base, endian) {\n\t    if (typeof number === 'number') {\n\t      return this._initNumber(number, base, endian);\n\t    }\n\n\t    if (typeof number === 'object') {\n\t      return this._initArray(number, base, endian);\n\t    }\n\n\t    if (base === 'hex') {\n\t      base = 16;\n\t    }\n\t    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n\t    number = number.toString().replace(/\\s+/g, '');\n\t    var start = 0;\n\t    if (number[0] === '-') {\n\t      start++;\n\t    }\n\n\t    if (base === 16) {\n\t      this._parseHex(number, start);\n\t    } else {\n\t      this._parseBase(number, base, start);\n\t    }\n\n\t    if (number[0] === '-') {\n\t      this.negative = 1;\n\t    }\n\n\t    this.strip();\n\n\t    if (endian !== 'le') { return; }\n\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\n\t  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n\t    if (number < 0) {\n\t      this.negative = 1;\n\t      number = -number;\n\t    }\n\t    if (number < 0x4000000) {\n\t      this.words = [ number & 0x3ffffff ];\n\t      this.length = 1;\n\t    } else if (number < 0x10000000000000) {\n\t      this.words = [\n\t        number & 0x3ffffff,\n\t        (number / 0x4000000) & 0x3ffffff\n\t      ];\n\t      this.length = 2;\n\t    } else {\n\t      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\t      this.words = [\n\t        number & 0x3ffffff,\n\t        (number / 0x4000000) & 0x3ffffff,\n\t        1\n\t      ];\n\t      this.length = 3;\n\t    }\n\n\t    if (endian !== 'le') { return; }\n\n\t    // Reverse the bytes\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\n\t  BN.prototype._initArray = function _initArray (number, base, endian) {\n\t    var this$1 = this;\n\n\t    // Perhaps a Uint8Array\n\t    assert(typeof number.length === 'number');\n\t    if (number.length <= 0) {\n\t      this.words = [ 0 ];\n\t      this.length = 1;\n\t      return this;\n\t    }\n\n\t    this.length = Math.ceil(number.length / 3);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this$1.words[i] = 0;\n\t    }\n\n\t    var j, w;\n\t    var off = 0;\n\t    if (endian === 'be') {\n\t      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n\t        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n\t        this$1.words[j] |= (w << off) & 0x3ffffff;\n\t        this$1.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    } else if (endian === 'le') {\n\t      for (i = 0, j = 0; i < number.length; i += 3) {\n\t        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n\t        this$1.words[j] |= (w << off) & 0x3ffffff;\n\t        this$1.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    }\n\t    return this.strip();\n\t  };\n\n\t  function parseHex (str, start, end) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\n\t      r <<= 4;\n\n\t      // 'a' - 'f'\n\t      if (c >= 49 && c <= 54) {\n\t        r |= c - 49 + 0xa;\n\n\t      // 'A' - 'F'\n\t      } else if (c >= 17 && c <= 22) {\n\t        r |= c - 17 + 0xa;\n\n\t      // '0' - '9'\n\t      } else {\n\t        r |= c & 0xf;\n\t      }\n\t    }\n\t    return r;\n\t  }\n\n\t  BN.prototype._parseHex = function _parseHex (number, start) {\n\t    var this$1 = this;\n\n\t    // Create possibly bigger array to ensure that it fits the number\n\t    this.length = Math.ceil((number.length - start) / 6);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this$1.words[i] = 0;\n\t    }\n\n\t    var j, w;\n\t    // Scan 24-bit chunks and add them to the number\n\t    var off = 0;\n\t    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n\t      w = parseHex(number, i, i + 6);\n\t      this$1.words[j] |= (w << off) & 0x3ffffff;\n\t      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\t      this$1.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n\t      off += 24;\n\t      if (off >= 26) {\n\t        off -= 26;\n\t        j++;\n\t      }\n\t    }\n\t    if (i + 6 !== start) {\n\t      w = parseHex(number, start, i + 6);\n\t      this.words[j] |= (w << off) & 0x3ffffff;\n\t      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n\t    }\n\t    this.strip();\n\t  };\n\n\t  function parseBase (str, start, end, mul) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\n\t      r *= mul;\n\n\t      // 'a'\n\t      if (c >= 49) {\n\t        r += c - 49 + 0xa;\n\n\t      // 'A'\n\t      } else if (c >= 17) {\n\t        r += c - 17 + 0xa;\n\n\t      // '0' - '9'\n\t      } else {\n\t        r += c;\n\t      }\n\t    }\n\t    return r;\n\t  }\n\n\t  BN.prototype._parseBase = function _parseBase (number, base, start) {\n\t    var this$1 = this;\n\n\t    // Initialize as zero\n\t    this.words = [ 0 ];\n\t    this.length = 1;\n\n\t    // Find length of limb in base\n\t    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n\t      limbLen++;\n\t    }\n\t    limbLen--;\n\t    limbPow = (limbPow / base) | 0;\n\n\t    var total = number.length - start;\n\t    var mod = total % limbLen;\n\t    var end = Math.min(total, total - mod) + start;\n\n\t    var word = 0;\n\t    for (var i = start; i < end; i += limbLen) {\n\t      word = parseBase(number, i, i + limbLen, base);\n\n\t      this$1.imuln(limbPow);\n\t      if (this$1.words[0] + word < 0x4000000) {\n\t        this$1.words[0] += word;\n\t      } else {\n\t        this$1._iaddn(word);\n\t      }\n\t    }\n\n\t    if (mod !== 0) {\n\t      var pow = 1;\n\t      word = parseBase(number, i, number.length, base);\n\n\t      for (i = 0; i < mod; i++) {\n\t        pow *= base;\n\t      }\n\n\t      this.imuln(pow);\n\t      if (this.words[0] + word < 0x4000000) {\n\t        this.words[0] += word;\n\t      } else {\n\t        this._iaddn(word);\n\t      }\n\t    }\n\t  };\n\n\t  BN.prototype.copy = function copy (dest) {\n\t    var this$1 = this;\n\n\t    dest.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      dest.words[i] = this$1.words[i];\n\t    }\n\t    dest.length = this.length;\n\t    dest.negative = this.negative;\n\t    dest.red = this.red;\n\t  };\n\n\t  BN.prototype.clone = function clone () {\n\t    var r = new BN(null);\n\t    this.copy(r);\n\t    return r;\n\t  };\n\n\t  BN.prototype._expand = function _expand (size) {\n\t    var this$1 = this;\n\n\t    while (this.length < size) {\n\t      this$1.words[this$1.length++] = 0;\n\t    }\n\t    return this;\n\t  };\n\n\t  // Remove leading `0` from `this`\n\t  BN.prototype.strip = function strip () {\n\t    var this$1 = this;\n\n\t    while (this.length > 1 && this.words[this.length - 1] === 0) {\n\t      this$1.length--;\n\t    }\n\t    return this._normSign();\n\t  };\n\n\t  BN.prototype._normSign = function _normSign () {\n\t    // -0 = 0\n\t    if (this.length === 1 && this.words[0] === 0) {\n\t      this.negative = 0;\n\t    }\n\t    return this;\n\t  };\n\n\t  BN.prototype.inspect = function inspect () {\n\t    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n\t  };\n\n\t  /*\n\n\t  var zeros = [];\n\t  var groupSizes = [];\n\t  var groupBases = [];\n\n\t  var s = '';\n\t  var i = -1;\n\t  while (++i < BN.wordSize) {\n\t    zeros[i] = s;\n\t    s += '0';\n\t  }\n\t  groupSizes[0] = 0;\n\t  groupSizes[1] = 0;\n\t  groupBases[0] = 0;\n\t  groupBases[1] = 0;\n\t  var base = 2 - 1;\n\t  while (++base < 36 + 1) {\n\t    var groupSize = 0;\n\t    var groupBase = 1;\n\t    while (groupBase < (1 << BN.wordSize) / base) {\n\t      groupBase *= base;\n\t      groupSize += 1;\n\t    }\n\t    groupSizes[base] = groupSize;\n\t    groupBases[base] = groupBase;\n\t  }\n\n\t  */\n\n\t  var zeros = [\n\t    '',\n\t    '0',\n\t    '00',\n\t    '000',\n\t    '0000',\n\t    '00000',\n\t    '000000',\n\t    '0000000',\n\t    '00000000',\n\t    '000000000',\n\t    '0000000000',\n\t    '00000000000',\n\t    '000000000000',\n\t    '0000000000000',\n\t    '00000000000000',\n\t    '000000000000000',\n\t    '0000000000000000',\n\t    '00000000000000000',\n\t    '000000000000000000',\n\t    '0000000000000000000',\n\t    '00000000000000000000',\n\t    '000000000000000000000',\n\t    '0000000000000000000000',\n\t    '00000000000000000000000',\n\t    '000000000000000000000000',\n\t    '0000000000000000000000000'\n\t  ];\n\n\t  var groupSizes = [\n\t    0, 0,\n\t    25, 16, 12, 11, 10, 9, 8,\n\t    8, 7, 7, 7, 7, 6, 6,\n\t    6, 6, 6, 6, 6, 5, 5,\n\t    5, 5, 5, 5, 5, 5, 5,\n\t    5, 5, 5, 5, 5, 5, 5\n\t  ];\n\n\t  var groupBases = [\n\t    0, 0,\n\t    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n\t    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n\t    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n\t    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n\t    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n\t  ];\n\n\t  BN.prototype.toString = function toString (base, padding) {\n\t    var this$1 = this;\n\n\t    base = base || 10;\n\t    padding = padding | 0 || 1;\n\n\t    var out;\n\t    if (base === 16 || base === 'hex') {\n\t      out = '';\n\t      var off = 0;\n\t      var carry = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        var w = this$1.words[i];\n\t        var word = (((w << off) | carry) & 0xffffff).toString(16);\n\t        carry = (w >>> (24 - off)) & 0xffffff;\n\t        if (carry !== 0 || i !== this$1.length - 1) {\n\t          out = zeros[6 - word.length] + word + out;\n\t        } else {\n\t          out = word + out;\n\t        }\n\t        off += 2;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          i--;\n\t        }\n\t      }\n\t      if (carry !== 0) {\n\t        out = carry.toString(16) + out;\n\t      }\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }\n\t      if (this.negative !== 0) {\n\t        out = '-' + out;\n\t      }\n\t      return out;\n\t    }\n\n\t    if (base === (base | 0) && base >= 2 && base <= 36) {\n\t      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n\t      var groupSize = groupSizes[base];\n\t      // var groupBase = Math.pow(base, groupSize);\n\t      var groupBase = groupBases[base];\n\t      out = '';\n\t      var c = this.clone();\n\t      c.negative = 0;\n\t      while (!c.isZero()) {\n\t        var r = c.modn(groupBase).toString(base);\n\t        c = c.idivn(groupBase);\n\n\t        if (!c.isZero()) {\n\t          out = zeros[groupSize - r.length] + r + out;\n\t        } else {\n\t          out = r + out;\n\t        }\n\t      }\n\t      if (this.isZero()) {\n\t        out = '0' + out;\n\t      }\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }\n\t      if (this.negative !== 0) {\n\t        out = '-' + out;\n\t      }\n\t      return out;\n\t    }\n\n\t    assert(false, 'Base should be between 2 and 36');\n\t  };\n\n\t  BN.prototype.toNumber = function toNumber () {\n\t    var ret = this.words[0];\n\t    if (this.length === 2) {\n\t      ret += this.words[1] * 0x4000000;\n\t    } else if (this.length === 3 && this.words[2] === 0x01) {\n\t      // NOTE: at this stage it is known that the top bit is set\n\t      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n\t    } else if (this.length > 2) {\n\t      assert(false, 'Number can only safely store up to 53 bits');\n\t    }\n\t    return (this.negative !== 0) ? -ret : ret;\n\t  };\n\n\t  BN.prototype.toJSON = function toJSON () {\n\t    return this.toString(16);\n\t  };\n\n\t  BN.prototype.toBuffer = function toBuffer (endian, length) {\n\t    assert(typeof Buffer$$1 !== 'undefined');\n\t    return this.toArrayLike(Buffer$$1, endian, length);\n\t  };\n\n\t  BN.prototype.toArray = function toArray (endian, length) {\n\t    return this.toArrayLike(Array, endian, length);\n\t  };\n\n\t  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n\t    var byteLength = this.byteLength();\n\t    var reqLength = length || Math.max(1, byteLength);\n\t    assert(byteLength <= reqLength, 'byte array longer than desired length');\n\t    assert(reqLength > 0, 'Requested array length <= 0');\n\n\t    this.strip();\n\t    var littleEndian = endian === 'le';\n\t    var res = new ArrayType(reqLength);\n\n\t    var b, i;\n\t    var q = this.clone();\n\t    if (!littleEndian) {\n\t      // Assume big-endian\n\t      for (i = 0; i < reqLength - byteLength; i++) {\n\t        res[i] = 0;\n\t      }\n\n\t      for (i = 0; !q.isZero(); i++) {\n\t        b = q.andln(0xff);\n\t        q.iushrn(8);\n\n\t        res[reqLength - i - 1] = b;\n\t      }\n\t    } else {\n\t      for (i = 0; !q.isZero(); i++) {\n\t        b = q.andln(0xff);\n\t        q.iushrn(8);\n\n\t        res[i] = b;\n\t      }\n\n\t      for (; i < reqLength; i++) {\n\t        res[i] = 0;\n\t      }\n\t    }\n\n\t    return res;\n\t  };\n\n\t  if (Math.clz32) {\n\t    BN.prototype._countBits = function _countBits (w) {\n\t      return 32 - Math.clz32(w);\n\t    };\n\t  } else {\n\t    BN.prototype._countBits = function _countBits (w) {\n\t      var t = w;\n\t      var r = 0;\n\t      if (t >= 0x1000) {\n\t        r += 13;\n\t        t >>>= 13;\n\t      }\n\t      if (t >= 0x40) {\n\t        r += 7;\n\t        t >>>= 7;\n\t      }\n\t      if (t >= 0x8) {\n\t        r += 4;\n\t        t >>>= 4;\n\t      }\n\t      if (t >= 0x02) {\n\t        r += 2;\n\t        t >>>= 2;\n\t      }\n\t      return r + t;\n\t    };\n\t  }\n\n\t  BN.prototype._zeroBits = function _zeroBits (w) {\n\t    // Short-cut\n\t    if (w === 0) { return 26; }\n\n\t    var t = w;\n\t    var r = 0;\n\t    if ((t & 0x1fff) === 0) {\n\t      r += 13;\n\t      t >>>= 13;\n\t    }\n\t    if ((t & 0x7f) === 0) {\n\t      r += 7;\n\t      t >>>= 7;\n\t    }\n\t    if ((t & 0xf) === 0) {\n\t      r += 4;\n\t      t >>>= 4;\n\t    }\n\t    if ((t & 0x3) === 0) {\n\t      r += 2;\n\t      t >>>= 2;\n\t    }\n\t    if ((t & 0x1) === 0) {\n\t      r++;\n\t    }\n\t    return r;\n\t  };\n\n\t  // Return number of used bits in a BN\n\t  BN.prototype.bitLength = function bitLength () {\n\t    var w = this.words[this.length - 1];\n\t    var hi = this._countBits(w);\n\t    return (this.length - 1) * 26 + hi;\n\t  };\n\n\t  function toBitArray (num) {\n\t    var w = new Array(num.bitLength());\n\n\t    for (var bit = 0; bit < w.length; bit++) {\n\t      var off = (bit / 26) | 0;\n\t      var wbit = bit % 26;\n\n\t      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n\t    }\n\n\t    return w;\n\t  }\n\n\t  // Number of trailing zero bits\n\t  BN.prototype.zeroBits = function zeroBits () {\n\t    var this$1 = this;\n\n\t    if (this.isZero()) { return 0; }\n\n\t    var r = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var b = this$1._zeroBits(this$1.words[i]);\n\t      r += b;\n\t      if (b !== 26) { break; }\n\t    }\n\t    return r;\n\t  };\n\n\t  BN.prototype.byteLength = function byteLength () {\n\t    return Math.ceil(this.bitLength() / 8);\n\t  };\n\n\t  BN.prototype.toTwos = function toTwos (width) {\n\t    if (this.negative !== 0) {\n\t      return this.abs().inotn(width).iaddn(1);\n\t    }\n\t    return this.clone();\n\t  };\n\n\t  BN.prototype.fromTwos = function fromTwos (width) {\n\t    if (this.testn(width - 1)) {\n\t      return this.notn(width).iaddn(1).ineg();\n\t    }\n\t    return this.clone();\n\t  };\n\n\t  BN.prototype.isNeg = function isNeg () {\n\t    return this.negative !== 0;\n\t  };\n\n\t  // Return negative clone of `this`\n\t  BN.prototype.neg = function neg () {\n\t    return this.clone().ineg();\n\t  };\n\n\t  BN.prototype.ineg = function ineg () {\n\t    if (!this.isZero()) {\n\t      this.negative ^= 1;\n\t    }\n\n\t    return this;\n\t  };\n\n\t  // Or `num` with `this` in-place\n\t  BN.prototype.iuor = function iuor (num) {\n\t    var this$1 = this;\n\n\t    while (this.length < num.length) {\n\t      this$1.words[this$1.length++] = 0;\n\t    }\n\n\t    for (var i = 0; i < num.length; i++) {\n\t      this$1.words[i] = this$1.words[i] | num.words[i];\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ior = function ior (num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuor(num);\n\t  };\n\n\t  // Or `num` with `this`\n\t  BN.prototype.or = function or (num) {\n\t    if (this.length > num.length) { return this.clone().ior(num); }\n\t    return num.clone().ior(this);\n\t  };\n\n\t  BN.prototype.uor = function uor (num) {\n\t    if (this.length > num.length) { return this.clone().iuor(num); }\n\t    return num.clone().iuor(this);\n\t  };\n\n\t  // And `num` with `this` in-place\n\t  BN.prototype.iuand = function iuand (num) {\n\t    var this$1 = this;\n\n\t    // b = min-length(num, this)\n\t    var b;\n\t    if (this.length > num.length) {\n\t      b = num;\n\t    } else {\n\t      b = this;\n\t    }\n\n\t    for (var i = 0; i < b.length; i++) {\n\t      this$1.words[i] = this$1.words[i] & num.words[i];\n\t    }\n\n\t    this.length = b.length;\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.iand = function iand (num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuand(num);\n\t  };\n\n\t  // And `num` with `this`\n\t  BN.prototype.and = function and (num) {\n\t    if (this.length > num.length) { return this.clone().iand(num); }\n\t    return num.clone().iand(this);\n\t  };\n\n\t  BN.prototype.uand = function uand (num) {\n\t    if (this.length > num.length) { return this.clone().iuand(num); }\n\t    return num.clone().iuand(this);\n\t  };\n\n\t  // Xor `num` with `this` in-place\n\t  BN.prototype.iuxor = function iuxor (num) {\n\t    var this$1 = this;\n\n\t    // a.length > b.length\n\t    var a;\n\t    var b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\n\t    for (var i = 0; i < b.length; i++) {\n\t      this$1.words[i] = a.words[i] ^ b.words[i];\n\t    }\n\n\t    if (this !== a) {\n\t      for (; i < a.length; i++) {\n\t        this$1.words[i] = a.words[i];\n\t      }\n\t    }\n\n\t    this.length = a.length;\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ixor = function ixor (num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuxor(num);\n\t  };\n\n\t  // Xor `num` with `this`\n\t  BN.prototype.xor = function xor (num) {\n\t    if (this.length > num.length) { return this.clone().ixor(num); }\n\t    return num.clone().ixor(this);\n\t  };\n\n\t  BN.prototype.uxor = function uxor (num) {\n\t    if (this.length > num.length) { return this.clone().iuxor(num); }\n\t    return num.clone().iuxor(this);\n\t  };\n\n\t  // Not ``this`` with ``width`` bitwidth\n\t  BN.prototype.inotn = function inotn (width) {\n\t    var this$1 = this;\n\n\t    assert(typeof width === 'number' && width >= 0);\n\n\t    var bytesNeeded = Math.ceil(width / 26) | 0;\n\t    var bitsLeft = width % 26;\n\n\t    // Extend the buffer with leading zeroes\n\t    this._expand(bytesNeeded);\n\n\t    if (bitsLeft > 0) {\n\t      bytesNeeded--;\n\t    }\n\n\t    // Handle complete words\n\t    for (var i = 0; i < bytesNeeded; i++) {\n\t      this$1.words[i] = ~this$1.words[i] & 0x3ffffff;\n\t    }\n\n\t    // Handle the residue\n\t    if (bitsLeft > 0) {\n\t      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n\t    }\n\n\t    // And remove leading zeroes\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.notn = function notn (width) {\n\t    return this.clone().inotn(width);\n\t  };\n\n\t  // Set `bit` of `this`\n\t  BN.prototype.setn = function setn (bit, val) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\n\t    var off = (bit / 26) | 0;\n\t    var wbit = bit % 26;\n\n\t    this._expand(off + 1);\n\n\t    if (val) {\n\t      this.words[off] = this.words[off] | (1 << wbit);\n\t    } else {\n\t      this.words[off] = this.words[off] & ~(1 << wbit);\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  // Add `num` to `this` in-place\n\t  BN.prototype.iadd = function iadd (num) {\n\t    var this$1 = this;\n\n\t    var r;\n\n\t    // negative + positive\n\t    if (this.negative !== 0 && num.negative === 0) {\n\t      this.negative = 0;\n\t      r = this.isub(num);\n\t      this.negative ^= 1;\n\t      return this._normSign();\n\n\t    // positive + negative\n\t    } else if (this.negative === 0 && num.negative !== 0) {\n\t      num.negative = 0;\n\t      r = this.isub(num);\n\t      num.negative = 1;\n\t      return r._normSign();\n\t    }\n\n\t    // a.length > b.length\n\t    var a, b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      r = (a.words[i] | 0) + carry;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\n\t    this.length = a.length;\n\t    if (carry !== 0) {\n\t      this.words[this.length] = carry;\n\t      this.length++;\n\t    // Copy the rest of the words\n\t    } else if (a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this$1.words[i] = a.words[i];\n\t      }\n\t    }\n\n\t    return this;\n\t  };\n\n\t  // Add `num` to `this`\n\t  BN.prototype.add = function add (num) {\n\t    var res;\n\t    if (num.negative !== 0 && this.negative === 0) {\n\t      num.negative = 0;\n\t      res = this.sub(num);\n\t      num.negative ^= 1;\n\t      return res;\n\t    } else if (num.negative === 0 && this.negative !== 0) {\n\t      this.negative = 0;\n\t      res = num.sub(this);\n\t      this.negative = 1;\n\t      return res;\n\t    }\n\n\t    if (this.length > num.length) { return this.clone().iadd(num); }\n\n\t    return num.clone().iadd(this);\n\t  };\n\n\t  // Subtract `num` from `this` in-place\n\t  BN.prototype.isub = function isub (num) {\n\t    var this$1 = this;\n\n\t    // this - (-num) = this + num\n\t    if (num.negative !== 0) {\n\t      num.negative = 0;\n\t      var r = this.iadd(num);\n\t      num.negative = 1;\n\t      return r._normSign();\n\n\t    // -this - num = -(this + num)\n\t    } else if (this.negative !== 0) {\n\t      this.negative = 0;\n\t      this.iadd(num);\n\t      this.negative = 1;\n\t      return this._normSign();\n\t    }\n\n\t    // At this point both numbers are positive\n\t    var cmp = this.cmp(num);\n\n\t    // Optimization - zeroify\n\t    if (cmp === 0) {\n\t      this.negative = 0;\n\t      this.length = 1;\n\t      this.words[0] = 0;\n\t      return this;\n\t    }\n\n\t    // a > b\n\t    var a, b;\n\t    if (cmp > 0) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n\t      carry = r >> 26;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      r = (a.words[i] | 0) + carry;\n\t      carry = r >> 26;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t    }\n\n\t    // Copy rest of the words\n\t    if (carry === 0 && i < a.length && a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this$1.words[i] = a.words[i];\n\t      }\n\t    }\n\n\t    this.length = Math.max(this.length, i);\n\n\t    if (a !== this) {\n\t      this.negative = 1;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  // Subtract `num` from `this`\n\t  BN.prototype.sub = function sub (num) {\n\t    return this.clone().isub(num);\n\t  };\n\n\t  function smallMulTo (self, num, out) {\n\t    out.negative = num.negative ^ self.negative;\n\t    var len = (self.length + num.length) | 0;\n\t    out.length = len;\n\t    len = (len - 1) | 0;\n\n\t    // Peel one iteration (compiler can't do it, because of code complexity)\n\t    var a = self.words[0] | 0;\n\t    var b = num.words[0] | 0;\n\t    var r = a * b;\n\n\t    var lo = r & 0x3ffffff;\n\t    var carry = (r / 0x4000000) | 0;\n\t    out.words[0] = lo;\n\n\t    for (var k = 1; k < len; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = carry >>> 26;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n\t        var i = (k - j) | 0;\n\t        a = self.words[i] | 0;\n\t        b = num.words[j] | 0;\n\t        r = a * b + rword;\n\t        ncarry += (r / 0x4000000) | 0;\n\t        rword = r & 0x3ffffff;\n\t      }\n\t      out.words[k] = rword | 0;\n\t      carry = ncarry | 0;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry | 0;\n\t    } else {\n\t      out.length--;\n\t    }\n\n\t    return out.strip();\n\t  }\n\n\t  // TODO(indutny): it may be reasonable to omit it for users who don't need\n\t  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n\t  // multiplication (like elliptic secp256k1).\n\t  var comb10MulTo = function comb10MulTo (self, num, out) {\n\t    var a = self.words;\n\t    var b = num.words;\n\t    var o = out.words;\n\t    var c = 0;\n\t    var lo;\n\t    var mid;\n\t    var hi;\n\t    var a0 = a[0] | 0;\n\t    var al0 = a0 & 0x1fff;\n\t    var ah0 = a0 >>> 13;\n\t    var a1 = a[1] | 0;\n\t    var al1 = a1 & 0x1fff;\n\t    var ah1 = a1 >>> 13;\n\t    var a2 = a[2] | 0;\n\t    var al2 = a2 & 0x1fff;\n\t    var ah2 = a2 >>> 13;\n\t    var a3 = a[3] | 0;\n\t    var al3 = a3 & 0x1fff;\n\t    var ah3 = a3 >>> 13;\n\t    var a4 = a[4] | 0;\n\t    var al4 = a4 & 0x1fff;\n\t    var ah4 = a4 >>> 13;\n\t    var a5 = a[5] | 0;\n\t    var al5 = a5 & 0x1fff;\n\t    var ah5 = a5 >>> 13;\n\t    var a6 = a[6] | 0;\n\t    var al6 = a6 & 0x1fff;\n\t    var ah6 = a6 >>> 13;\n\t    var a7 = a[7] | 0;\n\t    var al7 = a7 & 0x1fff;\n\t    var ah7 = a7 >>> 13;\n\t    var a8 = a[8] | 0;\n\t    var al8 = a8 & 0x1fff;\n\t    var ah8 = a8 >>> 13;\n\t    var a9 = a[9] | 0;\n\t    var al9 = a9 & 0x1fff;\n\t    var ah9 = a9 >>> 13;\n\t    var b0 = b[0] | 0;\n\t    var bl0 = b0 & 0x1fff;\n\t    var bh0 = b0 >>> 13;\n\t    var b1 = b[1] | 0;\n\t    var bl1 = b1 & 0x1fff;\n\t    var bh1 = b1 >>> 13;\n\t    var b2 = b[2] | 0;\n\t    var bl2 = b2 & 0x1fff;\n\t    var bh2 = b2 >>> 13;\n\t    var b3 = b[3] | 0;\n\t    var bl3 = b3 & 0x1fff;\n\t    var bh3 = b3 >>> 13;\n\t    var b4 = b[4] | 0;\n\t    var bl4 = b4 & 0x1fff;\n\t    var bh4 = b4 >>> 13;\n\t    var b5 = b[5] | 0;\n\t    var bl5 = b5 & 0x1fff;\n\t    var bh5 = b5 >>> 13;\n\t    var b6 = b[6] | 0;\n\t    var bl6 = b6 & 0x1fff;\n\t    var bh6 = b6 >>> 13;\n\t    var b7 = b[7] | 0;\n\t    var bl7 = b7 & 0x1fff;\n\t    var bh7 = b7 >>> 13;\n\t    var b8 = b[8] | 0;\n\t    var bl8 = b8 & 0x1fff;\n\t    var bh8 = b8 >>> 13;\n\t    var b9 = b[9] | 0;\n\t    var bl9 = b9 & 0x1fff;\n\t    var bh9 = b9 >>> 13;\n\n\t    out.negative = self.negative ^ num.negative;\n\t    out.length = 19;\n\t    /* k = 0 */\n\t    lo = Math.imul(al0, bl0);\n\t    mid = Math.imul(al0, bh0);\n\t    mid = (mid + Math.imul(ah0, bl0)) | 0;\n\t    hi = Math.imul(ah0, bh0);\n\t    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n\t    w0 &= 0x3ffffff;\n\t    /* k = 1 */\n\t    lo = Math.imul(al1, bl0);\n\t    mid = Math.imul(al1, bh0);\n\t    mid = (mid + Math.imul(ah1, bl0)) | 0;\n\t    hi = Math.imul(ah1, bh0);\n\t    lo = (lo + Math.imul(al0, bl1)) | 0;\n\t    mid = (mid + Math.imul(al0, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh1)) | 0;\n\t    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n\t    w1 &= 0x3ffffff;\n\t    /* k = 2 */\n\t    lo = Math.imul(al2, bl0);\n\t    mid = Math.imul(al2, bh0);\n\t    mid = (mid + Math.imul(ah2, bl0)) | 0;\n\t    hi = Math.imul(ah2, bh0);\n\t    lo = (lo + Math.imul(al1, bl1)) | 0;\n\t    mid = (mid + Math.imul(al1, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh1)) | 0;\n\t    lo = (lo + Math.imul(al0, bl2)) | 0;\n\t    mid = (mid + Math.imul(al0, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh2)) | 0;\n\t    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n\t    w2 &= 0x3ffffff;\n\t    /* k = 3 */\n\t    lo = Math.imul(al3, bl0);\n\t    mid = Math.imul(al3, bh0);\n\t    mid = (mid + Math.imul(ah3, bl0)) | 0;\n\t    hi = Math.imul(ah3, bh0);\n\t    lo = (lo + Math.imul(al2, bl1)) | 0;\n\t    mid = (mid + Math.imul(al2, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh1)) | 0;\n\t    lo = (lo + Math.imul(al1, bl2)) | 0;\n\t    mid = (mid + Math.imul(al1, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh2)) | 0;\n\t    lo = (lo + Math.imul(al0, bl3)) | 0;\n\t    mid = (mid + Math.imul(al0, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh3)) | 0;\n\t    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n\t    w3 &= 0x3ffffff;\n\t    /* k = 4 */\n\t    lo = Math.imul(al4, bl0);\n\t    mid = Math.imul(al4, bh0);\n\t    mid = (mid + Math.imul(ah4, bl0)) | 0;\n\t    hi = Math.imul(ah4, bh0);\n\t    lo = (lo + Math.imul(al3, bl1)) | 0;\n\t    mid = (mid + Math.imul(al3, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh1)) | 0;\n\t    lo = (lo + Math.imul(al2, bl2)) | 0;\n\t    mid = (mid + Math.imul(al2, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh2)) | 0;\n\t    lo = (lo + Math.imul(al1, bl3)) | 0;\n\t    mid = (mid + Math.imul(al1, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh3)) | 0;\n\t    lo = (lo + Math.imul(al0, bl4)) | 0;\n\t    mid = (mid + Math.imul(al0, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh4)) | 0;\n\t    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n\t    w4 &= 0x3ffffff;\n\t    /* k = 5 */\n\t    lo = Math.imul(al5, bl0);\n\t    mid = Math.imul(al5, bh0);\n\t    mid = (mid + Math.imul(ah5, bl0)) | 0;\n\t    hi = Math.imul(ah5, bh0);\n\t    lo = (lo + Math.imul(al4, bl1)) | 0;\n\t    mid = (mid + Math.imul(al4, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh1)) | 0;\n\t    lo = (lo + Math.imul(al3, bl2)) | 0;\n\t    mid = (mid + Math.imul(al3, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh2)) | 0;\n\t    lo = (lo + Math.imul(al2, bl3)) | 0;\n\t    mid = (mid + Math.imul(al2, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh3)) | 0;\n\t    lo = (lo + Math.imul(al1, bl4)) | 0;\n\t    mid = (mid + Math.imul(al1, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh4)) | 0;\n\t    lo = (lo + Math.imul(al0, bl5)) | 0;\n\t    mid = (mid + Math.imul(al0, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh5)) | 0;\n\t    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n\t    w5 &= 0x3ffffff;\n\t    /* k = 6 */\n\t    lo = Math.imul(al6, bl0);\n\t    mid = Math.imul(al6, bh0);\n\t    mid = (mid + Math.imul(ah6, bl0)) | 0;\n\t    hi = Math.imul(ah6, bh0);\n\t    lo = (lo + Math.imul(al5, bl1)) | 0;\n\t    mid = (mid + Math.imul(al5, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh1)) | 0;\n\t    lo = (lo + Math.imul(al4, bl2)) | 0;\n\t    mid = (mid + Math.imul(al4, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh2)) | 0;\n\t    lo = (lo + Math.imul(al3, bl3)) | 0;\n\t    mid = (mid + Math.imul(al3, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh3)) | 0;\n\t    lo = (lo + Math.imul(al2, bl4)) | 0;\n\t    mid = (mid + Math.imul(al2, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh4)) | 0;\n\t    lo = (lo + Math.imul(al1, bl5)) | 0;\n\t    mid = (mid + Math.imul(al1, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh5)) | 0;\n\t    lo = (lo + Math.imul(al0, bl6)) | 0;\n\t    mid = (mid + Math.imul(al0, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh6)) | 0;\n\t    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n\t    w6 &= 0x3ffffff;\n\t    /* k = 7 */\n\t    lo = Math.imul(al7, bl0);\n\t    mid = Math.imul(al7, bh0);\n\t    mid = (mid + Math.imul(ah7, bl0)) | 0;\n\t    hi = Math.imul(ah7, bh0);\n\t    lo = (lo + Math.imul(al6, bl1)) | 0;\n\t    mid = (mid + Math.imul(al6, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh1)) | 0;\n\t    lo = (lo + Math.imul(al5, bl2)) | 0;\n\t    mid = (mid + Math.imul(al5, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh2)) | 0;\n\t    lo = (lo + Math.imul(al4, bl3)) | 0;\n\t    mid = (mid + Math.imul(al4, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh3)) | 0;\n\t    lo = (lo + Math.imul(al3, bl4)) | 0;\n\t    mid = (mid + Math.imul(al3, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh4)) | 0;\n\t    lo = (lo + Math.imul(al2, bl5)) | 0;\n\t    mid = (mid + Math.imul(al2, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh5)) | 0;\n\t    lo = (lo + Math.imul(al1, bl6)) | 0;\n\t    mid = (mid + Math.imul(al1, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh6)) | 0;\n\t    lo = (lo + Math.imul(al0, bl7)) | 0;\n\t    mid = (mid + Math.imul(al0, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh7)) | 0;\n\t    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n\t    w7 &= 0x3ffffff;\n\t    /* k = 8 */\n\t    lo = Math.imul(al8, bl0);\n\t    mid = Math.imul(al8, bh0);\n\t    mid = (mid + Math.imul(ah8, bl0)) | 0;\n\t    hi = Math.imul(ah8, bh0);\n\t    lo = (lo + Math.imul(al7, bl1)) | 0;\n\t    mid = (mid + Math.imul(al7, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh1)) | 0;\n\t    lo = (lo + Math.imul(al6, bl2)) | 0;\n\t    mid = (mid + Math.imul(al6, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh2)) | 0;\n\t    lo = (lo + Math.imul(al5, bl3)) | 0;\n\t    mid = (mid + Math.imul(al5, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh3)) | 0;\n\t    lo = (lo + Math.imul(al4, bl4)) | 0;\n\t    mid = (mid + Math.imul(al4, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh4)) | 0;\n\t    lo = (lo + Math.imul(al3, bl5)) | 0;\n\t    mid = (mid + Math.imul(al3, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh5)) | 0;\n\t    lo = (lo + Math.imul(al2, bl6)) | 0;\n\t    mid = (mid + Math.imul(al2, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh6)) | 0;\n\t    lo = (lo + Math.imul(al1, bl7)) | 0;\n\t    mid = (mid + Math.imul(al1, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh7)) | 0;\n\t    lo = (lo + Math.imul(al0, bl8)) | 0;\n\t    mid = (mid + Math.imul(al0, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh8)) | 0;\n\t    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n\t    w8 &= 0x3ffffff;\n\t    /* k = 9 */\n\t    lo = Math.imul(al9, bl0);\n\t    mid = Math.imul(al9, bh0);\n\t    mid = (mid + Math.imul(ah9, bl0)) | 0;\n\t    hi = Math.imul(ah9, bh0);\n\t    lo = (lo + Math.imul(al8, bl1)) | 0;\n\t    mid = (mid + Math.imul(al8, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh1)) | 0;\n\t    lo = (lo + Math.imul(al7, bl2)) | 0;\n\t    mid = (mid + Math.imul(al7, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh2)) | 0;\n\t    lo = (lo + Math.imul(al6, bl3)) | 0;\n\t    mid = (mid + Math.imul(al6, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh3)) | 0;\n\t    lo = (lo + Math.imul(al5, bl4)) | 0;\n\t    mid = (mid + Math.imul(al5, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh4)) | 0;\n\t    lo = (lo + Math.imul(al4, bl5)) | 0;\n\t    mid = (mid + Math.imul(al4, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh5)) | 0;\n\t    lo = (lo + Math.imul(al3, bl6)) | 0;\n\t    mid = (mid + Math.imul(al3, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh6)) | 0;\n\t    lo = (lo + Math.imul(al2, bl7)) | 0;\n\t    mid = (mid + Math.imul(al2, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh7)) | 0;\n\t    lo = (lo + Math.imul(al1, bl8)) | 0;\n\t    mid = (mid + Math.imul(al1, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh8)) | 0;\n\t    lo = (lo + Math.imul(al0, bl9)) | 0;\n\t    mid = (mid + Math.imul(al0, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh9)) | 0;\n\t    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n\t    w9 &= 0x3ffffff;\n\t    /* k = 10 */\n\t    lo = Math.imul(al9, bl1);\n\t    mid = Math.imul(al9, bh1);\n\t    mid = (mid + Math.imul(ah9, bl1)) | 0;\n\t    hi = Math.imul(ah9, bh1);\n\t    lo = (lo + Math.imul(al8, bl2)) | 0;\n\t    mid = (mid + Math.imul(al8, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh2)) | 0;\n\t    lo = (lo + Math.imul(al7, bl3)) | 0;\n\t    mid = (mid + Math.imul(al7, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh3)) | 0;\n\t    lo = (lo + Math.imul(al6, bl4)) | 0;\n\t    mid = (mid + Math.imul(al6, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh4)) | 0;\n\t    lo = (lo + Math.imul(al5, bl5)) | 0;\n\t    mid = (mid + Math.imul(al5, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh5)) | 0;\n\t    lo = (lo + Math.imul(al4, bl6)) | 0;\n\t    mid = (mid + Math.imul(al4, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh6)) | 0;\n\t    lo = (lo + Math.imul(al3, bl7)) | 0;\n\t    mid = (mid + Math.imul(al3, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh7)) | 0;\n\t    lo = (lo + Math.imul(al2, bl8)) | 0;\n\t    mid = (mid + Math.imul(al2, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh8)) | 0;\n\t    lo = (lo + Math.imul(al1, bl9)) | 0;\n\t    mid = (mid + Math.imul(al1, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh9)) | 0;\n\t    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n\t    w10 &= 0x3ffffff;\n\t    /* k = 11 */\n\t    lo = Math.imul(al9, bl2);\n\t    mid = Math.imul(al9, bh2);\n\t    mid = (mid + Math.imul(ah9, bl2)) | 0;\n\t    hi = Math.imul(ah9, bh2);\n\t    lo = (lo + Math.imul(al8, bl3)) | 0;\n\t    mid = (mid + Math.imul(al8, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh3)) | 0;\n\t    lo = (lo + Math.imul(al7, bl4)) | 0;\n\t    mid = (mid + Math.imul(al7, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh4)) | 0;\n\t    lo = (lo + Math.imul(al6, bl5)) | 0;\n\t    mid = (mid + Math.imul(al6, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh5)) | 0;\n\t    lo = (lo + Math.imul(al5, bl6)) | 0;\n\t    mid = (mid + Math.imul(al5, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh6)) | 0;\n\t    lo = (lo + Math.imul(al4, bl7)) | 0;\n\t    mid = (mid + Math.imul(al4, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh7)) | 0;\n\t    lo = (lo + Math.imul(al3, bl8)) | 0;\n\t    mid = (mid + Math.imul(al3, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh8)) | 0;\n\t    lo = (lo + Math.imul(al2, bl9)) | 0;\n\t    mid = (mid + Math.imul(al2, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh9)) | 0;\n\t    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n\t    w11 &= 0x3ffffff;\n\t    /* k = 12 */\n\t    lo = Math.imul(al9, bl3);\n\t    mid = Math.imul(al9, bh3);\n\t    mid = (mid + Math.imul(ah9, bl3)) | 0;\n\t    hi = Math.imul(ah9, bh3);\n\t    lo = (lo + Math.imul(al8, bl4)) | 0;\n\t    mid = (mid + Math.imul(al8, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh4)) | 0;\n\t    lo = (lo + Math.imul(al7, bl5)) | 0;\n\t    mid = (mid + Math.imul(al7, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh5)) | 0;\n\t    lo = (lo + Math.imul(al6, bl6)) | 0;\n\t    mid = (mid + Math.imul(al6, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh6)) | 0;\n\t    lo = (lo + Math.imul(al5, bl7)) | 0;\n\t    mid = (mid + Math.imul(al5, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh7)) | 0;\n\t    lo = (lo + Math.imul(al4, bl8)) | 0;\n\t    mid = (mid + Math.imul(al4, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh8)) | 0;\n\t    lo = (lo + Math.imul(al3, bl9)) | 0;\n\t    mid = (mid + Math.imul(al3, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh9)) | 0;\n\t    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n\t    w12 &= 0x3ffffff;\n\t    /* k = 13 */\n\t    lo = Math.imul(al9, bl4);\n\t    mid = Math.imul(al9, bh4);\n\t    mid = (mid + Math.imul(ah9, bl4)) | 0;\n\t    hi = Math.imul(ah9, bh4);\n\t    lo = (lo + Math.imul(al8, bl5)) | 0;\n\t    mid = (mid + Math.imul(al8, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh5)) | 0;\n\t    lo = (lo + Math.imul(al7, bl6)) | 0;\n\t    mid = (mid + Math.imul(al7, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh6)) | 0;\n\t    lo = (lo + Math.imul(al6, bl7)) | 0;\n\t    mid = (mid + Math.imul(al6, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh7)) | 0;\n\t    lo = (lo + Math.imul(al5, bl8)) | 0;\n\t    mid = (mid + Math.imul(al5, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh8)) | 0;\n\t    lo = (lo + Math.imul(al4, bl9)) | 0;\n\t    mid = (mid + Math.imul(al4, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh9)) | 0;\n\t    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n\t    w13 &= 0x3ffffff;\n\t    /* k = 14 */\n\t    lo = Math.imul(al9, bl5);\n\t    mid = Math.imul(al9, bh5);\n\t    mid = (mid + Math.imul(ah9, bl5)) | 0;\n\t    hi = Math.imul(ah9, bh5);\n\t    lo = (lo + Math.imul(al8, bl6)) | 0;\n\t    mid = (mid + Math.imul(al8, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh6)) | 0;\n\t    lo = (lo + Math.imul(al7, bl7)) | 0;\n\t    mid = (mid + Math.imul(al7, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh7)) | 0;\n\t    lo = (lo + Math.imul(al6, bl8)) | 0;\n\t    mid = (mid + Math.imul(al6, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh8)) | 0;\n\t    lo = (lo + Math.imul(al5, bl9)) | 0;\n\t    mid = (mid + Math.imul(al5, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh9)) | 0;\n\t    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n\t    w14 &= 0x3ffffff;\n\t    /* k = 15 */\n\t    lo = Math.imul(al9, bl6);\n\t    mid = Math.imul(al9, bh6);\n\t    mid = (mid + Math.imul(ah9, bl6)) | 0;\n\t    hi = Math.imul(ah9, bh6);\n\t    lo = (lo + Math.imul(al8, bl7)) | 0;\n\t    mid = (mid + Math.imul(al8, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh7)) | 0;\n\t    lo = (lo + Math.imul(al7, bl8)) | 0;\n\t    mid = (mid + Math.imul(al7, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh8)) | 0;\n\t    lo = (lo + Math.imul(al6, bl9)) | 0;\n\t    mid = (mid + Math.imul(al6, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh9)) | 0;\n\t    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n\t    w15 &= 0x3ffffff;\n\t    /* k = 16 */\n\t    lo = Math.imul(al9, bl7);\n\t    mid = Math.imul(al9, bh7);\n\t    mid = (mid + Math.imul(ah9, bl7)) | 0;\n\t    hi = Math.imul(ah9, bh7);\n\t    lo = (lo + Math.imul(al8, bl8)) | 0;\n\t    mid = (mid + Math.imul(al8, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh8)) | 0;\n\t    lo = (lo + Math.imul(al7, bl9)) | 0;\n\t    mid = (mid + Math.imul(al7, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh9)) | 0;\n\t    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n\t    w16 &= 0x3ffffff;\n\t    /* k = 17 */\n\t    lo = Math.imul(al9, bl8);\n\t    mid = Math.imul(al9, bh8);\n\t    mid = (mid + Math.imul(ah9, bl8)) | 0;\n\t    hi = Math.imul(ah9, bh8);\n\t    lo = (lo + Math.imul(al8, bl9)) | 0;\n\t    mid = (mid + Math.imul(al8, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh9)) | 0;\n\t    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n\t    w17 &= 0x3ffffff;\n\t    /* k = 18 */\n\t    lo = Math.imul(al9, bl9);\n\t    mid = Math.imul(al9, bh9);\n\t    mid = (mid + Math.imul(ah9, bl9)) | 0;\n\t    hi = Math.imul(ah9, bh9);\n\t    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n\t    w18 &= 0x3ffffff;\n\t    o[0] = w0;\n\t    o[1] = w1;\n\t    o[2] = w2;\n\t    o[3] = w3;\n\t    o[4] = w4;\n\t    o[5] = w5;\n\t    o[6] = w6;\n\t    o[7] = w7;\n\t    o[8] = w8;\n\t    o[9] = w9;\n\t    o[10] = w10;\n\t    o[11] = w11;\n\t    o[12] = w12;\n\t    o[13] = w13;\n\t    o[14] = w14;\n\t    o[15] = w15;\n\t    o[16] = w16;\n\t    o[17] = w17;\n\t    o[18] = w18;\n\t    if (c !== 0) {\n\t      o[19] = c;\n\t      out.length++;\n\t    }\n\t    return out;\n\t  };\n\n\t  // Polyfill comb\n\t  if (!Math.imul) {\n\t    comb10MulTo = smallMulTo;\n\t  }\n\n\t  function bigMulTo (self, num, out) {\n\t    out.negative = num.negative ^ self.negative;\n\t    out.length = self.length + num.length;\n\n\t    var carry = 0;\n\t    var hncarry = 0;\n\t    for (var k = 0; k < out.length - 1; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = hncarry;\n\t      hncarry = 0;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = self.words[i] | 0;\n\t        var b = num.words[j] | 0;\n\t        var r = a * b;\n\n\t        var lo = r & 0x3ffffff;\n\t        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n\t        lo = (lo + rword) | 0;\n\t        rword = lo & 0x3ffffff;\n\t        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n\t        hncarry += ncarry >>> 26;\n\t        ncarry &= 0x3ffffff;\n\t      }\n\t      out.words[k] = rword;\n\t      carry = ncarry;\n\t      ncarry = hncarry;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry;\n\t    } else {\n\t      out.length--;\n\t    }\n\n\t    return out.strip();\n\t  }\n\n\t  function jumboMulTo (self, num, out) {\n\t    var fftm = new FFTM();\n\t    return fftm.mulp(self, num, out);\n\t  }\n\n\t  BN.prototype.mulTo = function mulTo (num, out) {\n\t    var res;\n\t    var len = this.length + num.length;\n\t    if (this.length === 10 && num.length === 10) {\n\t      res = comb10MulTo(this, num, out);\n\t    } else if (len < 63) {\n\t      res = smallMulTo(this, num, out);\n\t    } else if (len < 1024) {\n\t      res = bigMulTo(this, num, out);\n\t    } else {\n\t      res = jumboMulTo(this, num, out);\n\t    }\n\n\t    return res;\n\t  };\n\n\t  // Cooley-Tukey algorithm for FFT\n\t  // slightly revisited to rely on looping instead of recursion\n\n\t  function FFTM (x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\n\t  FFTM.prototype.makeRBT = function makeRBT (N) {\n\t    var this$1 = this;\n\n\t    var t = new Array(N);\n\t    var l = BN.prototype._countBits(N) - 1;\n\t    for (var i = 0; i < N; i++) {\n\t      t[i] = this$1.revBin(i, l, N);\n\t    }\n\n\t    return t;\n\t  };\n\n\t  // Returns binary-reversed representation of `x`\n\t  FFTM.prototype.revBin = function revBin (x, l, N) {\n\t    if (x === 0 || x === N - 1) { return x; }\n\n\t    var rb = 0;\n\t    for (var i = 0; i < l; i++) {\n\t      rb |= (x & 1) << (l - i - 1);\n\t      x >>= 1;\n\t    }\n\n\t    return rb;\n\t  };\n\n\t  // Performs \"tweedling\" phase, therefore 'emulating'\n\t  // behaviour of the recursive algorithm\n\t  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n\t    for (var i = 0; i < N; i++) {\n\t      rtws[i] = rws[rbt[i]];\n\t      itws[i] = iws[rbt[i]];\n\t    }\n\t  };\n\n\t  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n\t    this.permute(rbt, rws, iws, rtws, itws, N);\n\n\t    for (var s = 1; s < N; s <<= 1) {\n\t      var l = s << 1;\n\n\t      var rtwdf = Math.cos(2 * Math.PI / l);\n\t      var itwdf = Math.sin(2 * Math.PI / l);\n\n\t      for (var p = 0; p < N; p += l) {\n\t        var rtwdf_ = rtwdf;\n\t        var itwdf_ = itwdf;\n\n\t        for (var j = 0; j < s; j++) {\n\t          var re = rtws[p + j];\n\t          var ie = itws[p + j];\n\n\t          var ro = rtws[p + j + s];\n\t          var io = itws[p + j + s];\n\n\t          var rx = rtwdf_ * ro - itwdf_ * io;\n\n\t          io = rtwdf_ * io + itwdf_ * ro;\n\t          ro = rx;\n\n\t          rtws[p + j] = re + ro;\n\t          itws[p + j] = ie + io;\n\n\t          rtws[p + j + s] = re - ro;\n\t          itws[p + j + s] = ie - io;\n\n\t          /* jshint maxdepth : false */\n\t          if (j !== l) {\n\t            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n\t            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n\t            rtwdf_ = rx;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n\t    var N = Math.max(m, n) | 1;\n\t    var odd = N & 1;\n\t    var i = 0;\n\t    for (N = N / 2 | 0; N; N = N >>> 1) {\n\t      i++;\n\t    }\n\n\t    return 1 << i + 1 + odd;\n\t  };\n\n\t  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n\t    if (N <= 1) { return; }\n\n\t    for (var i = 0; i < N / 2; i++) {\n\t      var t = rws[i];\n\n\t      rws[i] = rws[N - i - 1];\n\t      rws[N - i - 1] = t;\n\n\t      t = iws[i];\n\n\t      iws[i] = -iws[N - i - 1];\n\t      iws[N - i - 1] = -t;\n\t    }\n\t  };\n\n\t  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n\t    var carry = 0;\n\t    for (var i = 0; i < N / 2; i++) {\n\t      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n\t        Math.round(ws[2 * i] / N) +\n\t        carry;\n\n\t      ws[i] = w & 0x3ffffff;\n\n\t      if (w < 0x4000000) {\n\t        carry = 0;\n\t      } else {\n\t        carry = w / 0x4000000 | 0;\n\t      }\n\t    }\n\n\t    return ws;\n\t  };\n\n\t  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n\t    var carry = 0;\n\t    for (var i = 0; i < len; i++) {\n\t      carry = carry + (ws[i] | 0);\n\n\t      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n\t      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n\t    }\n\n\t    // Pad with zeroes\n\t    for (i = 2 * len; i < N; ++i) {\n\t      rws[i] = 0;\n\t    }\n\n\t    assert(carry === 0);\n\t    assert((carry & ~0x1fff) === 0);\n\t  };\n\n\t  FFTM.prototype.stub = function stub (N) {\n\t    var ph = new Array(N);\n\t    for (var i = 0; i < N; i++) {\n\t      ph[i] = 0;\n\t    }\n\n\t    return ph;\n\t  };\n\n\t  FFTM.prototype.mulp = function mulp (x, y, out) {\n\t    var N = 2 * this.guessLen13b(x.length, y.length);\n\n\t    var rbt = this.makeRBT(N);\n\n\t    var _ = this.stub(N);\n\n\t    var rws = new Array(N);\n\t    var rwst = new Array(N);\n\t    var iwst = new Array(N);\n\n\t    var nrws = new Array(N);\n\t    var nrwst = new Array(N);\n\t    var niwst = new Array(N);\n\n\t    var rmws = out.words;\n\t    rmws.length = N;\n\n\t    this.convert13b(x.words, x.length, rws, N);\n\t    this.convert13b(y.words, y.length, nrws, N);\n\n\t    this.transform(rws, _, rwst, iwst, N, rbt);\n\t    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n\t    for (var i = 0; i < N; i++) {\n\t      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n\t      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n\t      rwst[i] = rx;\n\t    }\n\n\t    this.conjugate(rwst, iwst, N);\n\t    this.transform(rwst, iwst, rmws, _, N, rbt);\n\t    this.conjugate(rmws, _, N);\n\t    this.normalize13b(rmws, N);\n\n\t    out.negative = x.negative ^ y.negative;\n\t    out.length = x.length + y.length;\n\t    return out.strip();\n\t  };\n\n\t  // Multiply `this` by `num`\n\t  BN.prototype.mul = function mul (num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return this.mulTo(num, out);\n\t  };\n\n\t  // Multiply employing FFT\n\t  BN.prototype.mulf = function mulf (num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return jumboMulTo(this, num, out);\n\t  };\n\n\t  // In-place Multiplication\n\t  BN.prototype.imul = function imul (num) {\n\t    return this.clone().mulTo(num, this);\n\t  };\n\n\t  BN.prototype.imuln = function imuln (num) {\n\t    var this$1 = this;\n\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\n\t    // Carry\n\t    var carry = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var w = (this$1.words[i] | 0) * num;\n\t      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\t      carry >>= 26;\n\t      carry += (w / 0x4000000) | 0;\n\t      // NOTE: lo is 27bit maximum\n\t      carry += lo >>> 26;\n\t      this$1.words[i] = lo & 0x3ffffff;\n\t    }\n\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\n\t    return this;\n\t  };\n\n\t  BN.prototype.muln = function muln (num) {\n\t    return this.clone().imuln(num);\n\t  };\n\n\t  // `this` * `this`\n\t  BN.prototype.sqr = function sqr () {\n\t    return this.mul(this);\n\t  };\n\n\t  // `this` * `this` in-place\n\t  BN.prototype.isqr = function isqr () {\n\t    return this.imul(this.clone());\n\t  };\n\n\t  // Math.pow(`this`, `num`)\n\t  BN.prototype.pow = function pow (num) {\n\t    var w = toBitArray(num);\n\t    if (w.length === 0) { return new BN(1); }\n\n\t    // Skip leading zeroes\n\t    var res = this;\n\t    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n\t      if (w[i] !== 0) { break; }\n\t    }\n\n\t    if (++i < w.length) {\n\t      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n\t        if (w[i] === 0) { continue; }\n\n\t        res = res.mul(q);\n\t      }\n\t    }\n\n\t    return res;\n\t  };\n\n\t  // Shift-left in-place\n\t  BN.prototype.iushln = function iushln (bits) {\n\t    var this$1 = this;\n\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n\t    var i;\n\n\t    if (r !== 0) {\n\t      var carry = 0;\n\n\t      for (i = 0; i < this.length; i++) {\n\t        var newCarry = this$1.words[i] & carryMask;\n\t        var c = ((this$1.words[i] | 0) - newCarry) << r;\n\t        this$1.words[i] = c | carry;\n\t        carry = newCarry >>> (26 - r);\n\t      }\n\n\t      if (carry) {\n\t        this.words[i] = carry;\n\t        this.length++;\n\t      }\n\t    }\n\n\t    if (s !== 0) {\n\t      for (i = this.length - 1; i >= 0; i--) {\n\t        this$1.words[i + s] = this$1.words[i];\n\t      }\n\n\t      for (i = 0; i < s; i++) {\n\t        this$1.words[i] = 0;\n\t      }\n\n\t      this.length += s;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ishln = function ishln (bits) {\n\t    // TODO(indutny): implement me\n\t    assert(this.negative === 0);\n\t    return this.iushln(bits);\n\t  };\n\n\t  // Shift-right in-place\n\t  // NOTE: `hint` is a lowest bit before trailing zeroes\n\t  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\t  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n\t    var this$1 = this;\n\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var h;\n\t    if (hint) {\n\t      h = (hint - (hint % 26)) / 26;\n\t    } else {\n\t      h = 0;\n\t    }\n\n\t    var r = bits % 26;\n\t    var s = Math.min((bits - r) / 26, this.length);\n\t    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n\t    var maskedWords = extended;\n\n\t    h -= s;\n\t    h = Math.max(0, h);\n\n\t    // Extended mode, copy masked part\n\t    if (maskedWords) {\n\t      for (var i = 0; i < s; i++) {\n\t        maskedWords.words[i] = this$1.words[i];\n\t      }\n\t      maskedWords.length = s;\n\t    }\n\n\t    if (s === 0) {\n\t      // No-op, we should not move anything at all\n\t    } else if (this.length > s) {\n\t      this.length -= s;\n\t      for (i = 0; i < this.length; i++) {\n\t        this$1.words[i] = this$1.words[i + s];\n\t      }\n\t    } else {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\n\t    var carry = 0;\n\t    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n\t      var word = this$1.words[i] | 0;\n\t      this$1.words[i] = (carry << (26 - r)) | (word >>> r);\n\t      carry = word & mask;\n\t    }\n\n\t    // Push carried bits as a mask\n\t    if (maskedWords && carry !== 0) {\n\t      maskedWords.words[maskedWords.length++] = carry;\n\t    }\n\n\t    if (this.length === 0) {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n\t    // TODO(indutny): implement me\n\t    assert(this.negative === 0);\n\t    return this.iushrn(bits, hint, extended);\n\t  };\n\n\t  // Shift-left\n\t  BN.prototype.shln = function shln (bits) {\n\t    return this.clone().ishln(bits);\n\t  };\n\n\t  BN.prototype.ushln = function ushln (bits) {\n\t    return this.clone().iushln(bits);\n\t  };\n\n\t  // Shift-right\n\t  BN.prototype.shrn = function shrn (bits) {\n\t    return this.clone().ishrn(bits);\n\t  };\n\n\t  BN.prototype.ushrn = function ushrn (bits) {\n\t    return this.clone().iushrn(bits);\n\t  };\n\n\t  // Test if n bit is set\n\t  BN.prototype.testn = function testn (bit) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) { return false; }\n\n\t    // Check bit and return\n\t    var w = this.words[s];\n\n\t    return !!(w & q);\n\t  };\n\n\t  // Return only lowers bits of number (in-place)\n\t  BN.prototype.imaskn = function imaskn (bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\n\t    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n\t    if (this.length <= s) {\n\t      return this;\n\t    }\n\n\t    if (r !== 0) {\n\t      s++;\n\t    }\n\t    this.length = Math.min(s, this.length);\n\n\t    if (r !== 0) {\n\t      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n\t      this.words[this.length - 1] &= mask;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  // Return only lowers bits of number\n\t  BN.prototype.maskn = function maskn (bits) {\n\t    return this.clone().imaskn(bits);\n\t  };\n\n\t  // Add plain number `num` to `this`\n\t  BN.prototype.iaddn = function iaddn (num) {\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\t    if (num < 0) { return this.isubn(-num); }\n\n\t    // Possible sign change\n\t    if (this.negative !== 0) {\n\t      if (this.length === 1 && (this.words[0] | 0) < num) {\n\t        this.words[0] = num - (this.words[0] | 0);\n\t        this.negative = 0;\n\t        return this;\n\t      }\n\n\t      this.negative = 0;\n\t      this.isubn(num);\n\t      this.negative = 1;\n\t      return this;\n\t    }\n\n\t    // Add without checks\n\t    return this._iaddn(num);\n\t  };\n\n\t  BN.prototype._iaddn = function _iaddn (num) {\n\t    var this$1 = this;\n\n\t    this.words[0] += num;\n\n\t    // Carry\n\t    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n\t      this$1.words[i] -= 0x4000000;\n\t      if (i === this$1.length - 1) {\n\t        this$1.words[i + 1] = 1;\n\t      } else {\n\t        this$1.words[i + 1]++;\n\t      }\n\t    }\n\t    this.length = Math.max(this.length, i + 1);\n\n\t    return this;\n\t  };\n\n\t  // Subtract plain number `num` from `this`\n\t  BN.prototype.isubn = function isubn (num) {\n\t    var this$1 = this;\n\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\t    if (num < 0) { return this.iaddn(-num); }\n\n\t    if (this.negative !== 0) {\n\t      this.negative = 0;\n\t      this.iaddn(num);\n\t      this.negative = 1;\n\t      return this;\n\t    }\n\n\t    this.words[0] -= num;\n\n\t    if (this.length === 1 && this.words[0] < 0) {\n\t      this.words[0] = -this.words[0];\n\t      this.negative = 1;\n\t    } else {\n\t      // Carry\n\t      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n\t        this$1.words[i] += 0x4000000;\n\t        this$1.words[i + 1] -= 1;\n\t      }\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.addn = function addn (num) {\n\t    return this.clone().iaddn(num);\n\t  };\n\n\t  BN.prototype.subn = function subn (num) {\n\t    return this.clone().isubn(num);\n\t  };\n\n\t  BN.prototype.iabs = function iabs () {\n\t    this.negative = 0;\n\n\t    return this;\n\t  };\n\n\t  BN.prototype.abs = function abs () {\n\t    return this.clone().iabs();\n\t  };\n\n\t  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n\t    var this$1 = this;\n\n\t    var len = num.length + shift;\n\t    var i;\n\n\t    this._expand(len);\n\n\t    var w;\n\t    var carry = 0;\n\t    for (i = 0; i < num.length; i++) {\n\t      w = (this$1.words[i + shift] | 0) + carry;\n\t      var right = (num.words[i] | 0) * mul;\n\t      w -= right & 0x3ffffff;\n\t      carry = (w >> 26) - ((right / 0x4000000) | 0);\n\t      this$1.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t    for (; i < this.length - shift; i++) {\n\t      w = (this$1.words[i + shift] | 0) + carry;\n\t      carry = w >> 26;\n\t      this$1.words[i + shift] = w & 0x3ffffff;\n\t    }\n\n\t    if (carry === 0) { return this.strip(); }\n\n\t    // Subtraction overflow\n\t    assert(carry === -1);\n\t    carry = 0;\n\t    for (i = 0; i < this.length; i++) {\n\t      w = -(this$1.words[i] | 0) + carry;\n\t      carry = w >> 26;\n\t      this$1.words[i] = w & 0x3ffffff;\n\t    }\n\t    this.negative = 1;\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n\t    var shift = this.length - num.length;\n\n\t    var a = this.clone();\n\t    var b = num;\n\n\t    // Normalize\n\t    var bhi = b.words[b.length - 1] | 0;\n\t    var bhiBits = this._countBits(bhi);\n\t    shift = 26 - bhiBits;\n\t    if (shift !== 0) {\n\t      b = b.ushln(shift);\n\t      a.iushln(shift);\n\t      bhi = b.words[b.length - 1] | 0;\n\t    }\n\n\t    // Initialize quotient\n\t    var m = a.length - b.length;\n\t    var q;\n\n\t    if (mode !== 'mod') {\n\t      q = new BN(null);\n\t      q.length = m + 1;\n\t      q.words = new Array(q.length);\n\t      for (var i = 0; i < q.length; i++) {\n\t        q.words[i] = 0;\n\t      }\n\t    }\n\n\t    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\t    if (diff.negative === 0) {\n\t      a = diff;\n\t      if (q) {\n\t        q.words[m] = 1;\n\t      }\n\t    }\n\n\t    for (var j = m - 1; j >= 0; j--) {\n\t      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n\t        (a.words[b.length + j - 1] | 0);\n\n\t      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n\t      // (0x7ffffff)\n\t      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n\t      a._ishlnsubmul(b, qj, j);\n\t      while (a.negative !== 0) {\n\t        qj--;\n\t        a.negative = 0;\n\t        a._ishlnsubmul(b, 1, j);\n\t        if (!a.isZero()) {\n\t          a.negative ^= 1;\n\t        }\n\t      }\n\t      if (q) {\n\t        q.words[j] = qj;\n\t      }\n\t    }\n\t    if (q) {\n\t      q.strip();\n\t    }\n\t    a.strip();\n\n\t    // Denormalize\n\t    if (mode !== 'div' && shift !== 0) {\n\t      a.iushrn(shift);\n\t    }\n\n\t    return {\n\t      div: q || null,\n\t      mod: a\n\t    };\n\t  };\n\n\t  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n\t  //       to `div` to request div only, or be absent to\n\t  //       request both div & mod\n\t  //       2) `positive` is true if unsigned mod is requested\n\t  BN.prototype.divmod = function divmod (num, mode, positive) {\n\t    assert(!num.isZero());\n\n\t    if (this.isZero()) {\n\t      return {\n\t        div: new BN(0),\n\t        mod: new BN(0)\n\t      };\n\t    }\n\n\t    var div, mod, res;\n\t    if (this.negative !== 0 && num.negative === 0) {\n\t      res = this.neg().divmod(num, mode);\n\n\t      if (mode !== 'mod') {\n\t        div = res.div.neg();\n\t      }\n\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.negative !== 0) {\n\t          mod.iadd(num);\n\t        }\n\t      }\n\n\t      return {\n\t        div: div,\n\t        mod: mod\n\t      };\n\t    }\n\n\t    if (this.negative === 0 && num.negative !== 0) {\n\t      res = this.divmod(num.neg(), mode);\n\n\t      if (mode !== 'mod') {\n\t        div = res.div.neg();\n\t      }\n\n\t      return {\n\t        div: div,\n\t        mod: res.mod\n\t      };\n\t    }\n\n\t    if ((this.negative & num.negative) !== 0) {\n\t      res = this.neg().divmod(num.neg(), mode);\n\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.negative !== 0) {\n\t          mod.isub(num);\n\t        }\n\t      }\n\n\t      return {\n\t        div: res.div,\n\t        mod: mod\n\t      };\n\t    }\n\n\t    // Both numbers are positive at this point\n\n\t    // Strip both numbers to approximate shift value\n\t    if (num.length > this.length || this.cmp(num) < 0) {\n\t      return {\n\t        div: new BN(0),\n\t        mod: this\n\t      };\n\t    }\n\n\t    // Very short reduction\n\t    if (num.length === 1) {\n\t      if (mode === 'div') {\n\t        return {\n\t          div: this.divn(num.words[0]),\n\t          mod: null\n\t        };\n\t      }\n\n\t      if (mode === 'mod') {\n\t        return {\n\t          div: null,\n\t          mod: new BN(this.modn(num.words[0]))\n\t        };\n\t      }\n\n\t      return {\n\t        div: this.divn(num.words[0]),\n\t        mod: new BN(this.modn(num.words[0]))\n\t      };\n\t    }\n\n\t    return this._wordDiv(num, mode);\n\t  };\n\n\t  // Find `this` / `num`\n\t  BN.prototype.div = function div (num) {\n\t    return this.divmod(num, 'div', false).div;\n\t  };\n\n\t  // Find `this` % `num`\n\t  BN.prototype.mod = function mod (num) {\n\t    return this.divmod(num, 'mod', false).mod;\n\t  };\n\n\t  BN.prototype.umod = function umod (num) {\n\t    return this.divmod(num, 'mod', true).mod;\n\t  };\n\n\t  // Find Round(`this` / `num`)\n\t  BN.prototype.divRound = function divRound (num) {\n\t    var dm = this.divmod(num);\n\n\t    // Fast case - exact division\n\t    if (dm.mod.isZero()) { return dm.div; }\n\n\t    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n\t    var half = num.ushrn(1);\n\t    var r2 = num.andln(1);\n\t    var cmp = mod.cmp(half);\n\n\t    // Round down\n\t    if (cmp < 0 || r2 === 1 && cmp === 0) { return dm.div; }\n\n\t    // Round up\n\t    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n\t  };\n\n\t  BN.prototype.modn = function modn (num) {\n\t    var this$1 = this;\n\n\t    assert(num <= 0x3ffffff);\n\t    var p = (1 << 26) % num;\n\n\t    var acc = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      acc = (p * acc + (this$1.words[i] | 0)) % num;\n\t    }\n\n\t    return acc;\n\t  };\n\n\t  // In-place division by number\n\t  BN.prototype.idivn = function idivn (num) {\n\t    var this$1 = this;\n\n\t    assert(num <= 0x3ffffff);\n\n\t    var carry = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var w = (this$1.words[i] | 0) + carry * 0x4000000;\n\t      this$1.words[i] = (w / num) | 0;\n\t      carry = w % num;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.divn = function divn (num) {\n\t    return this.clone().idivn(num);\n\t  };\n\n\t  BN.prototype.egcd = function egcd (p) {\n\t    assert(p.negative === 0);\n\t    assert(!p.isZero());\n\n\t    var x = this;\n\t    var y = p.clone();\n\n\t    if (x.negative !== 0) {\n\t      x = x.umod(p);\n\t    } else {\n\t      x = x.clone();\n\t    }\n\n\t    // A * x + B * y = x\n\t    var A = new BN(1);\n\t    var B = new BN(0);\n\n\t    // C * x + D * y = y\n\t    var C = new BN(0);\n\t    var D = new BN(1);\n\n\t    var g = 0;\n\n\t    while (x.isEven() && y.isEven()) {\n\t      x.iushrn(1);\n\t      y.iushrn(1);\n\t      ++g;\n\t    }\n\n\t    var yp = y.clone();\n\t    var xp = x.clone();\n\n\t    while (!x.isZero()) {\n\t      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1){  }\n\t      if (i > 0) {\n\t        x.iushrn(i);\n\t        while (i-- > 0) {\n\t          if (A.isOdd() || B.isOdd()) {\n\t            A.iadd(yp);\n\t            B.isub(xp);\n\t          }\n\n\t          A.iushrn(1);\n\t          B.iushrn(1);\n\t        }\n\t      }\n\n\t      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1){  }\n\t      if (j > 0) {\n\t        y.iushrn(j);\n\t        while (j-- > 0) {\n\t          if (C.isOdd() || D.isOdd()) {\n\t            C.iadd(yp);\n\t            D.isub(xp);\n\t          }\n\n\t          C.iushrn(1);\n\t          D.iushrn(1);\n\t        }\n\t      }\n\n\t      if (x.cmp(y) >= 0) {\n\t        x.isub(y);\n\t        A.isub(C);\n\t        B.isub(D);\n\t      } else {\n\t        y.isub(x);\n\t        C.isub(A);\n\t        D.isub(B);\n\t      }\n\t    }\n\n\t    return {\n\t      a: C,\n\t      b: D,\n\t      gcd: y.iushln(g)\n\t    };\n\t  };\n\n\t  // This is reduced incarnation of the binary EEA\n\t  // above, designated to invert members of the\n\t  // _prime_ fields F(p) at a maximal speed\n\t  BN.prototype._invmp = function _invmp (p) {\n\t    assert(p.negative === 0);\n\t    assert(!p.isZero());\n\n\t    var a = this;\n\t    var b = p.clone();\n\n\t    if (a.negative !== 0) {\n\t      a = a.umod(p);\n\t    } else {\n\t      a = a.clone();\n\t    }\n\n\t    var x1 = new BN(1);\n\t    var x2 = new BN(0);\n\n\t    var delta = b.clone();\n\n\t    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n\t      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1){  }\n\t      if (i > 0) {\n\t        a.iushrn(i);\n\t        while (i-- > 0) {\n\t          if (x1.isOdd()) {\n\t            x1.iadd(delta);\n\t          }\n\n\t          x1.iushrn(1);\n\t        }\n\t      }\n\n\t      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1){  }\n\t      if (j > 0) {\n\t        b.iushrn(j);\n\t        while (j-- > 0) {\n\t          if (x2.isOdd()) {\n\t            x2.iadd(delta);\n\t          }\n\n\t          x2.iushrn(1);\n\t        }\n\t      }\n\n\t      if (a.cmp(b) >= 0) {\n\t        a.isub(b);\n\t        x1.isub(x2);\n\t      } else {\n\t        b.isub(a);\n\t        x2.isub(x1);\n\t      }\n\t    }\n\n\t    var res;\n\t    if (a.cmpn(1) === 0) {\n\t      res = x1;\n\t    } else {\n\t      res = x2;\n\t    }\n\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(p);\n\t    }\n\n\t    return res;\n\t  };\n\n\t  BN.prototype.gcd = function gcd (num) {\n\t    if (this.isZero()) { return num.abs(); }\n\t    if (num.isZero()) { return this.abs(); }\n\n\t    var a = this.clone();\n\t    var b = num.clone();\n\t    a.negative = 0;\n\t    b.negative = 0;\n\n\t    // Remove common factor of two\n\t    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n\t      a.iushrn(1);\n\t      b.iushrn(1);\n\t    }\n\n\t    do {\n\t      while (a.isEven()) {\n\t        a.iushrn(1);\n\t      }\n\t      while (b.isEven()) {\n\t        b.iushrn(1);\n\t      }\n\n\t      var r = a.cmp(b);\n\t      if (r < 0) {\n\t        // Swap `a` and `b` to make `a` always bigger than `b`\n\t        var t = a;\n\t        a = b;\n\t        b = t;\n\t      } else if (r === 0 || b.cmpn(1) === 0) {\n\t        break;\n\t      }\n\n\t      a.isub(b);\n\t    } while (true);\n\n\t    return b.iushln(shift);\n\t  };\n\n\t  // Invert number in the field F(num)\n\t  BN.prototype.invm = function invm (num) {\n\t    return this.egcd(num).a.umod(num);\n\t  };\n\n\t  BN.prototype.isEven = function isEven () {\n\t    return (this.words[0] & 1) === 0;\n\t  };\n\n\t  BN.prototype.isOdd = function isOdd () {\n\t    return (this.words[0] & 1) === 1;\n\t  };\n\n\t  // And first word and num\n\t  BN.prototype.andln = function andln (num) {\n\t    return this.words[0] & num;\n\t  };\n\n\t  // Increment at the bit position in-line\n\t  BN.prototype.bincn = function bincn (bit) {\n\t    var this$1 = this;\n\n\t    assert(typeof bit === 'number');\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) {\n\t      this._expand(s + 1);\n\t      this.words[s] |= q;\n\t      return this;\n\t    }\n\n\t    // Add bit and propagate, if needed\n\t    var carry = q;\n\t    for (var i = s; carry !== 0 && i < this.length; i++) {\n\t      var w = this$1.words[i] | 0;\n\t      w += carry;\n\t      carry = w >>> 26;\n\t      w &= 0x3ffffff;\n\t      this$1.words[i] = w;\n\t    }\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t    return this;\n\t  };\n\n\t  BN.prototype.isZero = function isZero () {\n\t    return this.length === 1 && this.words[0] === 0;\n\t  };\n\n\t  BN.prototype.cmpn = function cmpn (num) {\n\t    var negative = num < 0;\n\n\t    if (this.negative !== 0 && !negative) { return -1; }\n\t    if (this.negative === 0 && negative) { return 1; }\n\n\t    this.strip();\n\n\t    var res;\n\t    if (this.length > 1) {\n\t      res = 1;\n\t    } else {\n\t      if (negative) {\n\t        num = -num;\n\t      }\n\n\t      assert(num <= 0x3ffffff, 'Number is too big');\n\n\t      var w = this.words[0] | 0;\n\t      res = w === num ? 0 : w < num ? -1 : 1;\n\t    }\n\t    if (this.negative !== 0) { return -res | 0; }\n\t    return res;\n\t  };\n\n\t  // Compare two numbers and return:\n\t  // 1 - if `this` > `num`\n\t  // 0 - if `this` == `num`\n\t  // -1 - if `this` < `num`\n\t  BN.prototype.cmp = function cmp (num) {\n\t    if (this.negative !== 0 && num.negative === 0) { return -1; }\n\t    if (this.negative === 0 && num.negative !== 0) { return 1; }\n\n\t    var res = this.ucmp(num);\n\t    if (this.negative !== 0) { return -res | 0; }\n\t    return res;\n\t  };\n\n\t  // Unsigned comparison\n\t  BN.prototype.ucmp = function ucmp (num) {\n\t    var this$1 = this;\n\n\t    // At this point both numbers have the same sign\n\t    if (this.length > num.length) { return 1; }\n\t    if (this.length < num.length) { return -1; }\n\n\t    var res = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var a = this$1.words[i] | 0;\n\t      var b = num.words[i] | 0;\n\n\t      if (a === b) { continue; }\n\t      if (a < b) {\n\t        res = -1;\n\t      } else if (a > b) {\n\t        res = 1;\n\t      }\n\t      break;\n\t    }\n\t    return res;\n\t  };\n\n\t  BN.prototype.gtn = function gtn (num) {\n\t    return this.cmpn(num) === 1;\n\t  };\n\n\t  BN.prototype.gt = function gt (num) {\n\t    return this.cmp(num) === 1;\n\t  };\n\n\t  BN.prototype.gten = function gten (num) {\n\t    return this.cmpn(num) >= 0;\n\t  };\n\n\t  BN.prototype.gte = function gte (num) {\n\t    return this.cmp(num) >= 0;\n\t  };\n\n\t  BN.prototype.ltn = function ltn (num) {\n\t    return this.cmpn(num) === -1;\n\t  };\n\n\t  BN.prototype.lt = function lt (num) {\n\t    return this.cmp(num) === -1;\n\t  };\n\n\t  BN.prototype.lten = function lten (num) {\n\t    return this.cmpn(num) <= 0;\n\t  };\n\n\t  BN.prototype.lte = function lte (num) {\n\t    return this.cmp(num) <= 0;\n\t  };\n\n\t  BN.prototype.eqn = function eqn (num) {\n\t    return this.cmpn(num) === 0;\n\t  };\n\n\t  BN.prototype.eq = function eq (num) {\n\t    return this.cmp(num) === 0;\n\t  };\n\n\t  //\n\t  // A reduce context, could be using montgomery or something better, depending\n\t  // on the `m` itself.\n\t  //\n\t  BN.red = function red (num) {\n\t    return new Red(num);\n\t  };\n\n\t  BN.prototype.toRed = function toRed (ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    assert(this.negative === 0, 'red works only with positives');\n\t    return ctx.convertTo(this)._forceRed(ctx);\n\t  };\n\n\t  BN.prototype.fromRed = function fromRed () {\n\t    assert(this.red, 'fromRed works only with numbers in reduction context');\n\t    return this.red.convertFrom(this);\n\t  };\n\n\t  BN.prototype._forceRed = function _forceRed (ctx) {\n\t    this.red = ctx;\n\t    return this;\n\t  };\n\n\t  BN.prototype.forceRed = function forceRed (ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    return this._forceRed(ctx);\n\t  };\n\n\t  BN.prototype.redAdd = function redAdd (num) {\n\t    assert(this.red, 'redAdd works only with red numbers');\n\t    return this.red.add(this, num);\n\t  };\n\n\t  BN.prototype.redIAdd = function redIAdd (num) {\n\t    assert(this.red, 'redIAdd works only with red numbers');\n\t    return this.red.iadd(this, num);\n\t  };\n\n\t  BN.prototype.redSub = function redSub (num) {\n\t    assert(this.red, 'redSub works only with red numbers');\n\t    return this.red.sub(this, num);\n\t  };\n\n\t  BN.prototype.redISub = function redISub (num) {\n\t    assert(this.red, 'redISub works only with red numbers');\n\t    return this.red.isub(this, num);\n\t  };\n\n\t  BN.prototype.redShl = function redShl (num) {\n\t    assert(this.red, 'redShl works only with red numbers');\n\t    return this.red.shl(this, num);\n\t  };\n\n\t  BN.prototype.redMul = function redMul (num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.mul(this, num);\n\t  };\n\n\t  BN.prototype.redIMul = function redIMul (num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.imul(this, num);\n\t  };\n\n\t  BN.prototype.redSqr = function redSqr () {\n\t    assert(this.red, 'redSqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqr(this);\n\t  };\n\n\t  BN.prototype.redISqr = function redISqr () {\n\t    assert(this.red, 'redISqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.isqr(this);\n\t  };\n\n\t  // Square root over p\n\t  BN.prototype.redSqrt = function redSqrt () {\n\t    assert(this.red, 'redSqrt works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqrt(this);\n\t  };\n\n\t  BN.prototype.redInvm = function redInvm () {\n\t    assert(this.red, 'redInvm works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.invm(this);\n\t  };\n\n\t  // Return negative clone of `this` % `red modulo`\n\t  BN.prototype.redNeg = function redNeg () {\n\t    assert(this.red, 'redNeg works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.neg(this);\n\t  };\n\n\t  BN.prototype.redPow = function redPow (num) {\n\t    assert(this.red && !num.red, 'redPow(normalNum)');\n\t    this.red._verify1(this);\n\t    return this.red.pow(this, num);\n\t  };\n\n\t  // Prime numbers with efficient reduction\n\t  var primes = {\n\t    k256: null,\n\t    p224: null,\n\t    p192: null,\n\t    p25519: null\n\t  };\n\n\t  // Pseudo-Mersenne prime\n\t  function MPrime (name, p) {\n\t    // P = 2 ^ N - K\n\t    this.name = name;\n\t    this.p = new BN(p, 16);\n\t    this.n = this.p.bitLength();\n\t    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n\t    this.tmp = this._tmp();\n\t  }\n\n\t  MPrime.prototype._tmp = function _tmp () {\n\t    var tmp = new BN(null);\n\t    tmp.words = new Array(Math.ceil(this.n / 13));\n\t    return tmp;\n\t  };\n\n\t  MPrime.prototype.ireduce = function ireduce (num) {\n\t    var this$1 = this;\n\n\t    // Assumes that `num` is less than `P^2`\n\t    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n\t    var r = num;\n\t    var rlen;\n\n\t    do {\n\t      this$1.split(r, this$1.tmp);\n\t      r = this$1.imulK(r);\n\t      r = r.iadd(this$1.tmp);\n\t      rlen = r.bitLength();\n\t    } while (rlen > this.n);\n\n\t    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\t    if (cmp === 0) {\n\t      r.words[0] = 0;\n\t      r.length = 1;\n\t    } else if (cmp > 0) {\n\t      r.isub(this.p);\n\t    } else {\n\t      r.strip();\n\t    }\n\n\t    return r;\n\t  };\n\n\t  MPrime.prototype.split = function split (input, out) {\n\t    input.iushrn(this.n, 0, out);\n\t  };\n\n\t  MPrime.prototype.imulK = function imulK (num) {\n\t    return num.imul(this.k);\n\t  };\n\n\t  function K256 () {\n\t    MPrime.call(\n\t      this,\n\t      'k256',\n\t      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n\t  }\n\t  inherits(K256, MPrime);\n\n\t  K256.prototype.split = function split (input, output) {\n\t    // 256 = 9 * 26 + 22\n\t    var mask = 0x3fffff;\n\n\t    var outLen = Math.min(input.length, 9);\n\t    for (var i = 0; i < outLen; i++) {\n\t      output.words[i] = input.words[i];\n\t    }\n\t    output.length = outLen;\n\n\t    if (input.length <= 9) {\n\t      input.words[0] = 0;\n\t      input.length = 1;\n\t      return;\n\t    }\n\n\t    // Shift by 9 limbs\n\t    var prev = input.words[9];\n\t    output.words[output.length++] = prev & mask;\n\n\t    for (i = 10; i < input.length; i++) {\n\t      var next = input.words[i] | 0;\n\t      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n\t      prev = next;\n\t    }\n\t    prev >>>= 22;\n\t    input.words[i - 10] = prev;\n\t    if (prev === 0 && input.length > 10) {\n\t      input.length -= 10;\n\t    } else {\n\t      input.length -= 9;\n\t    }\n\t  };\n\n\t  K256.prototype.imulK = function imulK (num) {\n\t    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n\t    num.words[num.length] = 0;\n\t    num.words[num.length + 1] = 0;\n\t    num.length += 2;\n\n\t    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\t    var lo = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var w = num.words[i] | 0;\n\t      lo += w * 0x3d1;\n\t      num.words[i] = lo & 0x3ffffff;\n\t      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n\t    }\n\n\t    // Fast length reduction\n\t    if (num.words[num.length - 1] === 0) {\n\t      num.length--;\n\t      if (num.words[num.length - 1] === 0) {\n\t        num.length--;\n\t      }\n\t    }\n\t    return num;\n\t  };\n\n\t  function P224 () {\n\t    MPrime.call(\n\t      this,\n\t      'p224',\n\t      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n\t  }\n\t  inherits(P224, MPrime);\n\n\t  function P192 () {\n\t    MPrime.call(\n\t      this,\n\t      'p192',\n\t      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n\t  }\n\t  inherits(P192, MPrime);\n\n\t  function P25519 () {\n\t    // 2 ^ 255 - 19\n\t    MPrime.call(\n\t      this,\n\t      '25519',\n\t      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n\t  }\n\t  inherits(P25519, MPrime);\n\n\t  P25519.prototype.imulK = function imulK (num) {\n\t    // K = 0x13\n\t    var carry = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var hi = (num.words[i] | 0) * 0x13 + carry;\n\t      var lo = hi & 0x3ffffff;\n\t      hi >>>= 26;\n\n\t      num.words[i] = lo;\n\t      carry = hi;\n\t    }\n\t    if (carry !== 0) {\n\t      num.words[num.length++] = carry;\n\t    }\n\t    return num;\n\t  };\n\n\t  // Exported mostly for testing purposes, use plain name instead\n\t  BN._prime = function prime (name) {\n\t    // Cached version of prime\n\t    if (primes[name]) { return primes[name]; }\n\n\t    var prime;\n\t    if (name === 'k256') {\n\t      prime = new K256();\n\t    } else if (name === 'p224') {\n\t      prime = new P224();\n\t    } else if (name === 'p192') {\n\t      prime = new P192();\n\t    } else if (name === 'p25519') {\n\t      prime = new P25519();\n\t    } else {\n\t      throw new Error('Unknown prime ' + name);\n\t    }\n\t    primes[name] = prime;\n\n\t    return prime;\n\t  };\n\n\t  //\n\t  // Base reduction engine\n\t  //\n\t  function Red (m) {\n\t    if (typeof m === 'string') {\n\t      var prime = BN._prime(m);\n\t      this.m = prime.p;\n\t      this.prime = prime;\n\t    } else {\n\t      assert(m.gtn(1), 'modulus must be greater than 1');\n\t      this.m = m;\n\t      this.prime = null;\n\t    }\n\t  }\n\n\t  Red.prototype._verify1 = function _verify1 (a) {\n\t    assert(a.negative === 0, 'red works only with positives');\n\t    assert(a.red, 'red works only with red numbers');\n\t  };\n\n\t  Red.prototype._verify2 = function _verify2 (a, b) {\n\t    assert((a.negative | b.negative) === 0, 'red works only with positives');\n\t    assert(a.red && a.red === b.red,\n\t      'red works only with red numbers');\n\t  };\n\n\t  Red.prototype.imod = function imod (a) {\n\t    if (this.prime) { return this.prime.ireduce(a)._forceRed(this); }\n\t    return a.umod(this.m)._forceRed(this);\n\t  };\n\n\t  Red.prototype.neg = function neg (a) {\n\t    if (a.isZero()) {\n\t      return a.clone();\n\t    }\n\n\t    return this.m.sub(a)._forceRed(this);\n\t  };\n\n\t  Red.prototype.add = function add (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.add(b);\n\t    if (res.cmp(this.m) >= 0) {\n\t      res.isub(this.m);\n\t    }\n\t    return res._forceRed(this);\n\t  };\n\n\t  Red.prototype.iadd = function iadd (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.iadd(b);\n\t    if (res.cmp(this.m) >= 0) {\n\t      res.isub(this.m);\n\t    }\n\t    return res;\n\t  };\n\n\t  Red.prototype.sub = function sub (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.sub(b);\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(this.m);\n\t    }\n\t    return res._forceRed(this);\n\t  };\n\n\t  Red.prototype.isub = function isub (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.isub(b);\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(this.m);\n\t    }\n\t    return res;\n\t  };\n\n\t  Red.prototype.shl = function shl (a, num) {\n\t    this._verify1(a);\n\t    return this.imod(a.ushln(num));\n\t  };\n\n\t  Red.prototype.imul = function imul (a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.imul(b));\n\t  };\n\n\t  Red.prototype.mul = function mul (a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.mul(b));\n\t  };\n\n\t  Red.prototype.isqr = function isqr (a) {\n\t    return this.imul(a, a.clone());\n\t  };\n\n\t  Red.prototype.sqr = function sqr (a) {\n\t    return this.mul(a, a);\n\t  };\n\n\t  Red.prototype.sqrt = function sqrt (a) {\n\t    var this$1 = this;\n\n\t    if (a.isZero()) { return a.clone(); }\n\n\t    var mod3 = this.m.andln(3);\n\t    assert(mod3 % 2 === 1);\n\n\t    // Fast case\n\t    if (mod3 === 3) {\n\t      var pow = this.m.add(new BN(1)).iushrn(2);\n\t      return this.pow(a, pow);\n\t    }\n\n\t    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n\t    //\n\t    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\t    var q = this.m.subn(1);\n\t    var s = 0;\n\t    while (!q.isZero() && q.andln(1) === 0) {\n\t      s++;\n\t      q.iushrn(1);\n\t    }\n\t    assert(!q.isZero());\n\n\t    var one = new BN(1).toRed(this);\n\t    var nOne = one.redNeg();\n\n\t    // Find quadratic non-residue\n\t    // NOTE: Max is such because of generalized Riemann hypothesis.\n\t    var lpow = this.m.subn(1).iushrn(1);\n\t    var z = this.m.bitLength();\n\t    z = new BN(2 * z * z).toRed(this);\n\n\t    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n\t      z.redIAdd(nOne);\n\t    }\n\n\t    var c = this.pow(z, q);\n\t    var r = this.pow(a, q.addn(1).iushrn(1));\n\t    var t = this.pow(a, q);\n\t    var m = s;\n\t    while (t.cmp(one) !== 0) {\n\t      var tmp = t;\n\t      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n\t        tmp = tmp.redSqr();\n\t      }\n\t      assert(i < m);\n\t      var b = this$1.pow(c, new BN(1).iushln(m - i - 1));\n\n\t      r = r.redMul(b);\n\t      c = b.redSqr();\n\t      t = t.redMul(c);\n\t      m = i;\n\t    }\n\n\t    return r;\n\t  };\n\n\t  Red.prototype.invm = function invm (a) {\n\t    var inv = a._invmp(this.m);\n\t    if (inv.negative !== 0) {\n\t      inv.negative = 0;\n\t      return this.imod(inv).redNeg();\n\t    } else {\n\t      return this.imod(inv);\n\t    }\n\t  };\n\n\t  Red.prototype.pow = function pow (a, num) {\n\t    var this$1 = this;\n\n\t    if (num.isZero()) { return new BN(1); }\n\t    if (num.cmpn(1) === 0) { return a.clone(); }\n\n\t    var windowSize = 4;\n\t    var wnd = new Array(1 << windowSize);\n\t    wnd[0] = new BN(1).toRed(this);\n\t    wnd[1] = a;\n\t    for (var i = 2; i < wnd.length; i++) {\n\t      wnd[i] = this$1.mul(wnd[i - 1], a);\n\t    }\n\n\t    var res = wnd[0];\n\t    var current = 0;\n\t    var currentLen = 0;\n\t    var start = num.bitLength() % 26;\n\t    if (start === 0) {\n\t      start = 26;\n\t    }\n\n\t    for (i = num.length - 1; i >= 0; i--) {\n\t      var word = num.words[i];\n\t      for (var j = start - 1; j >= 0; j--) {\n\t        var bit = (word >> j) & 1;\n\t        if (res !== wnd[0]) {\n\t          res = this$1.sqr(res);\n\t        }\n\n\t        if (bit === 0 && current === 0) {\n\t          currentLen = 0;\n\t          continue;\n\t        }\n\n\t        current <<= 1;\n\t        current |= bit;\n\t        currentLen++;\n\t        if (currentLen !== windowSize && (i !== 0 || j !== 0)) { continue; }\n\n\t        res = this$1.mul(res, wnd[current]);\n\t        currentLen = 0;\n\t        current = 0;\n\t      }\n\t      start = 26;\n\t    }\n\n\t    return res;\n\t  };\n\n\t  Red.prototype.convertTo = function convertTo (num) {\n\t    var r = num.umod(this.m);\n\n\t    return r === num ? r.clone() : r;\n\t  };\n\n\t  Red.prototype.convertFrom = function convertFrom (num) {\n\t    var res = num.clone();\n\t    res.red = null;\n\t    return res;\n\t  };\n\n\t  //\n\t  // Montgomery method engine\n\t  //\n\n\t  BN.mont = function mont (num) {\n\t    return new Mont(num);\n\t  };\n\n\t  function Mont (m) {\n\t    Red.call(this, m);\n\n\t    this.shift = this.m.bitLength();\n\t    if (this.shift % 26 !== 0) {\n\t      this.shift += 26 - (this.shift % 26);\n\t    }\n\n\t    this.r = new BN(1).iushln(this.shift);\n\t    this.r2 = this.imod(this.r.sqr());\n\t    this.rinv = this.r._invmp(this.m);\n\n\t    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n\t    this.minv = this.minv.umod(this.r);\n\t    this.minv = this.r.sub(this.minv);\n\t  }\n\t  inherits(Mont, Red);\n\n\t  Mont.prototype.convertTo = function convertTo (num) {\n\t    return this.imod(num.ushln(this.shift));\n\t  };\n\n\t  Mont.prototype.convertFrom = function convertFrom (num) {\n\t    var r = this.imod(num.mul(this.rinv));\n\t    r.red = null;\n\t    return r;\n\t  };\n\n\t  Mont.prototype.imul = function imul (a, b) {\n\t    if (a.isZero() || b.isZero()) {\n\t      a.words[0] = 0;\n\t      a.length = 1;\n\t      return a;\n\t    }\n\n\t    var t = a.imul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\n\t    if (u.cmp(this.m) >= 0) {\n\t      res = u.isub(this.m);\n\t    } else if (u.cmpn(0) < 0) {\n\t      res = u.iadd(this.m);\n\t    }\n\n\t    return res._forceRed(this);\n\t  };\n\n\t  Mont.prototype.mul = function mul (a, b) {\n\t    if (a.isZero() || b.isZero()) { return new BN(0)._forceRed(this); }\n\n\t    var t = a.mul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\t    if (u.cmp(this.m) >= 0) {\n\t      res = u.isub(this.m);\n\t    } else if (u.cmpn(0) < 0) {\n\t      res = u.iadd(this.m);\n\t    }\n\n\t    return res._forceRed(this);\n\t  };\n\n\t  Mont.prototype.invm = function invm (a) {\n\t    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n\t    var res = this.imod(a._invmp(this.m).mul(this.r2));\n\t    return res._forceRed(this);\n\t  };\n\t})(typeof module === 'undefined' || module, this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)));\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t};\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = buffer__default;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = assert;\n\n\tfunction assert(val, msg) {\n\t  if (!val)\n\t    { throw new Error(msg || 'Assertion failed'); }\n\t}\n\n\tassert.equal = function assertEqual(l, r, msg) {\n\t  if (l != r)\n\t    { throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r)); }\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar utils = exports;\n\n\tfunction toArray(msg, enc) {\n\t  if (Array.isArray(msg))\n\t    { return msg.slice(); }\n\t  if (!msg)\n\t    { return []; }\n\t  var res = [];\n\t  if (typeof msg !== 'string') {\n\t    for (var i = 0; i < msg.length; i++)\n\t      { res[i] = msg[i] | 0; }\n\t    return res;\n\t  }\n\t  if (enc === 'hex') {\n\t    msg = msg.replace(/[^a-z0-9]+/ig, '');\n\t    if (msg.length % 2 !== 0)\n\t      { msg = '0' + msg; }\n\t    for (var i = 0; i < msg.length; i += 2)\n\t      { res.push(parseInt(msg[i] + msg[i + 1], 16)); }\n\t  } else {\n\t    for (var i = 0; i < msg.length; i++) {\n\t      var c = msg.charCodeAt(i);\n\t      var hi = c >> 8;\n\t      var lo = c & 0xff;\n\t      if (hi)\n\t        { res.push(hi, lo); }\n\t      else\n\t        { res.push(lo); }\n\t    }\n\t  }\n\t  return res;\n\t}\n\tutils.toArray = toArray;\n\n\tfunction zero2(word) {\n\t  if (word.length === 1)\n\t    { return '0' + word; }\n\t  else\n\t    { return word; }\n\t}\n\tutils.zero2 = zero2;\n\n\tfunction toHex(msg) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++)\n\t    { res += zero2(msg[i].toString(16)); }\n\t  return res;\n\t}\n\tutils.toHex = toHex;\n\n\tutils.encode = function encode(arr, enc) {\n\t  if (enc === 'hex')\n\t    { return toHex(arr); }\n\t  else\n\t    { return arr; }\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar r;\n\n\tmodule.exports = function rand(len) {\n\t  if (!r)\n\t    { r = new Rand(null); }\n\n\t  return r.generate(len);\n\t};\n\n\tfunction Rand(rand) {\n\t  this.rand = rand;\n\t}\n\tmodule.exports.Rand = Rand;\n\n\tRand.prototype.generate = function generate(len) {\n\t  return this._rand(len);\n\t};\n\n\t// Emulate crypto API using randy\n\tRand.prototype._rand = function _rand(n) {\n\t  var this$1 = this;\n\n\t  if (this.rand.getBytes)\n\t    { return this.rand.getBytes(n); }\n\n\t  var res = new Uint8Array(n);\n\t  for (var i = 0; i < res.length; i++)\n\t    { res[i] = this$1.rand.getByte(); }\n\t  return res;\n\t};\n\n\tif (typeof self === 'object') {\n\t  if (self.crypto && self.crypto.getRandomValues) {\n\t    // Modern browsers\n\t    Rand.prototype._rand = function _rand(n) {\n\t      var arr = new Uint8Array(n);\n\t      self.crypto.getRandomValues(arr);\n\t      return arr;\n\t    };\n\t  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n\t    // IE\n\t    Rand.prototype._rand = function _rand(n) {\n\t      var arr = new Uint8Array(n);\n\t      self.msCrypto.getRandomValues(arr);\n\t      return arr;\n\t    };\n\n\t  // Safari's WebWorkers do not have `crypto`\n\t  } else if (typeof window === 'object') {\n\t    // Old junk\n\t    Rand.prototype._rand = function() {\n\t      throw new Error('Not implemented yet');\n\t    };\n\t  }\n\t} else {\n\t  // Node.js or Web worker with no crypto support\n\t  try {\n\t    var crypto$$1 = __webpack_require__(10);\n\t    if (typeof crypto$$1.randomBytes !== 'function')\n\t      { throw new Error('Not supported'); }\n\n\t    Rand.prototype._rand = function _rand(n) {\n\t      return crypto$$1.randomBytes(n);\n\t    };\n\t  } catch (e) {\n\t  }\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = exports;\n\n\tcurve.base = __webpack_require__(12);\n\tcurve.short = __webpack_require__(13);\n\tcurve.mont = __webpack_require__(15);\n\tcurve.edwards = __webpack_require__(16);\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar getNAF = utils.getNAF;\n\tvar getJSF = utils.getJSF;\n\tvar assert = utils.assert;\n\n\tfunction BaseCurve(type, conf) {\n\t  this.type = type;\n\t  this.p = new BN(conf.p, 16);\n\n\t  // Use Montgomery, when there is no fast reduction for the prime\n\t  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n\t  // Useful for many curves\n\t  this.zero = new BN(0).toRed(this.red);\n\t  this.one = new BN(1).toRed(this.red);\n\t  this.two = new BN(2).toRed(this.red);\n\n\t  // Curve configuration, optional\n\t  this.n = conf.n && new BN(conf.n, 16);\n\t  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n\t  // Temporary arrays\n\t  this._wnafT1 = new Array(4);\n\t  this._wnafT2 = new Array(4);\n\t  this._wnafT3 = new Array(4);\n\t  this._wnafT4 = new Array(4);\n\n\t  // Generalized Greg Maxwell's trick\n\t  var adjustCount = this.n && this.p.div(this.n);\n\t  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n\t    this.redN = null;\n\t  } else {\n\t    this._maxwellTrick = true;\n\t    this.redN = this.n.toRed(this.red);\n\t  }\n\t}\n\tmodule.exports = BaseCurve;\n\n\tBaseCurve.prototype.point = function point() {\n\t  throw new Error('Not implemented');\n\t};\n\n\tBaseCurve.prototype.validate = function validate() {\n\t  throw new Error('Not implemented');\n\t};\n\n\tBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n\t  assert(p.precomputed);\n\t  var doubles = p._getDoubles();\n\n\t  var naf = getNAF(k, 1);\n\t  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n\t  I /= 3;\n\n\t  // Translate into more windowed form\n\t  var repr = [];\n\t  for (var j = 0; j < naf.length; j += doubles.step) {\n\t    var nafW = 0;\n\t    for (var k = j + doubles.step - 1; k >= j; k--)\n\t      { nafW = (nafW << 1) + naf[k]; }\n\t    repr.push(nafW);\n\t  }\n\n\t  var a = this.jpoint(null, null, null);\n\t  var b = this.jpoint(null, null, null);\n\t  for (var i = I; i > 0; i--) {\n\t    for (var j = 0; j < repr.length; j++) {\n\t      var nafW = repr[j];\n\t      if (nafW === i)\n\t        { b = b.mixedAdd(doubles.points[j]); }\n\t      else if (nafW === -i)\n\t        { b = b.mixedAdd(doubles.points[j].neg()); }\n\t    }\n\t    a = a.add(b);\n\t  }\n\t  return a.toP();\n\t};\n\n\tBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n\t  var w = 4;\n\n\t  // Precompute window\n\t  var nafPoints = p._getNAFPoints(w);\n\t  w = nafPoints.wnd;\n\t  var wnd = nafPoints.points;\n\n\t  // Get NAF form\n\t  var naf = getNAF(k, w);\n\n\t  // Add `this`*(N+1) for every w-NAF index\n\t  var acc = this.jpoint(null, null, null);\n\t  for (var i = naf.length - 1; i >= 0; i--) {\n\t    // Count zeroes\n\t    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n\t      { k++; }\n\t    if (i >= 0)\n\t      { k++; }\n\t    acc = acc.dblp(k);\n\n\t    if (i < 0)\n\t      { break; }\n\t    var z = naf[i];\n\t    assert(z !== 0);\n\t    if (p.type === 'affine') {\n\t      // J +- P\n\t      if (z > 0)\n\t        { acc = acc.mixedAdd(wnd[(z - 1) >> 1]); }\n\t      else\n\t        { acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg()); }\n\t    } else {\n\t      // J +- J\n\t      if (z > 0)\n\t        { acc = acc.add(wnd[(z - 1) >> 1]); }\n\t      else\n\t        { acc = acc.add(wnd[(-z - 1) >> 1].neg()); }\n\t    }\n\t  }\n\t  return p.type === 'affine' ? acc.toP() : acc;\n\t};\n\n\tBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n\t                                                       points,\n\t                                                       coeffs,\n\t                                                       len,\n\t                                                       jacobianResult) {\n\t  var wndWidth = this._wnafT1;\n\t  var wnd = this._wnafT2;\n\t  var naf = this._wnafT3;\n\n\t  // Fill all arrays\n\t  var max = 0;\n\t  for (var i = 0; i < len; i++) {\n\t    var p = points[i];\n\t    var nafPoints = p._getNAFPoints(defW);\n\t    wndWidth[i] = nafPoints.wnd;\n\t    wnd[i] = nafPoints.points;\n\t  }\n\n\t  // Comb small window NAFs\n\t  for (var i = len - 1; i >= 1; i -= 2) {\n\t    var a = i - 1;\n\t    var b = i;\n\t    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n\t      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n\t      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n\t      max = Math.max(naf[a].length, max);\n\t      max = Math.max(naf[b].length, max);\n\t      continue;\n\t    }\n\n\t    var comb = [\n\t      points[a], /* 1 */\n\t      null, /* 3 */\n\t      null, /* 5 */\n\t      points[b] /* 7 */\n\t    ];\n\n\t    // Try to avoid Projective points, if possible\n\t    if (points[a].y.cmp(points[b].y) === 0) {\n\t      comb[1] = points[a].add(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].add(points[b].neg());\n\t    } else {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    }\n\n\t    var index = [\n\t      -3, /* -1 -1 */\n\t      -1, /* -1 0 */\n\t      -5, /* -1 1 */\n\t      -7, /* 0 -1 */\n\t      0, /* 0 0 */\n\t      7, /* 0 1 */\n\t      5, /* 1 -1 */\n\t      1, /* 1 0 */\n\t      3  /* 1 1 */\n\t    ];\n\n\t    var jsf = getJSF(coeffs[a], coeffs[b]);\n\t    max = Math.max(jsf[0].length, max);\n\t    naf[a] = new Array(max);\n\t    naf[b] = new Array(max);\n\t    for (var j = 0; j < max; j++) {\n\t      var ja = jsf[0][j] | 0;\n\t      var jb = jsf[1][j] | 0;\n\n\t      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n\t      naf[b][j] = 0;\n\t      wnd[a] = comb;\n\t    }\n\t  }\n\n\t  var acc = this.jpoint(null, null, null);\n\t  var tmp = this._wnafT4;\n\t  for (var i = max; i >= 0; i--) {\n\t    var k = 0;\n\n\t    while (i >= 0) {\n\t      var zero = true;\n\t      for (var j = 0; j < len; j++) {\n\t        tmp[j] = naf[j][i] | 0;\n\t        if (tmp[j] !== 0)\n\t          { zero = false; }\n\t      }\n\t      if (!zero)\n\t        { break; }\n\t      k++;\n\t      i--;\n\t    }\n\t    if (i >= 0)\n\t      { k++; }\n\t    acc = acc.dblp(k);\n\t    if (i < 0)\n\t      { break; }\n\n\t    for (var j = 0; j < len; j++) {\n\t      var z = tmp[j];\n\t      var p;\n\t      if (z === 0)\n\t        { continue; }\n\t      else if (z > 0)\n\t        { p = wnd[j][(z - 1) >> 1]; }\n\t      else if (z < 0)\n\t        { p = wnd[j][(-z - 1) >> 1].neg(); }\n\n\t      if (p.type === 'affine')\n\t        { acc = acc.mixedAdd(p); }\n\t      else\n\t        { acc = acc.add(p); }\n\t    }\n\t  }\n\t  // Zeroify references\n\t  for (var i = 0; i < len; i++)\n\t    { wnd[i] = null; }\n\n\t  if (jacobianResult)\n\t    { return acc; }\n\t  else\n\t    { return acc.toP(); }\n\t};\n\n\tfunction BasePoint(curve, type) {\n\t  this.curve = curve;\n\t  this.type = type;\n\t  this.precomputed = null;\n\t}\n\tBaseCurve.BasePoint = BasePoint;\n\n\tBasePoint.prototype.eq = function eq(/*other*/) {\n\t  throw new Error('Not implemented');\n\t};\n\n\tBasePoint.prototype.validate = function validate() {\n\t  return this.curve.validate(this);\n\t};\n\n\tBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  bytes = utils.toArray(bytes, enc);\n\n\t  var len = this.p.byteLength();\n\n\t  // uncompressed, hybrid-odd, hybrid-even\n\t  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n\t      bytes.length - 1 === 2 * len) {\n\t    if (bytes[0] === 0x06)\n\t      { assert(bytes[bytes.length - 1] % 2 === 0); }\n\t    else if (bytes[0] === 0x07)\n\t      { assert(bytes[bytes.length - 1] % 2 === 1); }\n\n\t    var res =  this.point(bytes.slice(1, 1 + len),\n\t                          bytes.slice(1 + len, 1 + 2 * len));\n\n\t    return res;\n\t  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n\t              bytes.length - 1 === len) {\n\t    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n\t  }\n\t  throw new Error('Unknown point format');\n\t};\n\n\tBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n\t  return this.encode(enc, true);\n\t};\n\n\tBasePoint.prototype._encode = function _encode(compact) {\n\t  var len = this.curve.p.byteLength();\n\t  var x = this.getX().toArray('be', len);\n\n\t  if (compact)\n\t    { return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x); }\n\n\t  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n\t};\n\n\tBasePoint.prototype.encode = function encode(enc, compact) {\n\t  return utils.encode(this._encode(compact), enc);\n\t};\n\n\tBasePoint.prototype.precompute = function precompute(power) {\n\t  if (this.precomputed)\n\t    { return this; }\n\n\t  var precomputed = {\n\t    doubles: null,\n\t    naf: null,\n\t    beta: null\n\t  };\n\t  precomputed.naf = this._getNAFPoints(8);\n\t  precomputed.doubles = this._getDoubles(4, power);\n\t  precomputed.beta = this._getBeta();\n\t  this.precomputed = precomputed;\n\n\t  return this;\n\t};\n\n\tBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n\t  if (!this.precomputed)\n\t    { return false; }\n\n\t  var doubles = this.precomputed.doubles;\n\t  if (!doubles)\n\t    { return false; }\n\n\t  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n\t};\n\n\tBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n\t  if (this.precomputed && this.precomputed.doubles)\n\t    { return this.precomputed.doubles; }\n\n\t  var doubles = [ this ];\n\t  var acc = this;\n\t  for (var i = 0; i < power; i += step) {\n\t    for (var j = 0; j < step; j++)\n\t      { acc = acc.dbl(); }\n\t    doubles.push(acc);\n\t  }\n\t  return {\n\t    step: step,\n\t    points: doubles\n\t  };\n\t};\n\n\tBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n\t  if (this.precomputed && this.precomputed.naf)\n\t    { return this.precomputed.naf; }\n\n\t  var res = [ this ];\n\t  var max = (1 << wnd) - 1;\n\t  var dbl = max === 1 ? null : this.dbl();\n\t  for (var i = 1; i < max; i++)\n\t    { res[i] = res[i - 1].add(dbl); }\n\t  return {\n\t    wnd: wnd,\n\t    points: res\n\t  };\n\t};\n\n\tBasePoint.prototype._getBeta = function _getBeta() {\n\t  return null;\n\t};\n\n\tBasePoint.prototype.dblp = function dblp(k) {\n\t  var r = this;\n\t  for (var i = 0; i < k; i++)\n\t    { r = r.dbl(); }\n\t  return r;\n\t};\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = __webpack_require__(11);\n\tvar elliptic = __webpack_require__(1);\n\tvar BN = __webpack_require__(4);\n\tvar inherits = __webpack_require__(14);\n\tvar Base = curve.base;\n\n\tvar assert = elliptic.utils.assert;\n\n\tfunction ShortCurve(conf) {\n\t  Base.call(this, 'short', conf);\n\n\t  this.a = new BN(conf.a, 16).toRed(this.red);\n\t  this.b = new BN(conf.b, 16).toRed(this.red);\n\t  this.tinv = this.two.redInvm();\n\n\t  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n\t  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n\t  // If the curve is endomorphic, precalculate beta and lambda\n\t  this.endo = this._getEndomorphism(conf);\n\t  this._endoWnafT1 = new Array(4);\n\t  this._endoWnafT2 = new Array(4);\n\t}\n\tinherits(ShortCurve, Base);\n\tmodule.exports = ShortCurve;\n\n\tShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n\t  // No efficient endomorphism\n\t  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n\t    { return; }\n\n\t  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\t  var beta;\n\t  var lambda;\n\t  if (conf.beta) {\n\t    beta = new BN(conf.beta, 16).toRed(this.red);\n\t  } else {\n\t    var betas = this._getEndoRoots(this.p);\n\t    // Choose the smallest beta\n\t    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n\t    beta = beta.toRed(this.red);\n\t  }\n\t  if (conf.lambda) {\n\t    lambda = new BN(conf.lambda, 16);\n\t  } else {\n\t    // Choose the lambda that is matching selected beta\n\t    var lambdas = this._getEndoRoots(this.n);\n\t    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n\t      lambda = lambdas[0];\n\t    } else {\n\t      lambda = lambdas[1];\n\t      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n\t    }\n\t  }\n\n\t  // Get basis vectors, used for balanced length-two representation\n\t  var basis;\n\t  if (conf.basis) {\n\t    basis = conf.basis.map(function(vec) {\n\t      return {\n\t        a: new BN(vec.a, 16),\n\t        b: new BN(vec.b, 16)\n\t      };\n\t    });\n\t  } else {\n\t    basis = this._getEndoBasis(lambda);\n\t  }\n\n\t  return {\n\t    beta: beta,\n\t    lambda: lambda,\n\t    basis: basis\n\t  };\n\t};\n\n\tShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n\t  // Find roots of for x^2 + x + 1 in F\n\t  // Root = (-1 +- Sqrt(-3)) / 2\n\t  //\n\t  var red = num === this.p ? this.red : BN.mont(num);\n\t  var tinv = new BN(2).toRed(red).redInvm();\n\t  var ntinv = tinv.redNeg();\n\n\t  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n\t  var l1 = ntinv.redAdd(s).fromRed();\n\t  var l2 = ntinv.redSub(s).fromRed();\n\t  return [ l1, l2 ];\n\t};\n\n\tShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n\t  // aprxSqrt >= sqrt(this.n)\n\t  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n\t  // 3.74\n\t  // Run EGCD, until r(L + 1) < aprxSqrt\n\t  var u = lambda;\n\t  var v = this.n.clone();\n\t  var x1 = new BN(1);\n\t  var y1 = new BN(0);\n\t  var x2 = new BN(0);\n\t  var y2 = new BN(1);\n\n\t  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\t  var a0;\n\t  var b0;\n\t  // First vector\n\t  var a1;\n\t  var b1;\n\t  // Second vector\n\t  var a2;\n\t  var b2;\n\n\t  var prevR;\n\t  var i = 0;\n\t  var r;\n\t  var x;\n\t  while (u.cmpn(0) !== 0) {\n\t    var q = v.div(u);\n\t    r = v.sub(q.mul(u));\n\t    x = x2.sub(q.mul(x1));\n\t    var y = y2.sub(q.mul(y1));\n\n\t    if (!a1 && r.cmp(aprxSqrt) < 0) {\n\t      a0 = prevR.neg();\n\t      b0 = x1;\n\t      a1 = r.neg();\n\t      b1 = x;\n\t    } else if (a1 && ++i === 2) {\n\t      break;\n\t    }\n\t    prevR = r;\n\n\t    v = u;\n\t    u = r;\n\t    x2 = x1;\n\t    x1 = x;\n\t    y2 = y1;\n\t    y1 = y;\n\t  }\n\t  a2 = r.neg();\n\t  b2 = x;\n\n\t  var len1 = a1.sqr().add(b1.sqr());\n\t  var len2 = a2.sqr().add(b2.sqr());\n\t  if (len2.cmp(len1) >= 0) {\n\t    a2 = a0;\n\t    b2 = b0;\n\t  }\n\n\t  // Normalize signs\n\t  if (a1.negative) {\n\t    a1 = a1.neg();\n\t    b1 = b1.neg();\n\t  }\n\t  if (a2.negative) {\n\t    a2 = a2.neg();\n\t    b2 = b2.neg();\n\t  }\n\n\t  return [\n\t    { a: a1, b: b1 },\n\t    { a: a2, b: b2 }\n\t  ];\n\t};\n\n\tShortCurve.prototype._endoSplit = function _endoSplit(k) {\n\t  var basis = this.endo.basis;\n\t  var v1 = basis[0];\n\t  var v2 = basis[1];\n\n\t  var c1 = v2.b.mul(k).divRound(this.n);\n\t  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n\t  var p1 = c1.mul(v1.a);\n\t  var p2 = c2.mul(v2.a);\n\t  var q1 = c1.mul(v1.b);\n\t  var q2 = c2.mul(v2.b);\n\n\t  // Calculate answer\n\t  var k1 = k.sub(p1).sub(p2);\n\t  var k2 = q1.add(q2).neg();\n\t  return { k1: k1, k2: k2 };\n\t};\n\n\tShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new BN(x, 16);\n\t  if (!x.red)\n\t    { x = x.toRed(this.red); }\n\n\t  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n\t  var y = y2.redSqrt();\n\t  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n\t    { throw new Error('invalid point'); }\n\n\t  // XXX Is there any way to tell if the number is odd without converting it\n\t  // to non-red form?\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd)\n\t    { y = y.redNeg(); }\n\n\t  return this.point(x, y);\n\t};\n\n\tShortCurve.prototype.validate = function validate(point) {\n\t  if (point.inf)\n\t    { return true; }\n\n\t  var x = point.x;\n\t  var y = point.y;\n\n\t  var ax = this.a.redMul(x);\n\t  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n\t  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n\t};\n\n\tShortCurve.prototype._endoWnafMulAdd =\n\t    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n\t  var this$1 = this;\n\n\t  var npoints = this._endoWnafT1;\n\t  var ncoeffs = this._endoWnafT2;\n\t  for (var i = 0; i < points.length; i++) {\n\t    var split = this$1._endoSplit(coeffs[i]);\n\t    var p = points[i];\n\t    var beta = p._getBeta();\n\n\t    if (split.k1.negative) {\n\t      split.k1.ineg();\n\t      p = p.neg(true);\n\t    }\n\t    if (split.k2.negative) {\n\t      split.k2.ineg();\n\t      beta = beta.neg(true);\n\t    }\n\n\t    npoints[i * 2] = p;\n\t    npoints[i * 2 + 1] = beta;\n\t    ncoeffs[i * 2] = split.k1;\n\t    ncoeffs[i * 2 + 1] = split.k2;\n\t  }\n\t  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n\t  // Clean-up references to points and coefficients\n\t  for (var j = 0; j < i * 2; j++) {\n\t    npoints[j] = null;\n\t    ncoeffs[j] = null;\n\t  }\n\t  return res;\n\t};\n\n\tfunction Point(curve, x, y, isRed) {\n\t  Base.BasePoint.call(this, curve, 'affine');\n\t  if (x === null && y === null) {\n\t    this.x = null;\n\t    this.y = null;\n\t    this.inf = true;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    // Force redgomery representation when loading from JSON\n\t    if (isRed) {\n\t      this.x.forceRed(this.curve.red);\n\t      this.y.forceRed(this.curve.red);\n\t    }\n\t    if (!this.x.red)\n\t      { this.x = this.x.toRed(this.curve.red); }\n\t    if (!this.y.red)\n\t      { this.y = this.y.toRed(this.curve.red); }\n\t    this.inf = false;\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\n\tShortCurve.prototype.point = function point(x, y, isRed) {\n\t  return new Point(this, x, y, isRed);\n\t};\n\n\tShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n\t  return Point.fromJSON(this, obj, red);\n\t};\n\n\tPoint.prototype._getBeta = function _getBeta() {\n\t  if (!this.curve.endo)\n\t    { return; }\n\n\t  var pre = this.precomputed;\n\t  if (pre && pre.beta)\n\t    { return pre.beta; }\n\n\t  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\t  if (pre) {\n\t    var curve = this.curve;\n\t    var endoMul = function(p) {\n\t      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n\t    };\n\t    pre.beta = beta;\n\t    beta.precomputed = {\n\t      beta: null,\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(endoMul)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(endoMul)\n\t      }\n\t    };\n\t  }\n\t  return beta;\n\t};\n\n\tPoint.prototype.toJSON = function toJSON() {\n\t  if (!this.precomputed)\n\t    { return [ this.x, this.y ]; }\n\n\t  return [ this.x, this.y, this.precomputed && {\n\t    doubles: this.precomputed.doubles && {\n\t      step: this.precomputed.doubles.step,\n\t      points: this.precomputed.doubles.points.slice(1)\n\t    },\n\t    naf: this.precomputed.naf && {\n\t      wnd: this.precomputed.naf.wnd,\n\t      points: this.precomputed.naf.points.slice(1)\n\t    }\n\t  } ];\n\t};\n\n\tPoint.fromJSON = function fromJSON(curve, obj, red) {\n\t  if (typeof obj === 'string')\n\t    { obj = JSON.parse(obj); }\n\t  var res = curve.point(obj[0], obj[1], red);\n\t  if (!obj[2])\n\t    { return res; }\n\n\t  function obj2point(obj) {\n\t    return curve.point(obj[0], obj[1], red);\n\t  }\n\n\t  var pre = obj[2];\n\t  res.precomputed = {\n\t    beta: null,\n\t    doubles: pre.doubles && {\n\t      step: pre.doubles.step,\n\t      points: [ res ].concat(pre.doubles.points.map(obj2point))\n\t    },\n\t    naf: pre.naf && {\n\t      wnd: pre.naf.wnd,\n\t      points: [ res ].concat(pre.naf.points.map(obj2point))\n\t    }\n\t  };\n\t  return res;\n\t};\n\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC Point Infinity>'; }\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n\t      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n\t};\n\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  return this.inf;\n\t};\n\n\tPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.inf)\n\t    { return p; }\n\n\t  // P + O = P\n\t  if (p.inf)\n\t    { return this; }\n\n\t  // P + P = 2P\n\t  if (this.eq(p))\n\t    { return this.dbl(); }\n\n\t  // P + (-P) = O\n\t  if (this.neg().eq(p))\n\t    { return this.curve.point(null, null); }\n\n\t  // P + Q = O\n\t  if (this.x.cmp(p.x) === 0)\n\t    { return this.curve.point(null, null); }\n\n\t  var c = this.y.redSub(p.y);\n\t  if (c.cmpn(0) !== 0)\n\t    { c = c.redMul(this.x.redSub(p.x).redInvm()); }\n\t  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.inf)\n\t    { return this; }\n\n\t  // 2P = O\n\t  var ys1 = this.y.redAdd(this.y);\n\t  if (ys1.cmpn(0) === 0)\n\t    { return this.curve.point(null, null); }\n\n\t  var a = this.curve.a;\n\n\t  var x2 = this.x.redSqr();\n\t  var dyinv = ys1.redInvm();\n\t  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n\t  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\n\tPoint.prototype.getX = function getX() {\n\t  return this.x.fromRed();\n\t};\n\n\tPoint.prototype.getY = function getY() {\n\t  return this.y.fromRed();\n\t};\n\n\tPoint.prototype.mul = function mul(k) {\n\t  k = new BN(k, 16);\n\n\t  if (this._hasDoubles(k))\n\t    { return this.curve._fixedNafMul(this, k); }\n\t  else if (this.curve.endo)\n\t    { return this.curve._endoWnafMulAdd([ this ], [ k ]); }\n\t  else\n\t    { return this.curve._wnafMul(this, k); }\n\t};\n\n\tPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n\t  var points = [ this, p2 ];\n\t  var coeffs = [ k1, k2 ];\n\t  if (this.curve.endo)\n\t    { return this.curve._endoWnafMulAdd(points, coeffs); }\n\t  else\n\t    { return this.curve._wnafMulAdd(1, points, coeffs, 2); }\n\t};\n\n\tPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n\t  var points = [ this, p2 ];\n\t  var coeffs = [ k1, k2 ];\n\t  if (this.curve.endo)\n\t    { return this.curve._endoWnafMulAdd(points, coeffs, true); }\n\t  else\n\t    { return this.curve._wnafMulAdd(1, points, coeffs, 2, true); }\n\t};\n\n\tPoint.prototype.eq = function eq(p) {\n\t  return this === p ||\n\t         this.inf === p.inf &&\n\t             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n\t};\n\n\tPoint.prototype.neg = function neg(_precompute) {\n\t  if (this.inf)\n\t    { return this; }\n\n\t  var res = this.curve.point(this.x, this.y.redNeg());\n\t  if (_precompute && this.precomputed) {\n\t    var pre = this.precomputed;\n\t    var negate = function(p) {\n\t      return p.neg();\n\t    };\n\t    res.precomputed = {\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(negate)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(negate)\n\t      }\n\t    };\n\t  }\n\t  return res;\n\t};\n\n\tPoint.prototype.toJ = function toJ() {\n\t  if (this.inf)\n\t    { return this.curve.jpoint(null, null, null); }\n\n\t  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n\t  return res;\n\t};\n\n\tfunction JPoint(curve, x, y, z) {\n\t  Base.BasePoint.call(this, curve, 'jacobian');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.y = this.curve.one;\n\t    this.z = new BN(0);\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    this.z = new BN(z, 16);\n\t  }\n\t  if (!this.x.red)\n\t    { this.x = this.x.toRed(this.curve.red); }\n\t  if (!this.y.red)\n\t    { this.y = this.y.toRed(this.curve.red); }\n\t  if (!this.z.red)\n\t    { this.z = this.z.toRed(this.curve.red); }\n\n\t  this.zOne = this.z === this.curve.one;\n\t}\n\tinherits(JPoint, Base.BasePoint);\n\n\tShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n\t  return new JPoint(this, x, y, z);\n\t};\n\n\tJPoint.prototype.toP = function toP() {\n\t  if (this.isInfinity())\n\t    { return this.curve.point(null, null); }\n\n\t  var zinv = this.z.redInvm();\n\t  var zinv2 = zinv.redSqr();\n\t  var ax = this.x.redMul(zinv2);\n\t  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n\t  return this.curve.point(ax, ay);\n\t};\n\n\tJPoint.prototype.neg = function neg() {\n\t  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n\t};\n\n\tJPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.isInfinity())\n\t    { return p; }\n\n\t  // P + O = P\n\t  if (p.isInfinity())\n\t    { return this; }\n\n\t  // 12M + 4S + 7A\n\t  var pz2 = p.z.redSqr();\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x.redMul(pz2);\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y.redMul(pz2.redMul(p.z));\n\t  var s2 = p.y.redMul(z2.redMul(this.z));\n\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0)\n\t      { return this.curve.jpoint(null, null, null); }\n\t    else\n\t      { return this.dbl(); }\n\t  }\n\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(p.z).redMul(h);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.mixedAdd = function mixedAdd(p) {\n\t  // O + P = P\n\t  if (this.isInfinity())\n\t    { return p.toJ(); }\n\n\t  // P + O = P\n\t  if (p.isInfinity())\n\t    { return this; }\n\n\t  // 8M + 3S + 7A\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x;\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y;\n\t  var s2 = p.y.redMul(z2).redMul(this.z);\n\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0)\n\t      { return this.curve.jpoint(null, null, null); }\n\t    else\n\t      { return this.dbl(); }\n\t  }\n\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(h);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.dblp = function dblp(pow) {\n\t  if (pow === 0)\n\t    { return this; }\n\t  if (this.isInfinity())\n\t    { return this; }\n\t  if (!pow)\n\t    { return this.dbl(); }\n\n\t  if (this.curve.zeroA || this.curve.threeA) {\n\t    var r = this;\n\t    for (var i = 0; i < pow; i++)\n\t      { r = r.dbl(); }\n\t    return r;\n\t  }\n\n\t  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n\t  // N = 1 => 6M + 6S + 9A\n\t  var a = this.curve.a;\n\t  var tinv = this.curve.tinv;\n\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\n\t  // Reuse results\n\t  var jyd = jy.redAdd(jy);\n\t  for (var i = 0; i < pow; i++) {\n\t    var jx2 = jx.redSqr();\n\t    var jyd2 = jyd.redSqr();\n\t    var jyd4 = jyd2.redSqr();\n\t    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n\t    var t1 = jx.redMul(jyd2);\n\t    var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t    var t2 = t1.redISub(nx);\n\t    var dny = c.redMul(t2);\n\t    dny = dny.redIAdd(dny).redISub(jyd4);\n\t    var nz = jyd.redMul(jz);\n\t    if (i + 1 < pow)\n\t      { jz4 = jz4.redMul(jyd4); }\n\n\t    jx = nx;\n\t    jz = nz;\n\t    jyd = dny;\n\t  }\n\n\t  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n\t};\n\n\tJPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity())\n\t    { return this; }\n\n\t  if (this.curve.zeroA)\n\t    { return this._zeroDbl(); }\n\t  else if (this.curve.threeA)\n\t    { return this._threeDbl(); }\n\t  else\n\t    { return this._dbl(); }\n\t};\n\n\tJPoint.prototype._zeroDbl = function _zeroDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 14A\n\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a; a = 0\n\t    var m = xx.redAdd(xx).redIAdd(xx);\n\t    // T = M ^ 2 - 2*S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\n\t    // 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2*Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-dbl-2009-l\n\t    // 2M + 5S + 13A\n\n\t    // A = X1^2\n\t    var a = this.x.redSqr();\n\t    // B = Y1^2\n\t    var b = this.y.redSqr();\n\t    // C = B^2\n\t    var c = b.redSqr();\n\t    // D = 2 * ((X1 + B)^2 - A - C)\n\t    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n\t    d = d.redIAdd(d);\n\t    // E = 3 * A\n\t    var e = a.redAdd(a).redIAdd(a);\n\t    // F = E^2\n\t    var f = e.redSqr();\n\n\t    // 8 * C\n\t    var c8 = c.redIAdd(c);\n\t    c8 = c8.redIAdd(c8);\n\t    c8 = c8.redIAdd(c8);\n\n\t    // X3 = F - 2 * D\n\t    nx = f.redISub(d).redISub(d);\n\t    // Y3 = E * (D - X3) - 8 * C\n\t    ny = e.redMul(d.redISub(nx)).redISub(c8);\n\t    // Z3 = 2 * Y1 * Z1\n\t    nz = this.y.redMul(this.z);\n\t    nz = nz.redIAdd(nz);\n\t  }\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype._threeDbl = function _threeDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 15A\n\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a\n\t    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n\t    // T = M^2 - 2 * S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2 * Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n\t    // 3M + 5S\n\n\t    // delta = Z1^2\n\t    var delta = this.z.redSqr();\n\t    // gamma = Y1^2\n\t    var gamma = this.y.redSqr();\n\t    // beta = X1 * gamma\n\t    var beta = this.x.redMul(gamma);\n\t    // alpha = 3 * (X1 - delta) * (X1 + delta)\n\t    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n\t    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n\t    // X3 = alpha^2 - 8 * beta\n\t    var beta4 = beta.redIAdd(beta);\n\t    beta4 = beta4.redIAdd(beta4);\n\t    var beta8 = beta4.redAdd(beta4);\n\t    nx = alpha.redSqr().redISub(beta8);\n\t    // Z3 = (Y1 + Z1)^2 - gamma - delta\n\t    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n\t    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\t    var ggamma8 = gamma.redSqr();\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n\t  }\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype._dbl = function _dbl() {\n\t  var a = this.curve.a;\n\n\t  // 4M + 6S + 10A\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\n\t  var jx2 = jx.redSqr();\n\t  var jy2 = jy.redSqr();\n\n\t  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n\t  var jxd4 = jx.redAdd(jx);\n\t  jxd4 = jxd4.redIAdd(jxd4);\n\t  var t1 = jxd4.redMul(jy2);\n\t  var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t  var t2 = t1.redISub(nx);\n\n\t  var jyd8 = jy2.redSqr();\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  var ny = c.redMul(t2).redISub(jyd8);\n\t  var nz = jy.redAdd(jy).redMul(jz);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.trpl = function trpl() {\n\t  if (!this.curve.zeroA)\n\t    { return this.dbl().add(this); }\n\n\t  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n\t  // 5M + 10S + ...\n\n\t  // XX = X1^2\n\t  var xx = this.x.redSqr();\n\t  // YY = Y1^2\n\t  var yy = this.y.redSqr();\n\t  // ZZ = Z1^2\n\t  var zz = this.z.redSqr();\n\t  // YYYY = YY^2\n\t  var yyyy = yy.redSqr();\n\t  // M = 3 * XX + a * ZZ2; a = 0\n\t  var m = xx.redAdd(xx).redIAdd(xx);\n\t  // MM = M^2\n\t  var mm = m.redSqr();\n\t  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\t  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t  e = e.redIAdd(e);\n\t  e = e.redAdd(e).redIAdd(e);\n\t  e = e.redISub(mm);\n\t  // EE = E^2\n\t  var ee = e.redSqr();\n\t  // T = 16*YYYY\n\t  var t = yyyy.redIAdd(yyyy);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  // U = (M + E)^2 - MM - EE - T\n\t  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n\t  // X3 = 4 * (X1 * EE - 4 * YY * U)\n\t  var yyu4 = yy.redMul(u);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  var nx = this.x.redMul(ee).redISub(yyu4);\n\t  nx = nx.redIAdd(nx);\n\t  nx = nx.redIAdd(nx);\n\t  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\t  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  // Z3 = (Z1 + E)^2 - ZZ - EE\n\t  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.mul = function mul(k, kbase) {\n\t  k = new BN(k, kbase);\n\n\t  return this.curve._wnafMul(this, k);\n\t};\n\n\tJPoint.prototype.eq = function eq(p) {\n\t  if (p.type === 'affine')\n\t    { return this.eq(p.toJ()); }\n\n\t  if (this === p)\n\t    { return true; }\n\n\t  // x1 * z2^2 == x2 * z1^2\n\t  var z2 = this.z.redSqr();\n\t  var pz2 = p.z.redSqr();\n\t  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n\t    { return false; }\n\n\t  // y1 * z2^3 == y2 * z1^3\n\t  var z3 = z2.redMul(this.z);\n\t  var pz3 = pz2.redMul(p.z);\n\t  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n\t};\n\n\tJPoint.prototype.eqXToP = function eqXToP(x) {\n\t  var this$1 = this;\n\n\t  var zs = this.z.redSqr();\n\t  var rx = x.toRed(this.curve.red).redMul(zs);\n\t  if (this.x.cmp(rx) === 0)\n\t    { return true; }\n\n\t  var xc = x.clone();\n\t  var t = this.curve.redN.redMul(zs);\n\t  for (;;) {\n\t    xc.iadd(this$1.curve.n);\n\t    if (xc.cmp(this$1.curve.p) >= 0)\n\t      { return false; }\n\n\t    rx.redIAdd(t);\n\t    if (this$1.x.cmp(rx) === 0)\n\t      { return true; }\n\t  }\n\t  return false;\n\t};\n\n\tJPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC JPoint Infinity>'; }\n\t  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n\t      ' y: ' + this.y.toString(16, 2) +\n\t      ' z: ' + this.z.toString(16, 2) + '>';\n\t};\n\n\tJPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  };\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = __webpack_require__(11);\n\tvar BN = __webpack_require__(4);\n\tvar inherits = __webpack_require__(14);\n\tvar Base = curve.base;\n\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\n\tfunction MontCurve(conf) {\n\t  Base.call(this, 'mont', conf);\n\n\t  this.a = new BN(conf.a, 16).toRed(this.red);\n\t  this.b = new BN(conf.b, 16).toRed(this.red);\n\t  this.i4 = new BN(4).toRed(this.red).redInvm();\n\t  this.two = new BN(2).toRed(this.red);\n\t  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n\t}\n\tinherits(MontCurve, Base);\n\tmodule.exports = MontCurve;\n\n\tMontCurve.prototype.validate = function validate(point) {\n\t  var x = point.normalize().x;\n\t  var x2 = x.redSqr();\n\t  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n\t  var y = rhs.redSqrt();\n\n\t  return y.redSqr().cmp(rhs) === 0;\n\t};\n\n\tfunction Point(curve, x, z) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.z = this.curve.zero;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.z = new BN(z, 16);\n\t    if (!this.x.red)\n\t      { this.x = this.x.toRed(this.curve.red); }\n\t    if (!this.z.red)\n\t      { this.z = this.z.toRed(this.curve.red); }\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\n\tMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  return this.point(utils.toArray(bytes, enc), 1);\n\t};\n\n\tMontCurve.prototype.point = function point(x, z) {\n\t  return new Point(this, x, z);\n\t};\n\n\tMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\n\tPoint.prototype.precompute = function precompute() {\n\t  // No-op\n\t};\n\n\tPoint.prototype._encode = function _encode() {\n\t  return this.getX().toArray('be', this.curve.p.byteLength());\n\t};\n\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1] || curve.one);\n\t};\n\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC Point Infinity>'; }\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n\t      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\n\tPoint.prototype.dbl = function dbl() {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n\t  // 2M + 2S + 4A\n\n\t  // A = X1 + Z1\n\t  var a = this.x.redAdd(this.z);\n\t  // AA = A^2\n\t  var aa = a.redSqr();\n\t  // B = X1 - Z1\n\t  var b = this.x.redSub(this.z);\n\t  // BB = B^2\n\t  var bb = b.redSqr();\n\t  // C = AA - BB\n\t  var c = aa.redSub(bb);\n\t  // X3 = AA * BB\n\t  var nx = aa.redMul(bb);\n\t  // Z3 = C * (BB + A24 * C)\n\t  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n\t  return this.curve.point(nx, nz);\n\t};\n\n\tPoint.prototype.add = function add() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\n\tPoint.prototype.diffAdd = function diffAdd(p, diff) {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n\t  // 4M + 2S + 6A\n\n\t  // A = X2 + Z2\n\t  var a = this.x.redAdd(this.z);\n\t  // B = X2 - Z2\n\t  var b = this.x.redSub(this.z);\n\t  // C = X3 + Z3\n\t  var c = p.x.redAdd(p.z);\n\t  // D = X3 - Z3\n\t  var d = p.x.redSub(p.z);\n\t  // DA = D * A\n\t  var da = d.redMul(a);\n\t  // CB = C * B\n\t  var cb = c.redMul(b);\n\t  // X5 = Z1 * (DA + CB)^2\n\t  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n\t  // Z5 = X1 * (DA - CB)^2\n\t  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n\t  return this.curve.point(nx, nz);\n\t};\n\n\tPoint.prototype.mul = function mul(k) {\n\t  var t = k.clone();\n\t  var a = this; // (N / 2) * Q + Q\n\t  var b = this.curve.point(null, null); // (N / 2) * Q\n\t  var c = this; // Q\n\n\t  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n\t    { bits.push(t.andln(1)); }\n\n\t  for (var i = bits.length - 1; i >= 0; i--) {\n\t    if (bits[i] === 0) {\n\t      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n\t      a = a.diffAdd(b, c);\n\t      // N * Q = 2 * ((N / 2) * Q + Q))\n\t      b = b.dbl();\n\t    } else {\n\t      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n\t      b = a.diffAdd(b, c);\n\t      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\t      a = a.dbl();\n\t    }\n\t  }\n\t  return b;\n\t};\n\n\tPoint.prototype.mulAdd = function mulAdd() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\n\tPoint.prototype.jumlAdd = function jumlAdd() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\n\tPoint.prototype.eq = function eq(other) {\n\t  return this.getX().cmp(other.getX()) === 0;\n\t};\n\n\tPoint.prototype.normalize = function normalize() {\n\t  this.x = this.x.redMul(this.z.redInvm());\n\t  this.z = this.curve.one;\n\t  return this;\n\t};\n\n\tPoint.prototype.getX = function getX() {\n\t  // Normalize coordinates\n\t  this.normalize();\n\n\t  return this.x.fromRed();\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = __webpack_require__(11);\n\tvar elliptic = __webpack_require__(1);\n\tvar BN = __webpack_require__(4);\n\tvar inherits = __webpack_require__(14);\n\tvar Base = curve.base;\n\n\tvar assert = elliptic.utils.assert;\n\n\tfunction EdwardsCurve(conf) {\n\t  // NOTE: Important as we are creating point in Base.call()\n\t  this.twisted = (conf.a | 0) !== 1;\n\t  this.mOneA = this.twisted && (conf.a | 0) === -1;\n\t  this.extended = this.mOneA;\n\n\t  Base.call(this, 'edwards', conf);\n\n\t  this.a = new BN(conf.a, 16).umod(this.red.m);\n\t  this.a = this.a.toRed(this.red);\n\t  this.c = new BN(conf.c, 16).toRed(this.red);\n\t  this.c2 = this.c.redSqr();\n\t  this.d = new BN(conf.d, 16).toRed(this.red);\n\t  this.dd = this.d.redAdd(this.d);\n\n\t  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n\t  this.oneC = (conf.c | 0) === 1;\n\t}\n\tinherits(EdwardsCurve, Base);\n\tmodule.exports = EdwardsCurve;\n\n\tEdwardsCurve.prototype._mulA = function _mulA(num) {\n\t  if (this.mOneA)\n\t    { return num.redNeg(); }\n\t  else\n\t    { return this.a.redMul(num); }\n\t};\n\n\tEdwardsCurve.prototype._mulC = function _mulC(num) {\n\t  if (this.oneC)\n\t    { return num; }\n\t  else\n\t    { return this.c.redMul(num); }\n\t};\n\n\t// Just for compatibility with Short curve\n\tEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n\t  return this.point(x, y, z, t);\n\t};\n\n\tEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new BN(x, 16);\n\t  if (!x.red)\n\t    { x = x.toRed(this.red); }\n\n\t  var x2 = x.redSqr();\n\t  var rhs = this.c2.redSub(this.a.redMul(x2));\n\t  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n\t  var y2 = rhs.redMul(lhs.redInvm());\n\t  var y = y2.redSqrt();\n\t  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n\t    { throw new Error('invalid point'); }\n\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd)\n\t    { y = y.redNeg(); }\n\n\t  return this.point(x, y);\n\t};\n\n\tEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n\t  y = new BN(y, 16);\n\t  if (!y.red)\n\t    { y = y.toRed(this.red); }\n\n\t  // x^2 = (y^2 - 1) / (d y^2 + 1)\n\t  var y2 = y.redSqr();\n\t  var lhs = y2.redSub(this.one);\n\t  var rhs = y2.redMul(this.d).redAdd(this.one);\n\t  var x2 = lhs.redMul(rhs.redInvm());\n\n\t  if (x2.cmp(this.zero) === 0) {\n\t    if (odd)\n\t      { throw new Error('invalid point'); }\n\t    else\n\t      { return this.point(this.zero, y); }\n\t  }\n\n\t  var x = x2.redSqrt();\n\t  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n\t    { throw new Error('invalid point'); }\n\n\t  if (x.isOdd() !== odd)\n\t    { x = x.redNeg(); }\n\n\t  return this.point(x, y);\n\t};\n\n\tEdwardsCurve.prototype.validate = function validate(point) {\n\t  if (point.isInfinity())\n\t    { return true; }\n\n\t  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\t  point.normalize();\n\n\t  var x2 = point.x.redSqr();\n\t  var y2 = point.y.redSqr();\n\t  var lhs = x2.redMul(this.a).redAdd(y2);\n\t  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n\t  return lhs.cmp(rhs) === 0;\n\t};\n\n\tfunction Point(curve, x, y, z, t) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.zero;\n\t    this.y = this.curve.one;\n\t    this.z = this.curve.one;\n\t    this.t = this.curve.zero;\n\t    this.zOne = true;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    this.z = z ? new BN(z, 16) : this.curve.one;\n\t    this.t = t && new BN(t, 16);\n\t    if (!this.x.red)\n\t      { this.x = this.x.toRed(this.curve.red); }\n\t    if (!this.y.red)\n\t      { this.y = this.y.toRed(this.curve.red); }\n\t    if (!this.z.red)\n\t      { this.z = this.z.toRed(this.curve.red); }\n\t    if (this.t && !this.t.red)\n\t      { this.t = this.t.toRed(this.curve.red); }\n\t    this.zOne = this.z === this.curve.one;\n\n\t    // Use extended coordinates\n\t    if (this.curve.extended && !this.t) {\n\t      this.t = this.x.redMul(this.y);\n\t      if (!this.zOne)\n\t        { this.t = this.t.redMul(this.z.redInvm()); }\n\t    }\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\n\tEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\n\tEdwardsCurve.prototype.point = function point(x, y, z, t) {\n\t  return new Point(this, x, y, z, t);\n\t};\n\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1], obj[2]);\n\t};\n\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC Point Infinity>'; }\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n\t      ' y: ' + this.y.fromRed().toString(16, 2) +\n\t      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.x.cmpn(0) === 0 &&\n\t         this.y.cmp(this.z) === 0;\n\t};\n\n\tPoint.prototype._extDbl = function _extDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #doubling-dbl-2008-hwcd\n\t  // 4M + 4S\n\n\t  // A = X1^2\n\t  var a = this.x.redSqr();\n\t  // B = Y1^2\n\t  var b = this.y.redSqr();\n\t  // C = 2 * Z1^2\n\t  var c = this.z.redSqr();\n\t  c = c.redIAdd(c);\n\t  // D = a * A\n\t  var d = this.curve._mulA(a);\n\t  // E = (X1 + Y1)^2 - A - B\n\t  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n\t  // G = D + B\n\t  var g = d.redAdd(b);\n\t  // F = G - C\n\t  var f = g.redSub(c);\n\t  // H = D - B\n\t  var h = d.redSub(b);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\n\tPoint.prototype._projDbl = function _projDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #doubling-dbl-2008-bbjlp\n\t  //     #doubling-dbl-2007-bl\n\t  // and others\n\t  // Generally 3M + 4S or 2M + 4S\n\n\t  // B = (X1 + Y1)^2\n\t  var b = this.x.redAdd(this.y).redSqr();\n\t  // C = X1^2\n\t  var c = this.x.redSqr();\n\t  // D = Y1^2\n\t  var d = this.y.redSqr();\n\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // E = a * C\n\t    var e = this.curve._mulA(c);\n\t    // F = E + D\n\t    var f = e.redAdd(d);\n\t    if (this.zOne) {\n\t      // X3 = (B - C - D) * (F - 2)\n\t      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F^2 - 2 * F\n\t      nz = f.redSqr().redSub(f).redSub(f);\n\t    } else {\n\t      // H = Z1^2\n\t      var h = this.z.redSqr();\n\t      // J = F - 2 * H\n\t      var j = f.redSub(h).redISub(h);\n\t      // X3 = (B-C-D)*J\n\t      nx = b.redSub(c).redISub(d).redMul(j);\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F * J\n\t      nz = f.redMul(j);\n\t    }\n\t  } else {\n\t    // E = C + D\n\t    var e = c.redAdd(d);\n\t    // H = (c * Z1)^2\n\t    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n\t    // J = E - 2 * H\n\t    var j = e.redSub(h).redSub(h);\n\t    // X3 = c * (B - E) * J\n\t    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n\t    // Y3 = c * E * (C - D)\n\t    ny = this.curve._mulC(e).redMul(c.redISub(d));\n\t    // Z3 = E * J\n\t    nz = e.redMul(j);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity())\n\t    { return this; }\n\n\t  // Double in extended coordinates\n\t  if (this.curve.extended)\n\t    { return this._extDbl(); }\n\t  else\n\t    { return this._projDbl(); }\n\t};\n\n\tPoint.prototype._extAdd = function _extAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #addition-add-2008-hwcd-3\n\t  // 8M\n\n\t  // A = (Y1 - X1) * (Y2 - X2)\n\t  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n\t  // B = (Y1 + X1) * (Y2 + X2)\n\t  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n\t  // C = T1 * k * T2\n\t  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n\t  // D = Z1 * 2 * Z2\n\t  var d = this.z.redMul(p.z.redAdd(p.z));\n\t  // E = B - A\n\t  var e = b.redSub(a);\n\t  // F = D - C\n\t  var f = d.redSub(c);\n\t  // G = D + C\n\t  var g = d.redAdd(c);\n\t  // H = B + A\n\t  var h = b.redAdd(a);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\n\tPoint.prototype._projAdd = function _projAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #addition-add-2008-bbjlp\n\t  //     #addition-add-2007-bl\n\t  // 10M + 1S\n\n\t  // A = Z1 * Z2\n\t  var a = this.z.redMul(p.z);\n\t  // B = A^2\n\t  var b = a.redSqr();\n\t  // C = X1 * X2\n\t  var c = this.x.redMul(p.x);\n\t  // D = Y1 * Y2\n\t  var d = this.y.redMul(p.y);\n\t  // E = d * C * D\n\t  var e = this.curve.d.redMul(c).redMul(d);\n\t  // F = B - E\n\t  var f = b.redSub(e);\n\t  // G = B + E\n\t  var g = b.redAdd(e);\n\t  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\t  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n\t  var nx = a.redMul(f).redMul(tmp);\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // Y3 = A * G * (D - a * C)\n\t    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n\t    // Z3 = F * G\n\t    nz = f.redMul(g);\n\t  } else {\n\t    // Y3 = A * G * (D - C)\n\t    ny = a.redMul(g).redMul(d.redSub(c));\n\t    // Z3 = c * F * G\n\t    nz = this.curve._mulC(f).redMul(g);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\n\tPoint.prototype.add = function add(p) {\n\t  if (this.isInfinity())\n\t    { return p; }\n\t  if (p.isInfinity())\n\t    { return this; }\n\n\t  if (this.curve.extended)\n\t    { return this._extAdd(p); }\n\t  else\n\t    { return this._projAdd(p); }\n\t};\n\n\tPoint.prototype.mul = function mul(k) {\n\t  if (this._hasDoubles(k))\n\t    { return this.curve._fixedNafMul(this, k); }\n\t  else\n\t    { return this.curve._wnafMul(this, k); }\n\t};\n\n\tPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n\t  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n\t};\n\n\tPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n\t  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n\t};\n\n\tPoint.prototype.normalize = function normalize() {\n\t  if (this.zOne)\n\t    { return this; }\n\n\t  // Normalize coordinates\n\t  var zi = this.z.redInvm();\n\t  this.x = this.x.redMul(zi);\n\t  this.y = this.y.redMul(zi);\n\t  if (this.t)\n\t    { this.t = this.t.redMul(zi); }\n\t  this.z = this.curve.one;\n\t  this.zOne = true;\n\t  return this;\n\t};\n\n\tPoint.prototype.neg = function neg() {\n\t  return this.curve.point(this.x.redNeg(),\n\t                          this.y,\n\t                          this.z,\n\t                          this.t && this.t.redNeg());\n\t};\n\n\tPoint.prototype.getX = function getX() {\n\t  this.normalize();\n\t  return this.x.fromRed();\n\t};\n\n\tPoint.prototype.getY = function getY() {\n\t  this.normalize();\n\t  return this.y.fromRed();\n\t};\n\n\tPoint.prototype.eq = function eq(other) {\n\t  return this === other ||\n\t         this.getX().cmp(other.getX()) === 0 &&\n\t         this.getY().cmp(other.getY()) === 0;\n\t};\n\n\tPoint.prototype.eqXToP = function eqXToP(x) {\n\t  var this$1 = this;\n\n\t  var rx = x.toRed(this.curve.red).redMul(this.z);\n\t  if (this.x.cmp(rx) === 0)\n\t    { return true; }\n\n\t  var xc = x.clone();\n\t  var t = this.curve.redN.redMul(this.z);\n\t  for (;;) {\n\t    xc.iadd(this$1.curve.n);\n\t    if (xc.cmp(this$1.curve.p) >= 0)\n\t      { return false; }\n\n\t    rx.redIAdd(t);\n\t    if (this$1.x.cmp(rx) === 0)\n\t      { return true; }\n\t  }\n\t  return false;\n\t};\n\n\t// Compatibility with BaseCurve\n\tPoint.prototype.toP = Point.prototype.normalize;\n\tPoint.prototype.mixedAdd = Point.prototype.add;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curves = exports;\n\n\tvar hash = __webpack_require__(18);\n\tvar elliptic = __webpack_require__(1);\n\n\tvar assert = elliptic.utils.assert;\n\n\tfunction PresetCurve(options) {\n\t  if (options.type === 'short')\n\t    { this.curve = new elliptic.curve.short(options); }\n\t  else if (options.type === 'edwards')\n\t    { this.curve = new elliptic.curve.edwards(options); }\n\t  else\n\t    { this.curve = new elliptic.curve.mont(options); }\n\t  this.g = this.curve.g;\n\t  this.n = this.curve.n;\n\t  this.hash = options.hash;\n\n\t  assert(this.g.validate(), 'Invalid curve');\n\t  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n\t}\n\tcurves.PresetCurve = PresetCurve;\n\n\tfunction defineCurve(name, options) {\n\t  Object.defineProperty(curves, name, {\n\t    configurable: true,\n\t    enumerable: true,\n\t    get: function() {\n\t      var curve = new PresetCurve(options);\n\t      Object.defineProperty(curves, name, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        value: curve\n\t      });\n\t      return curve;\n\t    }\n\t  });\n\t}\n\n\tdefineCurve('p192', {\n\t  type: 'short',\n\t  prime: 'p192',\n\t  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n\t  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n\t  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n\t  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n\t    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n\t  ]\n\t});\n\n\tdefineCurve('p224', {\n\t  type: 'short',\n\t  prime: 'p224',\n\t  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n\t  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n\t  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n\t  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n\t    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n\t  ]\n\t});\n\n\tdefineCurve('p256', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n\t  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n\t  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n\t  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n\t    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n\t  ]\n\t});\n\n\tdefineCurve('p384', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'fffffffe ffffffff 00000000 00000000 ffffffff',\n\t  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'fffffffe ffffffff 00000000 00000000 fffffffc',\n\t  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n\t     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n\t  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n\t     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n\t  hash: hash.sha384,\n\t  gRed: false,\n\t  g: [\n\t    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n\t    '5502f25d bf55296c 3a545e38 72760ab7',\n\t    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n\t    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n\t  ]\n\t});\n\n\tdefineCurve('p521', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n\t  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n\t  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n\t     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n\t     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n\t  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n\t     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n\t  hash: hash.sha512,\n\t  gRed: false,\n\t  g: [\n\t    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n\t    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n\t    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n\t    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n\t    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n\t    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n\t  ]\n\t});\n\n\tdefineCurve('curve25519', {\n\t  type: 'mont',\n\t  prime: 'p25519',\n\t  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n\t  a: '76d06',\n\t  b: '1',\n\t  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '9'\n\t  ]\n\t});\n\n\tdefineCurve('ed25519', {\n\t  type: 'edwards',\n\t  prime: 'p25519',\n\t  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n\t  a: '-1',\n\t  c: '1',\n\t  // -121665 * (121666^(-1)) (mod P)\n\t  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n\t  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n\t    // 4/5\n\t    '6666666666666666666666666666666666666666666666666666666666666658'\n\t  ]\n\t});\n\n\tvar pre;\n\ttry {\n\t  pre = __webpack_require__(24);\n\t} catch (e) {\n\t  pre = undefined;\n\t}\n\n\tdefineCurve('secp256k1', {\n\t  type: 'short',\n\t  prime: 'k256',\n\t  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n\t  a: '0',\n\t  b: '7',\n\t  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n\t  h: '1',\n\t  hash: hash.sha256,\n\n\t  // Precomputed endomorphism\n\t  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n\t  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n\t  basis: [\n\t    {\n\t      a: '3086d221a7d46bcde86c90e49284eb15',\n\t      b: '-e4437ed6010e88286f547fa90abfe4c3'\n\t    },\n\t    {\n\t      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n\t      b: '3086d221a7d46bcde86c90e49284eb15'\n\t    }\n\t  ],\n\n\t  gRed: false,\n\t  g: [\n\t    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n\t    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n\t    pre\n\t  ]\n\t});\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hash = exports;\n\n\thash.utils = __webpack_require__(19);\n\thash.common = __webpack_require__(20);\n\thash.sha = __webpack_require__(21);\n\thash.ripemd = __webpack_require__(22);\n\thash.hmac = __webpack_require__(23);\n\n\t// Proxy hash functions to the main object\n\thash.sha1 = hash.sha.sha1;\n\thash.sha256 = hash.sha.sha256;\n\thash.sha224 = hash.sha.sha224;\n\thash.sha384 = hash.sha.sha384;\n\thash.sha512 = hash.sha.sha512;\n\thash.ripemd160 = hash.ripemd.ripemd160;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar utils = exports;\n\tvar inherits = __webpack_require__(14);\n\n\tfunction toArray(msg, enc) {\n\t  if (Array.isArray(msg))\n\t    { return msg.slice(); }\n\t  if (!msg)\n\t    { return []; }\n\t  var res = [];\n\t  if (typeof msg === 'string') {\n\t    if (!enc) {\n\t      for (var i = 0; i < msg.length; i++) {\n\t        var c = msg.charCodeAt(i);\n\t        var hi = c >> 8;\n\t        var lo = c & 0xff;\n\t        if (hi)\n\t          { res.push(hi, lo); }\n\t        else\n\t          { res.push(lo); }\n\t      }\n\t    } else if (enc === 'hex') {\n\t      msg = msg.replace(/[^a-z0-9]+/ig, '');\n\t      if (msg.length % 2 !== 0)\n\t        { msg = '0' + msg; }\n\t      for (var i = 0; i < msg.length; i += 2)\n\t        { res.push(parseInt(msg[i] + msg[i + 1], 16)); }\n\t    }\n\t  } else {\n\t    for (var i = 0; i < msg.length; i++)\n\t      { res[i] = msg[i] | 0; }\n\t  }\n\t  return res;\n\t}\n\tutils.toArray = toArray;\n\n\tfunction toHex(msg) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++)\n\t    { res += zero2(msg[i].toString(16)); }\n\t  return res;\n\t}\n\tutils.toHex = toHex;\n\n\tfunction htonl(w) {\n\t  var res = (w >>> 24) |\n\t            ((w >>> 8) & 0xff00) |\n\t            ((w << 8) & 0xff0000) |\n\t            ((w & 0xff) << 24);\n\t  return res >>> 0;\n\t}\n\tutils.htonl = htonl;\n\n\tfunction toHex32(msg, endian) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++) {\n\t    var w = msg[i];\n\t    if (endian === 'little')\n\t      { w = htonl(w); }\n\t    res += zero8(w.toString(16));\n\t  }\n\t  return res;\n\t}\n\tutils.toHex32 = toHex32;\n\n\tfunction zero2(word) {\n\t  if (word.length === 1)\n\t    { return '0' + word; }\n\t  else\n\t    { return word; }\n\t}\n\tutils.zero2 = zero2;\n\n\tfunction zero8(word) {\n\t  if (word.length === 7)\n\t    { return '0' + word; }\n\t  else if (word.length === 6)\n\t    { return '00' + word; }\n\t  else if (word.length === 5)\n\t    { return '000' + word; }\n\t  else if (word.length === 4)\n\t    { return '0000' + word; }\n\t  else if (word.length === 3)\n\t    { return '00000' + word; }\n\t  else if (word.length === 2)\n\t    { return '000000' + word; }\n\t  else if (word.length === 1)\n\t    { return '0000000' + word; }\n\t  else\n\t    { return word; }\n\t}\n\tutils.zero8 = zero8;\n\n\tfunction join32(msg, start, end, endian) {\n\t  var len = end - start;\n\t  assert(len % 4 === 0);\n\t  var res = new Array(len / 4);\n\t  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n\t    var w;\n\t    if (endian === 'big')\n\t      { w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3]; }\n\t    else\n\t      { w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k]; }\n\t    res[i] = w >>> 0;\n\t  }\n\t  return res;\n\t}\n\tutils.join32 = join32;\n\n\tfunction split32(msg, endian) {\n\t  var res = new Array(msg.length * 4);\n\t  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n\t    var m = msg[i];\n\t    if (endian === 'big') {\n\t      res[k] = m >>> 24;\n\t      res[k + 1] = (m >>> 16) & 0xff;\n\t      res[k + 2] = (m >>> 8) & 0xff;\n\t      res[k + 3] = m & 0xff;\n\t    } else {\n\t      res[k + 3] = m >>> 24;\n\t      res[k + 2] = (m >>> 16) & 0xff;\n\t      res[k + 1] = (m >>> 8) & 0xff;\n\t      res[k] = m & 0xff;\n\t    }\n\t  }\n\t  return res;\n\t}\n\tutils.split32 = split32;\n\n\tfunction rotr32(w, b) {\n\t  return (w >>> b) | (w << (32 - b));\n\t}\n\tutils.rotr32 = rotr32;\n\n\tfunction rotl32(w, b) {\n\t  return (w << b) | (w >>> (32 - b));\n\t}\n\tutils.rotl32 = rotl32;\n\n\tfunction sum32(a, b) {\n\t  return (a + b) >>> 0;\n\t}\n\tutils.sum32 = sum32;\n\n\tfunction sum32_3(a, b, c) {\n\t  return (a + b + c) >>> 0;\n\t}\n\tutils.sum32_3 = sum32_3;\n\n\tfunction sum32_4(a, b, c, d) {\n\t  return (a + b + c + d) >>> 0;\n\t}\n\tutils.sum32_4 = sum32_4;\n\n\tfunction sum32_5(a, b, c, d, e) {\n\t  return (a + b + c + d + e) >>> 0;\n\t}\n\tutils.sum32_5 = sum32_5;\n\n\tfunction assert(cond, msg) {\n\t  if (!cond)\n\t    { throw new Error(msg || 'Assertion failed'); }\n\t}\n\tutils.assert = assert;\n\n\tutils.inherits = inherits;\n\n\tfunction sum64(buf, pos, ah, al) {\n\t  var bh = buf[pos];\n\t  var bl = buf[pos + 1];\n\n\t  var lo = (al + bl) >>> 0;\n\t  var hi = (lo < al ? 1 : 0) + ah + bh;\n\t  buf[pos] = hi >>> 0;\n\t  buf[pos + 1] = lo;\n\t}\n\texports.sum64 = sum64;\n\n\tfunction sum64_hi(ah, al, bh, bl) {\n\t  var lo = (al + bl) >>> 0;\n\t  var hi = (lo < al ? 1 : 0) + ah + bh;\n\t  return hi >>> 0;\n\t}\n\texports.sum64_hi = sum64_hi;\n\n\tfunction sum64_lo(ah, al, bh, bl) {\n\t  var lo = al + bl;\n\t  return lo >>> 0;\n\t}\n\texports.sum64_lo = sum64_lo;\n\n\tfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n\t  var carry = 0;\n\t  var lo = al;\n\t  lo = (lo + bl) >>> 0;\n\t  carry += lo < al ? 1 : 0;\n\t  lo = (lo + cl) >>> 0;\n\t  carry += lo < cl ? 1 : 0;\n\t  lo = (lo + dl) >>> 0;\n\t  carry += lo < dl ? 1 : 0;\n\n\t  var hi = ah + bh + ch + dh + carry;\n\t  return hi >>> 0;\n\t}\n\texports.sum64_4_hi = sum64_4_hi;\n\n\tfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n\t  var lo = al + bl + cl + dl;\n\t  return lo >>> 0;\n\t}\n\texports.sum64_4_lo = sum64_4_lo;\n\n\tfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n\t  var carry = 0;\n\t  var lo = al;\n\t  lo = (lo + bl) >>> 0;\n\t  carry += lo < al ? 1 : 0;\n\t  lo = (lo + cl) >>> 0;\n\t  carry += lo < cl ? 1 : 0;\n\t  lo = (lo + dl) >>> 0;\n\t  carry += lo < dl ? 1 : 0;\n\t  lo = (lo + el) >>> 0;\n\t  carry += lo < el ? 1 : 0;\n\n\t  var hi = ah + bh + ch + dh + eh + carry;\n\t  return hi >>> 0;\n\t}\n\texports.sum64_5_hi = sum64_5_hi;\n\n\tfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n\t  var lo = al + bl + cl + dl + el;\n\n\t  return lo >>> 0;\n\t}\n\texports.sum64_5_lo = sum64_5_lo;\n\n\tfunction rotr64_hi(ah, al, num) {\n\t  var r = (al << (32 - num)) | (ah >>> num);\n\t  return r >>> 0;\n\t}\n\texports.rotr64_hi = rotr64_hi;\n\n\tfunction rotr64_lo(ah, al, num) {\n\t  var r = (ah << (32 - num)) | (al >>> num);\n\t  return r >>> 0;\n\t}\n\texports.rotr64_lo = rotr64_lo;\n\n\tfunction shr64_hi(ah, al, num) {\n\t  return ah >>> num;\n\t}\n\texports.shr64_hi = shr64_hi;\n\n\tfunction shr64_lo(ah, al, num) {\n\t  var r = (ah << (32 - num)) | (al >>> num);\n\t  return r >>> 0;\n\t}\n\texports.shr64_lo = shr64_lo;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hash = __webpack_require__(18);\n\tvar utils = hash.utils;\n\tvar assert = utils.assert;\n\n\tfunction BlockHash() {\n\t  this.pending = null;\n\t  this.pendingTotal = 0;\n\t  this.blockSize = this.constructor.blockSize;\n\t  this.outSize = this.constructor.outSize;\n\t  this.hmacStrength = this.constructor.hmacStrength;\n\t  this.padLength = this.constructor.padLength / 8;\n\t  this.endian = 'big';\n\n\t  this._delta8 = this.blockSize / 8;\n\t  this._delta32 = this.blockSize / 32;\n\t}\n\texports.BlockHash = BlockHash;\n\n\tBlockHash.prototype.update = function update(msg, enc) {\n\t  var this$1 = this;\n\n\t  // Convert message to array, pad it, and join into 32bit blocks\n\t  msg = utils.toArray(msg, enc);\n\t  if (!this.pending)\n\t    { this.pending = msg; }\n\t  else\n\t    { this.pending = this.pending.concat(msg); }\n\t  this.pendingTotal += msg.length;\n\n\t  // Enough data, try updating\n\t  if (this.pending.length >= this._delta8) {\n\t    msg = this.pending;\n\n\t    // Process pending data in blocks\n\t    var r = msg.length % this._delta8;\n\t    this.pending = msg.slice(msg.length - r, msg.length);\n\t    if (this.pending.length === 0)\n\t      { this.pending = null; }\n\n\t    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\t    for (var i = 0; i < msg.length; i += this._delta32)\n\t      { this$1._update(msg, i, i + this$1._delta32); }\n\t  }\n\n\t  return this;\n\t};\n\n\tBlockHash.prototype.digest = function digest(enc) {\n\t  this.update(this._pad());\n\t  assert(this.pending === null);\n\n\t  return this._digest(enc);\n\t};\n\n\tBlockHash.prototype._pad = function pad() {\n\t  var len = this.pendingTotal;\n\t  var bytes = this._delta8;\n\t  var k = bytes - ((len + this.padLength) % bytes);\n\t  var res = new Array(k + this.padLength);\n\t  res[0] = 0x80;\n\t  for (var i = 1; i < k; i++)\n\t    { res[i] = 0; }\n\n\t  // Append length\n\t  len <<= 3;\n\t  if (this.endian === 'big') {\n\t    for (var t = 8; t < this.padLength; t++)\n\t      { res[i++] = 0; }\n\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = (len >>> 24) & 0xff;\n\t    res[i++] = (len >>> 16) & 0xff;\n\t    res[i++] = (len >>> 8) & 0xff;\n\t    res[i++] = len & 0xff;\n\t  } else {\n\t    res[i++] = len & 0xff;\n\t    res[i++] = (len >>> 8) & 0xff;\n\t    res[i++] = (len >>> 16) & 0xff;\n\t    res[i++] = (len >>> 24) & 0xff;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\n\t    for (var t = 8; t < this.padLength; t++)\n\t      { res[i++] = 0; }\n\t  }\n\n\t  return res;\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hash = __webpack_require__(18);\n\tvar utils = hash.utils;\n\tvar assert = utils.assert;\n\n\tvar rotr32 = utils.rotr32;\n\tvar rotl32 = utils.rotl32;\n\tvar sum32 = utils.sum32;\n\tvar sum32_4 = utils.sum32_4;\n\tvar sum32_5 = utils.sum32_5;\n\tvar rotr64_hi = utils.rotr64_hi;\n\tvar rotr64_lo = utils.rotr64_lo;\n\tvar shr64_hi = utils.shr64_hi;\n\tvar shr64_lo = utils.shr64_lo;\n\tvar sum64 = utils.sum64;\n\tvar sum64_hi = utils.sum64_hi;\n\tvar sum64_lo = utils.sum64_lo;\n\tvar sum64_4_hi = utils.sum64_4_hi;\n\tvar sum64_4_lo = utils.sum64_4_lo;\n\tvar sum64_5_hi = utils.sum64_5_hi;\n\tvar sum64_5_lo = utils.sum64_5_lo;\n\tvar BlockHash = hash.common.BlockHash;\n\n\tvar sha256_K = [\n\t  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n\t  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n\t  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n\t  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n\t  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n\t  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n\t  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n\t  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n\t  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n\t  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n\t  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n\t  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n\t  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n\t  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n\t  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n\t  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n\t];\n\n\tvar sha512_K = [\n\t  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n\t  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n\t  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n\t  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n\t  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n\t  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n\t  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n\t  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n\t  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n\t  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n\t  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n\t  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n\t  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n\t  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n\t  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n\t  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n\t  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n\t  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n\t  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n\t  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n\t  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n\t  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n\t  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n\t  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n\t  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n\t  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n\t  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n\t  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n\t  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n\t  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n\t  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n\t  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n\t  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n\t  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n\t  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n\t  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n\t  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n\t  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n\t  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n\t  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n\t];\n\n\tvar sha1_K = [\n\t  0x5A827999, 0x6ED9EBA1,\n\t  0x8F1BBCDC, 0xCA62C1D6\n\t];\n\n\tfunction SHA256() {\n\t  if (!(this instanceof SHA256))\n\t    { return new SHA256(); }\n\n\t  BlockHash.call(this);\n\t  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n\t             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];\n\t  this.k = sha256_K;\n\t  this.W = new Array(64);\n\t}\n\tutils.inherits(SHA256, BlockHash);\n\texports.sha256 = SHA256;\n\n\tSHA256.blockSize = 512;\n\tSHA256.outSize = 256;\n\tSHA256.hmacStrength = 192;\n\tSHA256.padLength = 64;\n\n\tSHA256.prototype._update = function _update(msg, start) {\n\t  var this$1 = this;\n\n\t  var W = this.W;\n\n\t  for (var i = 0; i < 16; i++)\n\t    { W[i] = msg[start + i]; }\n\t  for (; i < W.length; i++)\n\t    { W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]); }\n\n\t  var a = this.h[0];\n\t  var b = this.h[1];\n\t  var c = this.h[2];\n\t  var d = this.h[3];\n\t  var e = this.h[4];\n\t  var f = this.h[5];\n\t  var g = this.h[6];\n\t  var h = this.h[7];\n\n\t  assert(this.k.length === W.length);\n\t  for (var i = 0; i < W.length; i++) {\n\t    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this$1.k[i], W[i]);\n\t    var T2 = sum32(s0_256(a), maj32(a, b, c));\n\t    h = g;\n\t    g = f;\n\t    f = e;\n\t    e = sum32(d, T1);\n\t    d = c;\n\t    c = b;\n\t    b = a;\n\t    a = sum32(T1, T2);\n\t  }\n\n\t  this.h[0] = sum32(this.h[0], a);\n\t  this.h[1] = sum32(this.h[1], b);\n\t  this.h[2] = sum32(this.h[2], c);\n\t  this.h[3] = sum32(this.h[3], d);\n\t  this.h[4] = sum32(this.h[4], e);\n\t  this.h[5] = sum32(this.h[5], f);\n\t  this.h[6] = sum32(this.h[6], g);\n\t  this.h[7] = sum32(this.h[7], h);\n\t};\n\n\tSHA256.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'big'); }\n\t  else\n\t    { return utils.split32(this.h, 'big'); }\n\t};\n\n\tfunction SHA224() {\n\t  if (!(this instanceof SHA224))\n\t    { return new SHA224(); }\n\n\t  SHA256.call(this);\n\t  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n\t}\n\tutils.inherits(SHA224, SHA256);\n\texports.sha224 = SHA224;\n\n\tSHA224.blockSize = 512;\n\tSHA224.outSize = 224;\n\tSHA224.hmacStrength = 192;\n\tSHA224.padLength = 64;\n\n\tSHA224.prototype._digest = function digest(enc) {\n\t  // Just truncate output\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h.slice(0, 7), 'big'); }\n\t  else\n\t    { return utils.split32(this.h.slice(0, 7), 'big'); }\n\t};\n\n\tfunction SHA512() {\n\t  if (!(this instanceof SHA512))\n\t    { return new SHA512(); }\n\n\t  BlockHash.call(this);\n\t  this.h = [ 0x6a09e667, 0xf3bcc908,\n\t             0xbb67ae85, 0x84caa73b,\n\t             0x3c6ef372, 0xfe94f82b,\n\t             0xa54ff53a, 0x5f1d36f1,\n\t             0x510e527f, 0xade682d1,\n\t             0x9b05688c, 0x2b3e6c1f,\n\t             0x1f83d9ab, 0xfb41bd6b,\n\t             0x5be0cd19, 0x137e2179 ];\n\t  this.k = sha512_K;\n\t  this.W = new Array(160);\n\t}\n\tutils.inherits(SHA512, BlockHash);\n\texports.sha512 = SHA512;\n\n\tSHA512.blockSize = 1024;\n\tSHA512.outSize = 512;\n\tSHA512.hmacStrength = 192;\n\tSHA512.padLength = 128;\n\n\tSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n\t  var W = this.W;\n\n\t  // 32 x 32bit words\n\t  for (var i = 0; i < 32; i++)\n\t    { W[i] = msg[start + i]; }\n\t  for (; i < W.length; i += 2) {\n\t    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n\t    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n\t    var c1_hi = W[i - 14];  // i - 7\n\t    var c1_lo = W[i - 13];\n\t    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n\t    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n\t    var c3_hi = W[i - 32];  // i - 16\n\t    var c3_lo = W[i - 31];\n\n\t    W[i] = sum64_4_hi(c0_hi, c0_lo,\n\t                      c1_hi, c1_lo,\n\t                      c2_hi, c2_lo,\n\t                      c3_hi, c3_lo);\n\t    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,\n\t                          c1_hi, c1_lo,\n\t                          c2_hi, c2_lo,\n\t                          c3_hi, c3_lo);\n\t  }\n\t};\n\n\tSHA512.prototype._update = function _update(msg, start) {\n\t  var this$1 = this;\n\n\t  this._prepareBlock(msg, start);\n\n\t  var W = this.W;\n\n\t  var ah = this.h[0];\n\t  var al = this.h[1];\n\t  var bh = this.h[2];\n\t  var bl = this.h[3];\n\t  var ch = this.h[4];\n\t  var cl = this.h[5];\n\t  var dh = this.h[6];\n\t  var dl = this.h[7];\n\t  var eh = this.h[8];\n\t  var el = this.h[9];\n\t  var fh = this.h[10];\n\t  var fl = this.h[11];\n\t  var gh = this.h[12];\n\t  var gl = this.h[13];\n\t  var hh = this.h[14];\n\t  var hl = this.h[15];\n\n\t  assert(this.k.length === W.length);\n\t  for (var i = 0; i < W.length; i += 2) {\n\t    var c0_hi = hh;\n\t    var c0_lo = hl;\n\t    var c1_hi = s1_512_hi(eh, el);\n\t    var c1_lo = s1_512_lo(eh, el);\n\t    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n\t    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n\t    var c3_hi = this$1.k[i];\n\t    var c3_lo = this$1.k[i + 1];\n\t    var c4_hi = W[i];\n\t    var c4_lo = W[i + 1];\n\n\t    var T1_hi = sum64_5_hi(c0_hi, c0_lo,\n\t                           c1_hi, c1_lo,\n\t                           c2_hi, c2_lo,\n\t                           c3_hi, c3_lo,\n\t                           c4_hi, c4_lo);\n\t    var T1_lo = sum64_5_lo(c0_hi, c0_lo,\n\t                           c1_hi, c1_lo,\n\t                           c2_hi, c2_lo,\n\t                           c3_hi, c3_lo,\n\t                           c4_hi, c4_lo);\n\n\t    var c0_hi = s0_512_hi(ah, al);\n\t    var c0_lo = s0_512_lo(ah, al);\n\t    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n\t    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n\t    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n\t    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n\t    hh = gh;\n\t    hl = gl;\n\n\t    gh = fh;\n\t    gl = fl;\n\n\t    fh = eh;\n\t    fl = el;\n\n\t    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n\t    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n\t    dh = ch;\n\t    dl = cl;\n\n\t    ch = bh;\n\t    cl = bl;\n\n\t    bh = ah;\n\t    bl = al;\n\n\t    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n\t    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n\t  }\n\n\t  sum64(this.h, 0, ah, al);\n\t  sum64(this.h, 2, bh, bl);\n\t  sum64(this.h, 4, ch, cl);\n\t  sum64(this.h, 6, dh, dl);\n\t  sum64(this.h, 8, eh, el);\n\t  sum64(this.h, 10, fh, fl);\n\t  sum64(this.h, 12, gh, gl);\n\t  sum64(this.h, 14, hh, hl);\n\t};\n\n\tSHA512.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'big'); }\n\t  else\n\t    { return utils.split32(this.h, 'big'); }\n\t};\n\n\tfunction SHA384() {\n\t  if (!(this instanceof SHA384))\n\t    { return new SHA384(); }\n\n\t  SHA512.call(this);\n\t  this.h = [ 0xcbbb9d5d, 0xc1059ed8,\n\t             0x629a292a, 0x367cd507,\n\t             0x9159015a, 0x3070dd17,\n\t             0x152fecd8, 0xf70e5939,\n\t             0x67332667, 0xffc00b31,\n\t             0x8eb44a87, 0x68581511,\n\t             0xdb0c2e0d, 0x64f98fa7,\n\t             0x47b5481d, 0xbefa4fa4 ];\n\t}\n\tutils.inherits(SHA384, SHA512);\n\texports.sha384 = SHA384;\n\n\tSHA384.blockSize = 1024;\n\tSHA384.outSize = 384;\n\tSHA384.hmacStrength = 192;\n\tSHA384.padLength = 128;\n\n\tSHA384.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h.slice(0, 12), 'big'); }\n\t  else\n\t    { return utils.split32(this.h.slice(0, 12), 'big'); }\n\t};\n\n\tfunction SHA1() {\n\t  if (!(this instanceof SHA1))\n\t    { return new SHA1(); }\n\n\t  BlockHash.call(this);\n\t  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,\n\t             0x10325476, 0xc3d2e1f0 ];\n\t  this.W = new Array(80);\n\t}\n\n\tutils.inherits(SHA1, BlockHash);\n\texports.sha1 = SHA1;\n\n\tSHA1.blockSize = 512;\n\tSHA1.outSize = 160;\n\tSHA1.hmacStrength = 80;\n\tSHA1.padLength = 64;\n\n\tSHA1.prototype._update = function _update(msg, start) {\n\t  var W = this.W;\n\n\t  for (var i = 0; i < 16; i++)\n\t    { W[i] = msg[start + i]; }\n\n\t  for(; i < W.length; i++)\n\t    { W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1); }\n\n\t  var a = this.h[0];\n\t  var b = this.h[1];\n\t  var c = this.h[2];\n\t  var d = this.h[3];\n\t  var e = this.h[4];\n\n\t  for (var i = 0; i < W.length; i++) {\n\t    var s = ~~(i / 20);\n\t    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n\t    e = d;\n\t    d = c;\n\t    c = rotl32(b, 30);\n\t    b = a;\n\t    a = t;\n\t  }\n\n\t  this.h[0] = sum32(this.h[0], a);\n\t  this.h[1] = sum32(this.h[1], b);\n\t  this.h[2] = sum32(this.h[2], c);\n\t  this.h[3] = sum32(this.h[3], d);\n\t  this.h[4] = sum32(this.h[4], e);\n\t};\n\n\tSHA1.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'big'); }\n\t  else\n\t    { return utils.split32(this.h, 'big'); }\n\t};\n\n\tfunction ch32(x, y, z) {\n\t  return (x & y) ^ ((~x) & z);\n\t}\n\n\tfunction maj32(x, y, z) {\n\t  return (x & y) ^ (x & z) ^ (y & z);\n\t}\n\n\tfunction p32(x, y, z) {\n\t  return x ^ y ^ z;\n\t}\n\n\tfunction s0_256(x) {\n\t  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n\t}\n\n\tfunction s1_256(x) {\n\t  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n\t}\n\n\tfunction g0_256(x) {\n\t  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n\t}\n\n\tfunction g1_256(x) {\n\t  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n\t}\n\n\tfunction ft_1(s, x, y, z) {\n\t  if (s === 0)\n\t    { return ch32(x, y, z); }\n\t  if (s === 1 || s === 3)\n\t    { return p32(x, y, z); }\n\t  if (s === 2)\n\t    { return maj32(x, y, z); }\n\t}\n\n\tfunction ch64_hi(xh, xl, yh, yl, zh, zl) {\n\t  var r = (xh & yh) ^ ((~xh) & zh);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n\t  var r = (xl & yl) ^ ((~xl) & zl);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction maj64_hi(xh, xl, yh, yl, zh, zl) {\n\t  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n\t  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s0_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 28);\n\t  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n\t  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s0_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 28);\n\t  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n\t  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s1_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 14);\n\t  var c1_hi = rotr64_hi(xh, xl, 18);\n\t  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s1_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 14);\n\t  var c1_lo = rotr64_lo(xh, xl, 18);\n\t  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g0_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 1);\n\t  var c1_hi = rotr64_hi(xh, xl, 8);\n\t  var c2_hi = shr64_hi(xh, xl, 7);\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g0_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 1);\n\t  var c1_lo = rotr64_lo(xh, xl, 8);\n\t  var c2_lo = shr64_lo(xh, xl, 7);\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g1_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 19);\n\t  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n\t  var c2_hi = shr64_hi(xh, xl, 6);\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g1_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 19);\n\t  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n\t  var c2_lo = shr64_lo(xh, xl, 6);\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hash = __webpack_require__(18);\n\tvar utils = hash.utils;\n\n\tvar rotl32 = utils.rotl32;\n\tvar sum32 = utils.sum32;\n\tvar sum32_3 = utils.sum32_3;\n\tvar sum32_4 = utils.sum32_4;\n\tvar BlockHash = hash.common.BlockHash;\n\n\tfunction RIPEMD160() {\n\t  if (!(this instanceof RIPEMD160))\n\t    { return new RIPEMD160(); }\n\n\t  BlockHash.call(this);\n\n\t  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n\t  this.endian = 'little';\n\t}\n\tutils.inherits(RIPEMD160, BlockHash);\n\texports.ripemd160 = RIPEMD160;\n\n\tRIPEMD160.blockSize = 512;\n\tRIPEMD160.outSize = 160;\n\tRIPEMD160.hmacStrength = 192;\n\tRIPEMD160.padLength = 64;\n\n\tRIPEMD160.prototype._update = function update(msg, start) {\n\t  var A = this.h[0];\n\t  var B = this.h[1];\n\t  var C = this.h[2];\n\t  var D = this.h[3];\n\t  var E = this.h[4];\n\t  var Ah = A;\n\t  var Bh = B;\n\t  var Ch = C;\n\t  var Dh = D;\n\t  var Eh = E;\n\t  for (var j = 0; j < 80; j++) {\n\t    var T = sum32(\n\t      rotl32(\n\t        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n\t        s[j]),\n\t      E);\n\t    A = E;\n\t    E = D;\n\t    D = rotl32(C, 10);\n\t    C = B;\n\t    B = T;\n\t    T = sum32(\n\t      rotl32(\n\t        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n\t        sh[j]),\n\t      Eh);\n\t    Ah = Eh;\n\t    Eh = Dh;\n\t    Dh = rotl32(Ch, 10);\n\t    Ch = Bh;\n\t    Bh = T;\n\t  }\n\t  T = sum32_3(this.h[1], C, Dh);\n\t  this.h[1] = sum32_3(this.h[2], D, Eh);\n\t  this.h[2] = sum32_3(this.h[3], E, Ah);\n\t  this.h[3] = sum32_3(this.h[4], A, Bh);\n\t  this.h[4] = sum32_3(this.h[0], B, Ch);\n\t  this.h[0] = T;\n\t};\n\n\tRIPEMD160.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'little'); }\n\t  else\n\t    { return utils.split32(this.h, 'little'); }\n\t};\n\n\tfunction f(j, x, y, z) {\n\t  if (j <= 15)\n\t    { return x ^ y ^ z; }\n\t  else if (j <= 31)\n\t    { return (x & y) | ((~x) & z); }\n\t  else if (j <= 47)\n\t    { return (x | (~y)) ^ z; }\n\t  else if (j <= 63)\n\t    { return (x & z) | (y & (~z)); }\n\t  else\n\t    { return x ^ (y | (~z)); }\n\t}\n\n\tfunction K(j) {\n\t  if (j <= 15)\n\t    { return 0x00000000; }\n\t  else if (j <= 31)\n\t    { return 0x5a827999; }\n\t  else if (j <= 47)\n\t    { return 0x6ed9eba1; }\n\t  else if (j <= 63)\n\t    { return 0x8f1bbcdc; }\n\t  else\n\t    { return 0xa953fd4e; }\n\t}\n\n\tfunction Kh(j) {\n\t  if (j <= 15)\n\t    { return 0x50a28be6; }\n\t  else if (j <= 31)\n\t    { return 0x5c4dd124; }\n\t  else if (j <= 47)\n\t    { return 0x6d703ef3; }\n\t  else if (j <= 63)\n\t    { return 0x7a6d76e9; }\n\t  else\n\t    { return 0x00000000; }\n\t}\n\n\tvar r = [\n\t  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n\t  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n\t  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n\t  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n\t  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n\t];\n\n\tvar rh = [\n\t  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n\t  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n\t  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n\t  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n\t  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n\t];\n\n\tvar s = [\n\t  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n\t  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n\t  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n\t  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n\t  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n\t];\n\n\tvar sh = [\n\t  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n\t  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n\t  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n\t  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n\t  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n\t];\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hmac = exports;\n\n\tvar hash = __webpack_require__(18);\n\tvar utils = hash.utils;\n\tvar assert = utils.assert;\n\n\tfunction Hmac(hash, key, enc) {\n\t  if (!(this instanceof Hmac))\n\t    { return new Hmac(hash, key, enc); }\n\t  this.Hash = hash;\n\t  this.blockSize = hash.blockSize / 8;\n\t  this.outSize = hash.outSize / 8;\n\t  this.inner = null;\n\t  this.outer = null;\n\n\t  this._init(utils.toArray(key, enc));\n\t}\n\tmodule.exports = Hmac;\n\n\tHmac.prototype._init = function init(key) {\n\t  // Shorten key, if needed\n\t  if (key.length > this.blockSize)\n\t    { key = new this.Hash().update(key).digest(); }\n\t  assert(key.length <= this.blockSize);\n\n\t  // Add padding to key\n\t  for (var i = key.length; i < this.blockSize; i++)\n\t    { key.push(0); }\n\n\t  for (var i = 0; i < key.length; i++)\n\t    { key[i] ^= 0x36; }\n\t  this.inner = new this.Hash().update(key);\n\n\t  // 0x36 ^ 0x5c = 0x6a\n\t  for (var i = 0; i < key.length; i++)\n\t    { key[i] ^= 0x6a; }\n\t  this.outer = new this.Hash().update(key);\n\t};\n\n\tHmac.prototype.update = function update(msg, enc) {\n\t  this.inner.update(msg, enc);\n\t  return this;\n\t};\n\n\tHmac.prototype.digest = function digest(enc) {\n\t  this.outer.update(this.inner.digest());\n\t  return this.outer.digest(enc);\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t  doubles: {\n\t    step: 4,\n\t    points: [\n\t      [\n\t        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n\t        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n\t      ],\n\t      [\n\t        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n\t        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n\t      ],\n\t      [\n\t        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n\t        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n\t      ],\n\t      [\n\t        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n\t        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n\t      ],\n\t      [\n\t        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n\t        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n\t      ],\n\t      [\n\t        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n\t        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n\t      ],\n\t      [\n\t        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n\t        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n\t      ],\n\t      [\n\t        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n\t        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n\t      ],\n\t      [\n\t        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n\t        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n\t      ],\n\t      [\n\t        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n\t        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n\t      ],\n\t      [\n\t        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n\t        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n\t      ],\n\t      [\n\t        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n\t        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n\t      ],\n\t      [\n\t        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n\t        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n\t      ],\n\t      [\n\t        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n\t        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n\t      ],\n\t      [\n\t        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n\t        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n\t      ],\n\t      [\n\t        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n\t        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n\t      ],\n\t      [\n\t        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n\t        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n\t      ],\n\t      [\n\t        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n\t        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n\t      ],\n\t      [\n\t        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n\t        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n\t      ],\n\t      [\n\t        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n\t        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n\t      ],\n\t      [\n\t        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n\t        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n\t      ],\n\t      [\n\t        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n\t        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n\t      ],\n\t      [\n\t        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n\t        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n\t      ],\n\t      [\n\t        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n\t        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n\t      ],\n\t      [\n\t        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n\t        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n\t      ],\n\t      [\n\t        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n\t        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n\t      ],\n\t      [\n\t        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n\t        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n\t      ],\n\t      [\n\t        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n\t        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n\t      ],\n\t      [\n\t        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n\t        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n\t      ],\n\t      [\n\t        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n\t        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n\t      ],\n\t      [\n\t        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n\t        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n\t      ],\n\t      [\n\t        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n\t        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n\t      ],\n\t      [\n\t        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n\t        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n\t      ],\n\t      [\n\t        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n\t        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n\t      ],\n\t      [\n\t        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n\t        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n\t      ],\n\t      [\n\t        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n\t        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n\t      ],\n\t      [\n\t        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n\t        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n\t      ],\n\t      [\n\t        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n\t        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n\t      ],\n\t      [\n\t        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n\t        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n\t      ],\n\t      [\n\t        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n\t        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n\t      ],\n\t      [\n\t        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n\t        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n\t      ],\n\t      [\n\t        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n\t        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n\t      ],\n\t      [\n\t        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n\t        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n\t      ],\n\t      [\n\t        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n\t        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n\t      ],\n\t      [\n\t        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n\t        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n\t      ],\n\t      [\n\t        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n\t        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n\t      ],\n\t      [\n\t        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n\t        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n\t      ],\n\t      [\n\t        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n\t        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n\t      ],\n\t      [\n\t        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n\t        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n\t      ],\n\t      [\n\t        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n\t        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n\t      ],\n\t      [\n\t        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n\t        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n\t      ],\n\t      [\n\t        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n\t        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n\t      ],\n\t      [\n\t        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n\t        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n\t      ],\n\t      [\n\t        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n\t        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n\t      ],\n\t      [\n\t        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n\t        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n\t      ],\n\t      [\n\t        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n\t        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n\t      ],\n\t      [\n\t        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n\t        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n\t      ],\n\t      [\n\t        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n\t        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n\t      ],\n\t      [\n\t        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n\t        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n\t      ],\n\t      [\n\t        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n\t        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n\t      ],\n\t      [\n\t        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n\t        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n\t      ],\n\t      [\n\t        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n\t        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n\t      ],\n\t      [\n\t        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n\t        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n\t      ],\n\t      [\n\t        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n\t        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n\t      ],\n\t      [\n\t        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n\t        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n\t      ]\n\t    ]\n\t  },\n\t  naf: {\n\t    wnd: 7,\n\t    points: [\n\t      [\n\t        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n\t        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n\t      ],\n\t      [\n\t        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n\t        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n\t      ],\n\t      [\n\t        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n\t        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n\t      ],\n\t      [\n\t        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n\t        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n\t      ],\n\t      [\n\t        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n\t        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n\t      ],\n\t      [\n\t        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n\t        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n\t      ],\n\t      [\n\t        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n\t        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n\t      ],\n\t      [\n\t        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n\t        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n\t      ],\n\t      [\n\t        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n\t        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n\t      ],\n\t      [\n\t        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n\t        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n\t      ],\n\t      [\n\t        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n\t        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n\t      ],\n\t      [\n\t        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n\t        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n\t      ],\n\t      [\n\t        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n\t        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n\t      ],\n\t      [\n\t        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n\t        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n\t      ],\n\t      [\n\t        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n\t        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n\t      ],\n\t      [\n\t        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n\t        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n\t      ],\n\t      [\n\t        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n\t        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n\t      ],\n\t      [\n\t        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n\t        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n\t      ],\n\t      [\n\t        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n\t        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n\t      ],\n\t      [\n\t        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n\t        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n\t      ],\n\t      [\n\t        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n\t        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n\t      ],\n\t      [\n\t        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n\t        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n\t      ],\n\t      [\n\t        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n\t        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n\t      ],\n\t      [\n\t        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n\t        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n\t      ],\n\t      [\n\t        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n\t        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n\t      ],\n\t      [\n\t        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n\t        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n\t      ],\n\t      [\n\t        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n\t        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n\t      ],\n\t      [\n\t        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n\t        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n\t      ],\n\t      [\n\t        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n\t        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n\t      ],\n\t      [\n\t        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n\t        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n\t      ],\n\t      [\n\t        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n\t        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n\t      ],\n\t      [\n\t        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n\t        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n\t      ],\n\t      [\n\t        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n\t        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n\t      ],\n\t      [\n\t        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n\t        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n\t      ],\n\t      [\n\t        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n\t        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n\t      ],\n\t      [\n\t        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n\t        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n\t      ],\n\t      [\n\t        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n\t        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n\t      ],\n\t      [\n\t        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n\t        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n\t      ],\n\t      [\n\t        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n\t        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n\t      ],\n\t      [\n\t        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n\t        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n\t      ],\n\t      [\n\t        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n\t        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n\t      ],\n\t      [\n\t        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n\t        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n\t      ],\n\t      [\n\t        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n\t        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n\t      ],\n\t      [\n\t        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n\t        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n\t      ],\n\t      [\n\t        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n\t        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n\t      ],\n\t      [\n\t        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n\t        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n\t      ],\n\t      [\n\t        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n\t        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n\t      ],\n\t      [\n\t        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n\t        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n\t      ],\n\t      [\n\t        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n\t        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n\t      ],\n\t      [\n\t        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n\t        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n\t      ],\n\t      [\n\t        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n\t        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n\t      ],\n\t      [\n\t        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n\t        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n\t      ],\n\t      [\n\t        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n\t        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n\t      ],\n\t      [\n\t        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n\t        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n\t      ],\n\t      [\n\t        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n\t        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n\t      ],\n\t      [\n\t        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n\t        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n\t      ],\n\t      [\n\t        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n\t        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n\t      ],\n\t      [\n\t        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n\t        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n\t      ],\n\t      [\n\t        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n\t        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n\t      ],\n\t      [\n\t        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n\t        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n\t      ],\n\t      [\n\t        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n\t        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n\t      ],\n\t      [\n\t        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n\t        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n\t      ],\n\t      [\n\t        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n\t        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n\t      ],\n\t      [\n\t        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n\t        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n\t      ],\n\t      [\n\t        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n\t        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n\t      ],\n\t      [\n\t        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n\t        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n\t      ],\n\t      [\n\t        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n\t        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n\t      ],\n\t      [\n\t        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n\t        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n\t      ],\n\t      [\n\t        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n\t        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n\t      ],\n\t      [\n\t        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n\t        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n\t      ],\n\t      [\n\t        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n\t        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n\t      ],\n\t      [\n\t        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n\t        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n\t      ],\n\t      [\n\t        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n\t        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n\t      ],\n\t      [\n\t        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n\t        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n\t      ],\n\t      [\n\t        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n\t        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n\t      ],\n\t      [\n\t        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n\t        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n\t      ],\n\t      [\n\t        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n\t        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n\t      ],\n\t      [\n\t        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n\t        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n\t      ],\n\t      [\n\t        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n\t        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n\t      ],\n\t      [\n\t        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n\t        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n\t      ],\n\t      [\n\t        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n\t        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n\t      ],\n\t      [\n\t        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n\t        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n\t      ],\n\t      [\n\t        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n\t        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n\t      ],\n\t      [\n\t        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n\t        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n\t      ],\n\t      [\n\t        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n\t        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n\t      ],\n\t      [\n\t        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n\t        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n\t      ],\n\t      [\n\t        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n\t        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n\t      ],\n\t      [\n\t        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n\t        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n\t      ],\n\t      [\n\t        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n\t        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n\t      ],\n\t      [\n\t        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n\t        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n\t      ],\n\t      [\n\t        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n\t        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n\t      ],\n\t      [\n\t        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n\t        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n\t      ],\n\t      [\n\t        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n\t        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n\t      ],\n\t      [\n\t        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n\t        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n\t      ],\n\t      [\n\t        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n\t        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n\t      ],\n\t      [\n\t        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n\t        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n\t      ],\n\t      [\n\t        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n\t        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n\t      ],\n\t      [\n\t        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n\t        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n\t      ],\n\t      [\n\t        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n\t        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n\t      ],\n\t      [\n\t        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n\t        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n\t      ],\n\t      [\n\t        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n\t        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n\t      ],\n\t      [\n\t        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n\t        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n\t      ],\n\t      [\n\t        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n\t        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n\t      ],\n\t      [\n\t        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n\t        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n\t      ],\n\t      [\n\t        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n\t        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n\t      ],\n\t      [\n\t        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n\t        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n\t      ],\n\t      [\n\t        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n\t        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n\t      ],\n\t      [\n\t        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n\t        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n\t      ],\n\t      [\n\t        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n\t        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n\t      ],\n\t      [\n\t        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n\t        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n\t      ],\n\t      [\n\t        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n\t        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n\t      ],\n\t      [\n\t        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n\t        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n\t      ],\n\t      [\n\t        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n\t        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n\t      ],\n\t      [\n\t        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n\t        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n\t      ],\n\t      [\n\t        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n\t        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n\t      ],\n\t      [\n\t        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n\t        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n\t      ],\n\t      [\n\t        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n\t        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n\t      ],\n\t      [\n\t        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n\t        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n\t      ],\n\t      [\n\t        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n\t        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n\t      ],\n\t      [\n\t        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n\t        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n\t      ],\n\t      [\n\t        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n\t        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n\t      ],\n\t      [\n\t        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n\t        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n\t      ],\n\t      [\n\t        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n\t        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n\t      ],\n\t      [\n\t        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n\t        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n\t      ],\n\t      [\n\t        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n\t        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n\t      ],\n\t      [\n\t        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n\t        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n\t      ],\n\t      [\n\t        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n\t        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n\t      ]\n\t    ]\n\t  }\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar HmacDRBG$$1 = __webpack_require__(26);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\n\tvar KeyPair = __webpack_require__(27);\n\tvar Signature = __webpack_require__(28);\n\n\tfunction EC(options) {\n\t  if (!(this instanceof EC))\n\t    { return new EC(options); }\n\n\t  // Shortcut `elliptic.ec(curve-name)`\n\t  if (typeof options === 'string') {\n\t    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n\t    options = elliptic.curves[options];\n\t  }\n\n\t  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\t  if (options instanceof elliptic.curves.PresetCurve)\n\t    { options = { curve: options }; }\n\n\t  this.curve = options.curve.curve;\n\t  this.n = this.curve.n;\n\t  this.nh = this.n.ushrn(1);\n\t  this.g = this.curve.g;\n\n\t  // Point on curve\n\t  this.g = options.curve.g;\n\t  this.g.precompute(options.curve.n.bitLength() + 1);\n\n\t  // Hash for function for DRBG\n\t  this.hash = options.hash || options.curve.hash;\n\t}\n\tmodule.exports = EC;\n\n\tEC.prototype.keyPair = function keyPair(options) {\n\t  return new KeyPair(this, options);\n\t};\n\n\tEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n\t  return KeyPair.fromPrivate(this, priv, enc);\n\t};\n\n\tEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n\t  return KeyPair.fromPublic(this, pub, enc);\n\t};\n\n\tEC.prototype.genKeyPair = function genKeyPair(options) {\n\t  var this$1 = this;\n\n\t  if (!options)\n\t    { options = {}; }\n\n\t  // Instantiate Hmac_DRBG\n\t  var drbg = new HmacDRBG$$1({\n\t    hash: this.hash,\n\t    pers: options.pers,\n\t    persEnc: options.persEnc || 'utf8',\n\t    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n\t    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n\t    nonce: this.n.toArray()\n\t  });\n\n\t  var bytes = this.n.byteLength();\n\t  var ns2 = this.n.sub(new BN(2));\n\t  do {\n\t    var priv = new BN(drbg.generate(bytes));\n\t    if (priv.cmp(ns2) > 0)\n\t      { continue; }\n\n\t    priv.iaddn(1);\n\t    return this$1.keyFromPrivate(priv);\n\t  } while (true);\n\t};\n\n\tEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n\t  var delta = msg.byteLength() * 8 - this.n.bitLength();\n\t  if (delta > 0)\n\t    { msg = msg.ushrn(delta); }\n\t  if (!truncOnly && msg.cmp(this.n) >= 0)\n\t    { return msg.sub(this.n); }\n\t  else\n\t    { return msg; }\n\t};\n\n\tEC.prototype.sign = function sign(msg, key, enc, options) {\n\t  var this$1 = this;\n\n\t  if (typeof enc === 'object') {\n\t    options = enc;\n\t    enc = null;\n\t  }\n\t  if (!options)\n\t    { options = {}; }\n\n\t  key = this.keyFromPrivate(key, enc);\n\t  msg = this._truncateToN(new BN(msg, 16));\n\n\t  // Zero-extend key to provide enough entropy\n\t  var bytes = this.n.byteLength();\n\t  var bkey = key.getPrivate().toArray('be', bytes);\n\n\t  // Zero-extend nonce to have the same byte size as N\n\t  var nonce = msg.toArray('be', bytes);\n\n\t  // Instantiate Hmac_DRBG\n\t  var drbg = new HmacDRBG$$1({\n\t    hash: this.hash,\n\t    entropy: bkey,\n\t    nonce: nonce,\n\t    pers: options.pers,\n\t    persEnc: options.persEnc || 'utf8'\n\t  });\n\n\t  // Number of bytes to generate\n\t  var ns1 = this.n.sub(new BN(1));\n\n\t  for (var iter = 0; true; iter++) {\n\t    var k = options.k ?\n\t        options.k(iter) :\n\t        new BN(drbg.generate(this$1.n.byteLength()));\n\t    k = this$1._truncateToN(k, true);\n\t    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n\t      { continue; }\n\n\t    var kp = this$1.g.mul(k);\n\t    if (kp.isInfinity())\n\t      { continue; }\n\n\t    var kpX = kp.getX();\n\t    var r = kpX.umod(this$1.n);\n\t    if (r.cmpn(0) === 0)\n\t      { continue; }\n\n\t    var s = k.invm(this$1.n).mul(r.mul(key.getPrivate()).iadd(msg));\n\t    s = s.umod(this$1.n);\n\t    if (s.cmpn(0) === 0)\n\t      { continue; }\n\n\t    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n\t                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n\t    // Use complement of `s`, if it is > `n / 2`\n\t    if (options.canonical && s.cmp(this$1.nh) > 0) {\n\t      s = this$1.n.sub(s);\n\t      recoveryParam ^= 1;\n\t    }\n\n\t    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n\t  }\n\t};\n\n\tEC.prototype.verify = function verify(msg, signature, key, enc) {\n\t  msg = this._truncateToN(new BN(msg, 16));\n\t  key = this.keyFromPublic(key, enc);\n\t  signature = new Signature(signature, 'hex');\n\n\t  // Perform primitive values validation\n\t  var r = signature.r;\n\t  var s = signature.s;\n\t  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n\t    { return false; }\n\t  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n\t    { return false; }\n\n\t  // Validate signature\n\t  var sinv = s.invm(this.n);\n\t  var u1 = sinv.mul(msg).umod(this.n);\n\t  var u2 = sinv.mul(r).umod(this.n);\n\n\t  if (!this.curve._maxwellTrick) {\n\t    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n\t    if (p.isInfinity())\n\t      { return false; }\n\n\t    return p.getX().umod(this.n).cmp(r) === 0;\n\t  }\n\n\t  // NOTE: Greg Maxwell's trick, inspired by:\n\t  // https://git.io/vad3K\n\n\t  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n\t  if (p.isInfinity())\n\t    { return false; }\n\n\t  // Compare `p.x` of Jacobian point with `r`,\n\t  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n\t  // inverse of `p.z^2`\n\t  return p.eqXToP(r);\n\t};\n\n\tEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n\t  assert((3 & j) === j, 'The recovery param is more than two bits');\n\t  signature = new Signature(signature, enc);\n\n\t  var n = this.n;\n\t  var e = new BN(msg);\n\t  var r = signature.r;\n\t  var s = signature.s;\n\n\t  // A set LSB signifies that the y-coordinate is odd\n\t  var isYOdd = j & 1;\n\t  var isSecondKey = j >> 1;\n\t  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n\t    { throw new Error('Unable to find sencond key candinate'); }\n\n\t  // 1.1. Let x = r + jn.\n\t  if (isSecondKey)\n\t    { r = this.curve.pointFromX(r.add(this.curve.n), isYOdd); }\n\t  else\n\t    { r = this.curve.pointFromX(r, isYOdd); }\n\n\t  var rInv = signature.r.invm(n);\n\t  var s1 = n.sub(e).mul(rInv).umod(n);\n\t  var s2 = s.mul(rInv).umod(n);\n\n\t  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n\t  //               Q = r^-1 (sR + -eG)\n\t  return this.g.mulAdd(s1, r, s2);\n\t};\n\n\tEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n\t  var this$1 = this;\n\n\t  signature = new Signature(signature, enc);\n\t  if (signature.recoveryParam !== null)\n\t    { return signature.recoveryParam; }\n\n\t  for (var i = 0; i < 4; i++) {\n\t    var Qprime;\n\t    try {\n\t      Qprime = this$1.recoverPubKey(e, signature, i);\n\t    } catch (e) {\n\t      continue;\n\t    }\n\n\t    if (Qprime.eq(Q))\n\t      { return i; }\n\t  }\n\t  throw new Error('Unable to find valid recovery factor');\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar hash = __webpack_require__(18);\n\tvar utils = __webpack_require__(8);\n\tvar assert = __webpack_require__(7);\n\n\tfunction HmacDRBG$$1(options) {\n\t  if (!(this instanceof HmacDRBG$$1))\n\t    { return new HmacDRBG$$1(options); }\n\t  this.hash = options.hash;\n\t  this.predResist = !!options.predResist;\n\n\t  this.outLen = this.hash.outSize;\n\t  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n\t  this.reseed = null;\n\t  this.reseedInterval = null;\n\t  this.K = null;\n\t  this.V = null;\n\n\t  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n\t  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n\t  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n\t  assert(entropy.length >= (this.minEntropy / 8),\n\t         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\t  this._init(entropy, nonce, pers);\n\t}\n\tmodule.exports = HmacDRBG$$1;\n\n\tHmacDRBG$$1.prototype._init = function init(entropy, nonce, pers) {\n\t  var this$1 = this;\n\n\t  var seed = entropy.concat(nonce).concat(pers);\n\n\t  this.K = new Array(this.outLen / 8);\n\t  this.V = new Array(this.outLen / 8);\n\t  for (var i = 0; i < this.V.length; i++) {\n\t    this$1.K[i] = 0x00;\n\t    this$1.V[i] = 0x01;\n\t  }\n\n\t  this._update(seed);\n\t  this.reseed = 1;\n\t  this.reseedInterval = 0x1000000000000;  // 2^48\n\t};\n\n\tHmacDRBG$$1.prototype._hmac = function hmac() {\n\t  return new hash.hmac(this.hash, this.K);\n\t};\n\n\tHmacDRBG$$1.prototype._update = function update(seed) {\n\t  var kmac = this._hmac()\n\t                 .update(this.V)\n\t                 .update([ 0x00 ]);\n\t  if (seed)\n\t    { kmac = kmac.update(seed); }\n\t  this.K = kmac.digest();\n\t  this.V = this._hmac().update(this.V).digest();\n\t  if (!seed)\n\t    { return; }\n\n\t  this.K = this._hmac()\n\t               .update(this.V)\n\t               .update([ 0x01 ])\n\t               .update(seed)\n\t               .digest();\n\t  this.V = this._hmac().update(this.V).digest();\n\t};\n\n\tHmacDRBG$$1.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n\t  // Optional entropy enc\n\t  if (typeof entropyEnc !== 'string') {\n\t    addEnc = add;\n\t    add = entropyEnc;\n\t    entropyEnc = null;\n\t  }\n\n\t  entropy = utils.toArray(entropy, entropyEnc);\n\t  add = utils.toArray(add, addEnc);\n\n\t  assert(entropy.length >= (this.minEntropy / 8),\n\t         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n\t  this._update(entropy.concat(add || []));\n\t  this.reseed = 1;\n\t};\n\n\tHmacDRBG$$1.prototype.generate = function generate(len, enc, add, addEnc) {\n\t  var this$1 = this;\n\n\t  if (this.reseed > this.reseedInterval)\n\t    { throw new Error('Reseed is required'); }\n\n\t  // Optional encoding\n\t  if (typeof enc !== 'string') {\n\t    addEnc = add;\n\t    add = enc;\n\t    enc = null;\n\t  }\n\n\t  // Optional additional data\n\t  if (add) {\n\t    add = utils.toArray(add, addEnc || 'hex');\n\t    this._update(add);\n\t  }\n\n\t  var temp = [];\n\t  while (temp.length < len) {\n\t    this$1.V = this$1._hmac().update(this$1.V).digest();\n\t    temp = temp.concat(this$1.V);\n\t  }\n\n\t  var res = temp.slice(0, len);\n\t  this._update(add);\n\t  this.reseed++;\n\t  return utils.encode(res, enc);\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\n\tfunction KeyPair(ec, options) {\n\t  this.ec = ec;\n\t  this.priv = null;\n\t  this.pub = null;\n\n\t  // KeyPair(ec, { priv: ..., pub: ... })\n\t  if (options.priv)\n\t    { this._importPrivate(options.priv, options.privEnc); }\n\t  if (options.pub)\n\t    { this._importPublic(options.pub, options.pubEnc); }\n\t}\n\tmodule.exports = KeyPair;\n\n\tKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n\t  if (pub instanceof KeyPair)\n\t    { return pub; }\n\n\t  return new KeyPair(ec, {\n\t    pub: pub,\n\t    pubEnc: enc\n\t  });\n\t};\n\n\tKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n\t  if (priv instanceof KeyPair)\n\t    { return priv; }\n\n\t  return new KeyPair(ec, {\n\t    priv: priv,\n\t    privEnc: enc\n\t  });\n\t};\n\n\tKeyPair.prototype.validate = function validate() {\n\t  var pub = this.getPublic();\n\n\t  if (pub.isInfinity())\n\t    { return { result: false, reason: 'Invalid public key' }; }\n\t  if (!pub.validate())\n\t    { return { result: false, reason: 'Public key is not a point' }; }\n\t  if (!pub.mul(this.ec.curve.n).isInfinity())\n\t    { return { result: false, reason: 'Public key * N != O' }; }\n\n\t  return { result: true, reason: null };\n\t};\n\n\tKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n\t  // compact is optional argument\n\t  if (typeof compact === 'string') {\n\t    enc = compact;\n\t    compact = null;\n\t  }\n\n\t  if (!this.pub)\n\t    { this.pub = this.ec.g.mul(this.priv); }\n\n\t  if (!enc)\n\t    { return this.pub; }\n\n\t  return this.pub.encode(enc, compact);\n\t};\n\n\tKeyPair.prototype.getPrivate = function getPrivate(enc) {\n\t  if (enc === 'hex')\n\t    { return this.priv.toString(16, 2); }\n\t  else\n\t    { return this.priv; }\n\t};\n\n\tKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n\t  this.priv = new BN(key, enc || 16);\n\n\t  // Ensure that the priv won't be bigger than n, otherwise we may fail\n\t  // in fixed multiplication method\n\t  this.priv = this.priv.umod(this.ec.curve.n);\n\t};\n\n\tKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n\t  if (key.x || key.y) {\n\t    // Montgomery points only have an `x` coordinate.\n\t    // Weierstrass/Edwards points on the other hand have both `x` and\n\t    // `y` coordinates.\n\t    if (this.ec.curve.type === 'mont') {\n\t      assert(key.x, 'Need x coordinate');\n\t    } else if (this.ec.curve.type === 'short' ||\n\t               this.ec.curve.type === 'edwards') {\n\t      assert(key.x && key.y, 'Need both x and y coordinate');\n\t    }\n\t    this.pub = this.ec.curve.point(key.x, key.y);\n\t    return;\n\t  }\n\t  this.pub = this.ec.curve.decodePoint(key, enc);\n\t};\n\n\t// ECDH\n\tKeyPair.prototype.derive = function derive(pub) {\n\t  return pub.mul(this.priv).getX();\n\t};\n\n\t// ECDSA\n\tKeyPair.prototype.sign = function sign(msg, enc, options) {\n\t  return this.ec.sign(msg, this, enc, options);\n\t};\n\n\tKeyPair.prototype.verify = function verify(msg, signature) {\n\t  return this.ec.verify(msg, signature, this);\n\t};\n\n\tKeyPair.prototype.inspect = function inspect() {\n\t  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n\t         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\n\tfunction Signature(options, enc) {\n\t  if (options instanceof Signature)\n\t    { return options; }\n\n\t  if (this._importDER(options, enc))\n\t    { return; }\n\n\t  assert(options.r && options.s, 'Signature without r or s');\n\t  this.r = new BN(options.r, 16);\n\t  this.s = new BN(options.s, 16);\n\t  if (options.recoveryParam === undefined)\n\t    { this.recoveryParam = null; }\n\t  else\n\t    { this.recoveryParam = options.recoveryParam; }\n\t}\n\tmodule.exports = Signature;\n\n\tfunction Position() {\n\t  this.place = 0;\n\t}\n\n\tfunction getLength(buf, p) {\n\t  var initial = buf[p.place++];\n\t  if (!(initial & 0x80)) {\n\t    return initial;\n\t  }\n\t  var octetLen = initial & 0xf;\n\t  var val = 0;\n\t  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n\t    val <<= 8;\n\t    val |= buf[off];\n\t  }\n\t  p.place = off;\n\t  return val;\n\t}\n\n\tfunction rmPadding(buf) {\n\t  var i = 0;\n\t  var len = buf.length - 1;\n\t  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n\t    i++;\n\t  }\n\t  if (i === 0) {\n\t    return buf;\n\t  }\n\t  return buf.slice(i);\n\t}\n\n\tSignature.prototype._importDER = function _importDER(data, enc) {\n\t  data = utils.toArray(data, enc);\n\t  var p = new Position();\n\t  if (data[p.place++] !== 0x30) {\n\t    return false;\n\t  }\n\t  var len = getLength(data, p);\n\t  if ((len + p.place) !== data.length) {\n\t    return false;\n\t  }\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var rlen = getLength(data, p);\n\t  var r = data.slice(p.place, rlen + p.place);\n\t  p.place += rlen;\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var slen = getLength(data, p);\n\t  if (data.length !== slen + p.place) {\n\t    return false;\n\t  }\n\t  var s = data.slice(p.place, slen + p.place);\n\t  if (r[0] === 0 && (r[1] & 0x80)) {\n\t    r = r.slice(1);\n\t  }\n\t  if (s[0] === 0 && (s[1] & 0x80)) {\n\t    s = s.slice(1);\n\t  }\n\n\t  this.r = new BN(r);\n\t  this.s = new BN(s);\n\t  this.recoveryParam = null;\n\n\t  return true;\n\t};\n\n\tfunction constructLength(arr, len) {\n\t  if (len < 0x80) {\n\t    arr.push(len);\n\t    return;\n\t  }\n\t  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n\t  arr.push(octets | 0x80);\n\t  while (--octets) {\n\t    arr.push((len >>> (octets << 3)) & 0xff);\n\t  }\n\t  arr.push(len);\n\t}\n\n\tSignature.prototype.toDER = function toDER(enc) {\n\t  var r = this.r.toArray();\n\t  var s = this.s.toArray();\n\n\t  // Pad values\n\t  if (r[0] & 0x80)\n\t    { r = [ 0 ].concat(r); }\n\t  // Pad values\n\t  if (s[0] & 0x80)\n\t    { s = [ 0 ].concat(s); }\n\n\t  r = rmPadding(r);\n\t  s = rmPadding(s);\n\n\t  while (!s[0] && !(s[1] & 0x80)) {\n\t    s = s.slice(1);\n\t  }\n\t  var arr = [ 0x02 ];\n\t  constructLength(arr, r.length);\n\t  arr = arr.concat(r);\n\t  arr.push(0x02);\n\t  constructLength(arr, s.length);\n\t  var backHalf = arr.concat(s);\n\t  var res = [ 0x30 ];\n\t  constructLength(res, backHalf.length);\n\t  res = res.concat(backHalf);\n\t  return utils.encode(res, enc);\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar hash = __webpack_require__(18);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar parseBytes = utils.parseBytes;\n\tvar KeyPair = __webpack_require__(30);\n\tvar Signature = __webpack_require__(31);\n\n\tfunction EDDSA(curve) {\n\t  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n\t  if (!(this instanceof EDDSA))\n\t    { return new EDDSA(curve); }\n\n\t  var curve = elliptic.curves[curve].curve;\n\t  this.curve = curve;\n\t  this.g = curve.g;\n\t  this.g.precompute(curve.n.bitLength() + 1);\n\n\t  this.pointClass = curve.point().constructor;\n\t  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n\t  this.hash = hash.sha512;\n\t}\n\n\tmodule.exports = EDDSA;\n\n\t/**\n\t* @param {Array|String} message - message bytes\n\t* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n\t* @returns {Signature} - signature\n\t*/\n\tEDDSA.prototype.sign = function sign(message, secret) {\n\t  message = parseBytes(message);\n\t  var key = this.keyFromSecret(secret);\n\t  var r = this.hashInt(key.messagePrefix(), message);\n\t  var R = this.g.mul(r);\n\t  var Rencoded = this.encodePoint(R);\n\t  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n\t               .mul(key.priv());\n\t  var S = r.add(s_).umod(this.curve.n);\n\t  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n\t};\n\n\t/**\n\t* @param {Array} message - message bytes\n\t* @param {Array|String|Signature} sig - sig bytes\n\t* @param {Array|String|Point|KeyPair} pub - public key\n\t* @returns {Boolean} - true if public key matches sig of message\n\t*/\n\tEDDSA.prototype.verify = function verify(message, sig, pub) {\n\t  message = parseBytes(message);\n\t  sig = this.makeSignature(sig);\n\t  var key = this.keyFromPublic(pub);\n\t  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n\t  var SG = this.g.mul(sig.S());\n\t  var RplusAh = sig.R().add(key.pub().mul(h));\n\t  return RplusAh.eq(SG);\n\t};\n\n\tEDDSA.prototype.hashInt = function hashInt() {\n\t  var arguments$1 = arguments;\n\n\t  var hash = this.hash();\n\t  for (var i = 0; i < arguments.length; i++)\n\t    { hash.update(arguments$1[i]); }\n\t  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n\t};\n\n\tEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n\t  return KeyPair.fromPublic(this, pub);\n\t};\n\n\tEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n\t  return KeyPair.fromSecret(this, secret);\n\t};\n\n\tEDDSA.prototype.makeSignature = function makeSignature(sig) {\n\t  if (sig instanceof Signature)\n\t    { return sig; }\n\t  return new Signature(this, sig);\n\t};\n\n\t/**\n\t* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n\t*\n\t* EDDSA defines methods for encoding and decoding points and integers. These are\n\t* helper convenience methods, that pass along to utility functions implied\n\t* parameters.\n\t*\n\t*/\n\tEDDSA.prototype.encodePoint = function encodePoint(point) {\n\t  var enc = point.getY().toArray('le', this.encodingLength);\n\t  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n\t  return enc;\n\t};\n\n\tEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n\t  bytes = utils.parseBytes(bytes);\n\n\t  var lastIx = bytes.length - 1;\n\t  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n\t  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n\t  var y = utils.intFromLE(normed);\n\t  return this.curve.pointFromY(y, xIsOdd);\n\t};\n\n\tEDDSA.prototype.encodeInt = function encodeInt(num) {\n\t  return num.toArray('le', this.encodingLength);\n\t};\n\n\tEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n\t  return utils.intFromLE(bytes);\n\t};\n\n\tEDDSA.prototype.isPoint = function isPoint(val) {\n\t  return val instanceof this.pointClass;\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar parseBytes = utils.parseBytes;\n\tvar cachedProperty = utils.cachedProperty;\n\n\t/**\n\t* @param {EDDSA} eddsa - instance\n\t* @param {Object} params - public/private key parameters\n\t*\n\t* @param {Array<Byte>} [params.secret] - secret seed bytes\n\t* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n\t* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n\t*\n\t*/\n\tfunction KeyPair(eddsa, params) {\n\t  this.eddsa = eddsa;\n\t  this._secret = parseBytes(params.secret);\n\t  if (eddsa.isPoint(params.pub))\n\t    { this._pub = params.pub; }\n\t  else\n\t    { this._pubBytes = parseBytes(params.pub); }\n\t}\n\n\tKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n\t  if (pub instanceof KeyPair)\n\t    { return pub; }\n\t  return new KeyPair(eddsa, { pub: pub });\n\t};\n\n\tKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n\t  if (secret instanceof KeyPair)\n\t    { return secret; }\n\t  return new KeyPair(eddsa, { secret: secret });\n\t};\n\n\tKeyPair.prototype.secret = function secret() {\n\t  return this._secret;\n\t};\n\n\tcachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n\t  return this.eddsa.encodePoint(this.pub());\n\t});\n\n\tcachedProperty(KeyPair, 'pub', function pub() {\n\t  if (this._pubBytes)\n\t    { return this.eddsa.decodePoint(this._pubBytes); }\n\t  return this.eddsa.g.mul(this.priv());\n\t});\n\n\tcachedProperty(KeyPair, 'privBytes', function privBytes() {\n\t  var eddsa = this.eddsa;\n\t  var hash = this.hash();\n\t  var lastIx = eddsa.encodingLength - 1;\n\n\t  var a = hash.slice(0, eddsa.encodingLength);\n\t  a[0] &= 248;\n\t  a[lastIx] &= 127;\n\t  a[lastIx] |= 64;\n\n\t  return a;\n\t});\n\n\tcachedProperty(KeyPair, 'priv', function priv() {\n\t  return this.eddsa.decodeInt(this.privBytes());\n\t});\n\n\tcachedProperty(KeyPair, 'hash', function hash() {\n\t  return this.eddsa.hash().update(this.secret()).digest();\n\t});\n\n\tcachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n\t  return this.hash().slice(this.eddsa.encodingLength);\n\t});\n\n\tKeyPair.prototype.sign = function sign(message) {\n\t  assert(this._secret, 'KeyPair can only verify');\n\t  return this.eddsa.sign(message, this);\n\t};\n\n\tKeyPair.prototype.verify = function verify(message, sig) {\n\t  return this.eddsa.verify(message, sig, this);\n\t};\n\n\tKeyPair.prototype.getSecret = function getSecret(enc) {\n\t  assert(this._secret, 'KeyPair is public only');\n\t  return utils.encode(this.secret(), enc);\n\t};\n\n\tKeyPair.prototype.getPublic = function getPublic(enc) {\n\t  return utils.encode(this.pubBytes(), enc);\n\t};\n\n\tmodule.exports = KeyPair;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar cachedProperty = utils.cachedProperty;\n\tvar parseBytes = utils.parseBytes;\n\n\t/**\n\t* @param {EDDSA} eddsa - eddsa instance\n\t* @param {Array<Bytes>|Object} sig -\n\t* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n\t* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n\t* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n\t* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n\t*/\n\tfunction Signature(eddsa, sig) {\n\t  this.eddsa = eddsa;\n\n\t  if (typeof sig !== 'object')\n\t    { sig = parseBytes(sig); }\n\n\t  if (Array.isArray(sig)) {\n\t    sig = {\n\t      R: sig.slice(0, eddsa.encodingLength),\n\t      S: sig.slice(eddsa.encodingLength)\n\t    };\n\t  }\n\n\t  assert(sig.R && sig.S, 'Signature without R or S');\n\n\t  if (eddsa.isPoint(sig.R))\n\t    { this._R = sig.R; }\n\t  if (sig.S instanceof BN)\n\t    { this._S = sig.S; }\n\n\t  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n\t  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n\t}\n\n\tcachedProperty(Signature, 'S', function S() {\n\t  return this.eddsa.decodeInt(this.Sencoded());\n\t});\n\n\tcachedProperty(Signature, 'R', function R() {\n\t  return this.eddsa.decodePoint(this.Rencoded());\n\t});\n\n\tcachedProperty(Signature, 'Rencoded', function Rencoded() {\n\t  return this.eddsa.encodePoint(this.R());\n\t});\n\n\tcachedProperty(Signature, 'Sencoded', function Sencoded() {\n\t  return this.eddsa.encodeInt(this.S());\n\t});\n\n\tSignature.prototype.toBytes = function toBytes() {\n\t  return this.Rencoded().concat(this.Sencoded());\n\t};\n\n\tSignature.prototype.toHex = function toHex() {\n\t  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n\t};\n\n\tmodule.exports = Signature;\n\n\n/***/ }\n/******/ ])));\n});\n\nvar elliptic = cryptoBundle.elliptic;\nvar hashjs = cryptoBundle.hashjs;\n\nvar AesCbc = aesjs.ModeOfOperation.cbc;\n\n/**\n * Creates a pseudo-random number generator based on the provided entropy.\n * This can be used to turn an async random number generator into\n * a synchronous one.\n */\nfunction makeRandomGenerator (entropy) {\n  var rng = new HmacDRBG({\n    hash: hashjs.sha256,\n    entropy: entropy\n  });\n\n  return function (bytes) { return rng.generate(bytes); }\n}\n\n/**\n * @param box an Airbitz JSON encryption box\n * @param key a key, as an ArrayBuffer\n */\nfunction decrypt (box, key) {\n  // Check JSON:\n  if (box['encryptionType'] !== 0) {\n    throw new Error('Unknown encryption type')\n  }\n  var iv = base16.parse(box['iv_hex']);\n  var ciphertext = base64.parse(box['data_base64']);\n\n  // Decrypt:\n  var cipher = new AesCbc(key, iv);\n  var raw = cipher.decrypt(ciphertext);\n  // Alternative using node.js crypto:\n  // const decipher = crypto.createDecipheriv('AES-256-CBC', key, iv);\n  // let x = decipher.update(box.data_base64, 'base64', 'hex')\n  // x += decipher.final('hex')\n  // const data = base16.parse(x)\n\n  // Calculate field locations:\n  var headerSize = raw[0];\n  var dataSize =\n    raw[1 + headerSize] << 24 |\n    raw[2 + headerSize] << 16 |\n    raw[3 + headerSize] << 8 |\n    raw[4 + headerSize];\n  var dataStart = 1 + headerSize + 4;\n  var footerSize = raw[dataStart + dataSize];\n  var hashStart = dataStart + dataSize + 1 + footerSize;\n\n  // Verify SHA-256 checksum:\n  var hash = hashjs.sha256().update(raw.slice(0, hashStart)).digest();\n  var hashSize = hash.length;\n  for (var i = 0; i < hashSize; ++i) {\n    if (raw[hashStart + i] !== hash[i]) {\n      throw new Error('Invalid checksum')\n    }\n  }\n\n  // Verify pkcs7 padding (if any):\n  var paddingStart = hashStart + hashSize;\n  var paddingSize = raw.length - paddingStart;\n  for (var i$1 = paddingStart; i$1 < raw.length; ++i$1) {\n    if (raw[i$1] !== paddingSize) {\n      throw new Error('Invalid PKCS7 padding')\n    }\n  }\n\n  // Return the payload:\n  return raw.slice(dataStart, dataStart + dataSize)\n}\n\n/**\n * @param payload an ArrayBuffer of data\n * @param key a key, as an ArrayBuffer\n */\nfunction encrypt (io, data, key) {\n  // Calculate sizes and locations:\n  var headerSize = io.random(1)[0] & 0x1f;\n  var dataStart = 1 + headerSize + 4;\n  var dataSize = data.length;\n  var footerStart = dataStart + dataSize + 1;\n  var footerSize = io.random(1)[0] & 0x1f;\n  var hashStart = footerStart + footerSize;\n  var hashSize = 32;\n  var paddingStart = hashStart + hashSize;\n  var paddingSize = 16 - (paddingStart & 0xf);\n  var raw = new buffer.Buffer(paddingStart + paddingSize);\n\n  // Random header:\n  var header = io.random(headerSize);\n  raw[0] = headerSize;\n  for (var i = 0; i < headerSize; ++i) {\n    raw[1 + i] = header[i];\n  }\n\n  // Payload data:\n  raw[1 + headerSize] = (dataSize >> 24) & 0xff;\n  raw[2 + headerSize] = (dataSize >> 16) & 0xff;\n  raw[3 + headerSize] = (dataSize >> 8) & 0xff;\n  raw[4 + headerSize] = dataSize & 0xff;\n  for (var i$1 = 0; i$1 < dataSize; ++i$1) {\n    raw[dataStart + i$1] = data[i$1];\n  }\n\n  // Random footer:\n  var footer = io.random(footerSize);\n  raw[dataStart + dataSize] = footerSize;\n  for (var i$2 = 0; i$2 < footerSize; ++i$2) {\n    raw[footerStart + i$2] = footer[i$2];\n  }\n\n  // SHA-256 checksum:\n  var hash = hashjs.sha256().update(raw.slice(0, hashStart)).digest();\n  for (var i$3 = 0; i$3 < hashSize; ++i$3) {\n    raw[hashStart + i$3] = hash[i$3];\n  }\n\n  // Add PKCS7 padding:\n  for (var i$4 = 0; i$4 < paddingSize; ++i$4) {\n    raw[paddingStart + i$4] = paddingSize;\n  }\n\n  // Encrypt to JSON:\n  var iv = io.random(16);\n  var cipher = new AesCbc(key, iv);\n  var ciphertext = cipher.encrypt(raw); // BUG: requires a `Buffer`\n  return {\n    'encryptionType': 0,\n    'iv_hex': base16.stringify(iv),\n    'data_base64': base64.stringify(ciphertext)\n  }\n}\n\nfunction hmacSha256 (data, key) {\n  var hmac = hashjs.hmac(hashjs.sha256, key);\n  return hmac.update(data).digest()\n}\n\n/**\n * Converts a promise-returning function into a Node-style function,\n * but only an extra callback argument is actually passed in.\n */\nfunction nodeify (f) {\n  return function () {\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n    var promise = f.apply(this, rest);\n\n    // Figure out what to do with the promise:\n    var callback = rest[rest.length - 1];\n    if (f.length < rest.length && typeof callback === 'function') {\n      promise.then(function (reply) { return callback(null, reply); }).catch(function (e) { return callback(e); });\n    } else {\n      return promise\n    }\n  }\n}\n\n/**\n * If the function f throws an error, return that as a rejected promise.\n */\nfunction rejectify (f) {\n  return function () {\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n    try {\n      return f.apply(this, rest)\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n}\n\n/**\n * Prevents a function from running in parallel.\n * The currently-running operation must finish before the new one starts.\n */\nfunction serialize (f) {\n  var nextTask = Promise.resolve();\n  return function () {\n    var this$1 = this;\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n    nextTask = nextTask.then(\n      function (win) { return f.apply(this$1, rest); },\n      function (fail) { return f.apply(this$1, rest); }\n    );\n    return nextTask\n  }\n}\n\nvar userIdSnrp = {\n  'salt_hex': 'b5865ffb9fa7b3bfe4b2384d47ce831ee22a4a9d5c34c7ef7d21467cc758f81b',\n  'n': 16384,\n  'r': 1,\n  'p': 1\n};\nvar passwordAuthSnrp = userIdSnrp;\n\n// Holds a `Promise` of an SRNP:\nvar snrpCache = null;\n\nvar timerNow = null;\nif (typeof window !== 'undefined' && window.performance) {\n  timerNow = function () {\n    return window.performance.now()\n  };\n} else {\n  timerNow = function () {\n    return Date.now()\n  };\n}\n\n/**\n * @param data A string to hash.\n * @param snrp A JSON SNRP structure.\n * @return A promise for an object with the hash and elapsed time.\n */\nvar timeScrypt = serialize(function timeScrypt (data, snrp) {\n  var dklen = 32;\n  var salt = base16.parse(snrp.salt_hex);\n  if (typeof data === 'string') {\n    data = utf8.parse(data);\n  }\n  return new Promise(function (resolve, reject) {\n    var startTime = timerNow();\n    scryptJs(data, salt, snrp.n, snrp.r, snrp.p, dklen, function (error, progress, key) {\n      if (error) { return reject(error) }\n      if (key) {\n        return resolve({\n          hash: key,\n          time: timerNow() - startTime\n        })\n      }\n    });\n  })\n});\n\nfunction scrypt (data, snrp) {\n  return timeScrypt(data, snrp).then(function (value) { return value.hash; })\n}\n\nfunction calcSnrpForTarget (io, targetHashTimeMilliseconds) {\n  var snrp = {\n    'salt_hex': userIdSnrp.salt_hex,\n    'n': 16384,\n    'r': 1,\n    'p': 1\n  };\n\n  return timeScrypt('', snrp).then(function (value) {\n    var timeElapsed = value.time;\n    var estTargetTimeElapsed = timeElapsed;\n    var nUnPowered = 0;\n    var r = (targetHashTimeMilliseconds / estTargetTimeElapsed);\n    if (r > 8) {\n      snrp.r = 8;\n\n      estTargetTimeElapsed *= 8;\n      var n = (targetHashTimeMilliseconds / estTargetTimeElapsed);\n\n      if (n > 4) {\n        nUnPowered = 4;\n\n        estTargetTimeElapsed *= 4;\n        var p = (targetHashTimeMilliseconds / estTargetTimeElapsed);\n        snrp.p = Math.floor(p);\n      } else {\n        nUnPowered = Math.floor(n);\n      }\n    } else {\n      snrp.r = r > 4 ? Math.floor(r) : 4;\n    }\n    nUnPowered = nUnPowered >= 1 ? nUnPowered : 1;\n    snrp.n = Math.pow(2, nUnPowered + 13);\n\n    io.log.info((\"snrp: \" + (snrp.n) + \" \" + (snrp.r) + \" \" + (snrp.p) + \" based on \" + timeElapsed + \"ms benchmark\"));\n    return snrp\n  })\n}\n\nfunction makeSnrp (io) {\n  // Put the calculation in the cache if it isn't already started:\n  if (!snrpCache) {\n    snrpCache = calcSnrpForTarget(io, 2000);\n  }\n\n  // Return a copy of the timed version with a fresh salt:\n  return snrpCache.then(function (snrp) { return ({\n    'salt_hex': base16.stringify(io.random(32)),\n    'n': snrp.n,\n    'r': snrp.r,\n    'p': snrp.p\n  }); })\n}\n\n/**\n * Wraps `LocalStorage` with a namespace and other extra goodies.\n */\nfunction ScopedStorage (localStorage, prefix) {\n  this.localStorage = localStorage;\n  this.prefix = prefix + '.';\n}\n\nScopedStorage.prototype.getItem = function (key) {\n  return this.localStorage.getItem(this.prefix + key)\n};\n\nScopedStorage.prototype.setItem = function (key, value) {\n  return this.localStorage.setItem(this.prefix + key, value)\n};\n\nScopedStorage.prototype.removeItem = function (key) {\n  return this.localStorage.removeItem(this.prefix + key)\n};\n\nScopedStorage.prototype.getJson = function (key) {\n  var text = this.getItem(key);\n  return text == null ? null : JSON.parse(text)\n};\n\nScopedStorage.prototype.setJson = function (key, value) {\n  return this.setItem(key, JSON.stringify(value))\n};\n\nScopedStorage.prototype.subStore = function (prefix) {\n  return new ScopedStorage(this.localStorage, this.prefix + prefix)\n};\n\nScopedStorage.prototype.keys = function () {\n  var this$1 = this;\n\n  var keys = [];\n  var search = new RegExp('^' + this.prefix);\n  for (var i = 0; i < this.localStorage.length; ++i) {\n    var key = this$1.localStorage.key(i);\n    if (search.test(key)) {\n      keys.push(key.replace(search, ''));\n    }\n  }\n  return keys\n};\n\nScopedStorage.prototype.removeAll = function () {\n  var this$1 = this;\n\n  this.keys().forEach(function (key) {\n    this$1.removeItem(key);\n  });\n};\n\nScopedStorage.prototype.setItems = function (items) {\n  var this$1 = this;\n\n  Object.keys(items).forEach(function (key) {\n    var item = items[key];\n    if (typeof item === 'string') {\n      this$1.setItem(key, item);\n    } else {\n      this$1.setJson(key, item);\n    }\n  });\n};\n\n/**\n * Handles login data storage.\n * TODO: Make all methods async!\n */\nvar LoginStore = function LoginStore (io) {\n  this.io = io;\n};\n\n/**\n * Finds the userId for a particular username.\n * TODO: Memoize this method.\n */\nLoginStore.prototype.getUserId = function getUserId (username) {\n  var fixedName = fixUsername(username);\n  var users = this._loadUsers(this.io);\n  if (users[fixedName]) {\n    return Promise.resolve(base64.parse(users[fixedName]))\n  }\n  return scrypt(fixedName, userIdSnrp)\n};\n\n/**\n * Loads the loginData matching the given query.\n * For now, the query only supports the `username` property.\n */\nLoginStore.prototype.find = function find (query) {\n  var fixedName = fixUsername(query.username);\n  var store = this._findUsername(fixedName);\n\n  return {\n    username: fixedName,\n\n    passwordAuthBox: store.getJson('passwordAuthBox'),\n    passwordBox: store.getJson('passwordBox'),\n    passwordKeySnrp: store.getJson('passwordKeySnrp'),\n\n    pin2Key: store.getItem('pin2Key'),\n    recovery2Key: store.getItem('recovery2Key'),\n\n    rootKeyBox: store.getJson('rootKeyBox'),\n    syncKeyBox: store.getJson('syncKeyBox'),\n    repos: store.getJson('repos') || []\n  }\n};\n\n/**\n * Lists the usernames that have data in the store.\n */\nLoginStore.prototype.listUsernames = function listUsernames () {\n  var users = this._loadUsers();\n  return Object.keys(users)\n};\n\n/**\n * Removes any loginData matching the given query.\n * For now, the query only supports the `username` property.\n */\nLoginStore.prototype.remove = function remove (query) {\n  var fixedName = fixUsername(query.username);\n  this._findUsername(fixedName).removeAll();\n\n  var users = this._loadUsers();\n  delete users[fixedName];\n  this.io.localStorage.setItem('airbitz.users', JSON.stringify(users));\n};\n\nLoginStore.prototype.update = function update (userId, loginData) {\n  // Find the username:\n  var username;\n  var users = this._loadUsers();\n  if ('username' in loginData) {\n    username = loginData.username;\n\n    // Add the userId to the table, in case it's new:\n    users[username] = base64.stringify(userId);\n    this.io.localStorage.setItem('airbitz.users', JSON.stringify(users));\n  } else {\n    username = Object.keys(users).find(function (username) {\n      return users[username] === base64.stringify(userId)\n    });\n    if (!username) {\n      throw new Error('Cannot find userId')\n    }\n  }\n\n  // Actually save:\n  var store = this._findUsername(username);\n  return store.setItems(loginData)\n};\n\nLoginStore.prototype._findUsername = function _findUsername (username) {\n  var path = 'airbitz.user.' + fixUsername(username);\n  return new ScopedStorage(this.io.localStorage, path)\n};\n\nLoginStore.prototype._loadUsers = function _loadUsers () {\n  try {\n    var users = JSON.parse(this.io.localStorage.getItem('airbitz.users'));\n    return users || {}\n  } catch (e) {\n    return {}\n  }\n};\n\n/**\n * Normalizes a username, and checks for invalid characters.\n * TODO: Support a wider character range via Unicode normalization.\n */\nfunction fixUsername (username) {\n  var out = username\n    .toLowerCase()\n    .replace(/[ \\f\\r\\n\\t\\v]+/g, ' ')\n    .replace(/ $/, '')\n    .replace(/^ /, '');\n\n  for (var i = 0; i < out.length; ++i) {\n    var c = out.charCodeAt(i);\n    if (c < 0x20 || c > 0x7e) {\n      throw new Error('Bad characters in username')\n    }\n  }\n  return out\n}\n\n/**\n * Creates a blank repo on the sync server.\n */\nfunction repoCreate (io, login, keysJson) {\n  keysJson.dataKey = keysJson.dataKey || base16.stringify(io.random(32));\n  keysJson.syncKey = keysJson.syncKey || base16.stringify(io.random(20));\n\n  var request = {\n    'l1': base64.stringify(login.userId),\n    'lp1': base64.stringify(login.passwordAuth),\n    'repo_wallet_key': keysJson.syncKey\n  };\n  return io.authRequest('POST', '/v1/wallet/create', request).then(function (reply) { return keysJson; })\n}\n\n/**\n * Marks a repo as being used.\n * This should be called after the repo is securely attached\n * to the login or account.\n */\nfunction repoActivate (io, login, keysJson) {\n  var request = {\n    'l1': base64.stringify(login.userId),\n    'lp1': base64.stringify(login.passwordAuth),\n    'repo_wallet_key': keysJson.syncKey\n  };\n  return io.authRequest('POST', '/v1/wallet/activate', request).then(function (reply) { return null; })\n}\n\n/**\n * Converts a login reply from the server into the local storage format.\n */\nfunction makeLoginData (username, loginReply, dataKey) {\n  var out = {\n    username: fixUsername(username)\n  };\n\n  // Copy common items:\n  var keys = [\n    'passwordAuthBox', 'passwordBox', 'passwordKeySnrp',\n    'rootKeyBox', 'syncKeyBox', 'repos'\n  ];\n  keys.forEach(function (key) {\n    if (key in loginReply) {\n      out[key] = loginReply[key];\n    }\n  });\n\n  // Store the pin key unencrypted:\n  if (loginReply.pin2KeyBox != null) {\n    var pin2Key = decrypt(loginReply.pin2KeyBox, dataKey);\n    out.pin2Key = base58.stringify(pin2Key);\n  }\n\n  // Store the recovery key unencrypted:\n  if (loginReply.recovery2KeyBox != null) {\n    var recovery2Key = decrypt(loginReply.recovery2KeyBox, dataKey);\n    out.recovery2Key = base58.stringify(recovery2Key);\n  }\n\n  return out\n}\n\n/**\n * Access to the logged-in user data.\n *\n * This type has following powers:\n * - Access to the auth server\n * - A list of account repos\n * - The legacy BitID rootKey\n */\nfunction Login (io, userId, dataKey, loginData) {\n  if (userId.length !== 32) {\n    throw new Error('userId must be a hash')\n  }\n\n  // Identity:\n  this.username = loginData.username;\n  this.userId = userId;\n  this.dataKey = dataKey;\n\n  // Return access to the server:\n  if (loginData.passwordAuthBox == null) {\n    throw new Error('Missing passwordAuthBox')\n  }\n  this.passwordAuth = decrypt(loginData.passwordAuthBox, dataKey);\n\n  // Legacy account repo:\n  if (loginData.syncKeyBox != null) {\n    this.syncKey = decrypt(loginData.syncKeyBox, dataKey);\n  }\n\n  // Legacy BitID key:\n  if (loginData.rootKeyBox != null) {\n    this.rootKey = decrypt(loginData.rootKeyBox, dataKey);\n  }\n\n  // TODO: Decrypt these:\n  this.repos = loginData.repos || [];\n\n  // Local keys:\n  if (loginData.pin2Key != null) {\n    this.pin2Key = base58.parse(loginData.pin2Key);\n  }\n  if (loginData.recovery2Key != null) {\n    this.recovery2Key = base58.parse(loginData.recovery2Key);\n  }\n}\n\n/**\n * Returns a new login object, populated with data from the server.\n */\nLogin.online = function (io, username, userId, dataKey, loginReply) {\n  var loginData = makeLoginData(username, loginReply, dataKey);\n  io.loginStore.update(userId, loginData);\n\n  return new Login(io, userId, dataKey, loginData)\n};\n\n/**\n * Returns a new login object, populated with data from the local storage.\n */\nLogin.offline = function (io, username, userId, dataKey) {\n  var loginData = io.loginStore.find({username: username});\n  var out = new Login(io, userId, dataKey, loginData);\n\n  // Try updating our locally-stored login data (failure is ok):\n  io\n    .authRequest('POST', '/v2/login', out.authJson())\n    .then(function (loginReply) {\n      var loginData = makeLoginData(username, loginReply, dataKey);\n      return io.loginStore.update(userId, loginData)\n    })\n    .catch(function (e) { return io.log.error(e); });\n\n  return out\n};\n\n/**\n * Sets up a login v2 server authorization JSON.\n */\nLogin.prototype.authJson = function () {\n  return {\n    'userId': base64.stringify(this.userId),\n    'passwordAuth': base64.stringify(this.passwordAuth)\n  }\n};\n\n/**\n * Searches for the given account type in the provided login object.\n * Returns the repo keys in the JSON bundle format.\n */\nLogin.prototype.accountFind = function (type) {\n  var this$1 = this;\n\n  // Search the repos array:\n  for (var i = 0, list = this$1.repos; i < list.length; i += 1) {\n    var repo = list[i];\n\n    if (repo['type'] === type) {\n      var keysBox = repo['keysBox'] || repo['info'];\n      return JSON.parse(utf8.stringify(decrypt(keysBox, this$1.dataKey)))\n    }\n  }\n\n  // Handle the legacy Airbitz repo:\n  if (type === 'account:repo:co.airbitz.wallet') {\n    return {\n      'syncKey': base16.stringify(this.syncKey),\n      'dataKey': base16.stringify(this.dataKey)\n    }\n  }\n\n  throw new Error((\"Cannot find a \\\"\" + type + \"\\\" repo\"))\n};\n\n/**\n * Creates and attaches new account repo.\n */\nLogin.prototype.accountCreate = function (io, type) {\n  var this$1 = this;\n\n  return repoCreate(io, this, {}).then(function (keysJson) {\n    return this$1.accountAttach(io, type, keysJson).then(function () {\n      return repoActivate(io, this$1, keysJson)\n    })\n  })\n};\n\n/**\n * Attaches an account repo to the login.\n */\nLogin.prototype.accountAttach = function (io, type, info) {\n  var this$1 = this;\n\n  var infoBlob = utf8.parse(JSON.stringify(info));\n  var data = {\n    'type': type,\n    'info': encrypt(io, infoBlob, this.dataKey)\n  };\n\n  var request = this.authJson();\n  request['data'] = data;\n  return io.authRequest('POST', '/v2/login/repos', request).then(function (reply) {\n    this$1.repos.push(data);\n    io.loginStore.update(this$1.userId, {repos: this$1.repos});\n    return null\n  })\n};\n\nfunction makeHashInput (username, password) {\n  return fixUsername(username) + password\n}\n\nfunction loginOffline (io, username, userId, password) {\n  // Extract stuff from storage:\n  var loginData = io.loginStore.find({username: username});\n  var passwordKeySnrp = loginData.passwordKeySnrp;\n  var passwordBox = loginData.passwordBox;\n  if (!passwordKeySnrp || !passwordBox) {\n    throw new Error('Missing data for offline login')\n  }\n\n  // Decrypt the dataKey:\n  var up = makeHashInput(username, password);\n  return scrypt(up, passwordKeySnrp).then(function (passwordKey) {\n    var dataKey = decrypt(passwordBox, passwordKey);\n    return Login.offline(io, username, userId, dataKey)\n  })\n}\n\nfunction loginOnline (io, username, userId, password) {\n  var up = makeHashInput(username, password);\n  return scrypt(up, passwordAuthSnrp).then(function (passwordAuth) {\n    // Encode the username:\n    var request = {\n      'userId': base64.stringify(userId),\n      'passwordAuth': base64.stringify(passwordAuth)\n      // \"otp\": null\n    };\n    return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n      // Password login:\n      var passwordKeySnrp = reply['passwordKeySnrp'];\n      var passwordBox = reply['passwordBox'];\n      if (!passwordKeySnrp || !passwordBox) {\n        throw new Error('Missing data for password login')\n      }\n\n      // Decrypt the dataKey:\n      return scrypt(up, passwordKeySnrp).then(function (passwordKey) {\n        var dataKey = decrypt(passwordBox, passwordKey);\n\n        // Build the login object:\n        return Login.online(io, username, userId, dataKey, reply)\n      })\n    })\n  })\n}\n\n/**\n * Logs a user in using a password.\n * @param username string\n * @param password string\n * @return `Login` object promise\n */\nfunction login (io, username, password) {\n  return io.loginStore.getUserId(username).then(function (userId) {\n    // Race the two login methods, and let the fastest one win:\n    return rejectify(loginOffline)(io, username, userId, password).catch(function (e) { return rejectify(loginOnline)(io, username, userId, password); }\n    )\n  })\n}\n\n/**\n * Returns true if the given password is correct.\n */\nfunction check (io, login, password) {\n  // Derive passwordAuth:\n  return scrypt(login.username + password, passwordAuthSnrp).then(function (passwordAuth) {\n    // Compare what we derived with what we have:\n    for (var i = 0; i < passwordAuth.length; ++i) {\n      if (passwordAuth[i] !== login.passwordAuth[i]) {\n        return false\n      }\n    }\n    return true\n  })\n}\n\n/**\n * Creates the data needed to set up the password on the server.\n */\nfunction makeSetup (io, dataKey, username, password) {\n  var up = makeHashInput(username, password);\n\n  // dataKey chain:\n  var boxPromise = makeSnrp(io).then(function (passwordKeySnrp) {\n    return scrypt(up, passwordKeySnrp).then(function (passwordKey) {\n      var passwordBox = encrypt(io, dataKey, passwordKey);\n      return {passwordKeySnrp: passwordKeySnrp, passwordBox: passwordBox}\n    })\n  });\n\n  // authKey chain:\n  var authPromise = scrypt(up, passwordAuthSnrp).then(function (passwordAuth) {\n    var passwordAuthBox = encrypt(io, passwordAuth, dataKey);\n    return {passwordAuth: passwordAuth, passwordAuthBox: passwordAuthBox}\n  });\n\n  return Promise.all([boxPromise, authPromise]).then(function (values) {\n    var values_0 = values[0];\n    var passwordKeySnrp = values_0.passwordKeySnrp;\n    var passwordBox = values_0.passwordBox;\n    var values_1 = values[1];\n    var passwordAuth = values_1.passwordAuth;\n    var passwordAuthBox = values_1.passwordAuthBox;\n    return {\n      server: {\n        'passwordAuth': base64.stringify(passwordAuth),\n        'passwordAuthSnrp': passwordAuthSnrp, // TODO: Not needed\n        'passwordKeySnrp': passwordKeySnrp,\n        'passwordBox': passwordBox,\n        'passwordAuthBox': passwordAuthBox\n      },\n      storage: {\n        'passwordKeySnrp': passwordKeySnrp,\n        'passwordBox': passwordBox,\n        'passwordAuthBox': passwordAuthBox\n      },\n      passwordAuth: passwordAuth\n    }\n  })\n}\n\n/**\n * Sets up a password for the login.\n */\nfunction setup (io, login, password) {\n  return makeSetup(io, login.dataKey, login.username, password).then(function (setup) {\n    var request = login.authJson();\n    request['data'] = setup.server;\n    return io.authRequest('POST', '/v2/login/password', request).then(function (reply) {\n      io.loginStore.update(login.userId, setup.storage);\n      login.passwordAuth = setup.passwordAuth;\n      return null\n    })\n  })\n}\n\nfunction pin2Id (pin2Key, username) {\n  return hmacSha256(fixUsername(username), pin2Key)\n}\n\nfunction pin2Auth (pin2Key, pin) {\n  return hmacSha256(pin, pin2Key)\n}\n\n/**\n * Returns a copy of the PIN login key if one exists on the local device.\n */\nfunction getKey (io, username) {\n  var loginData = io.loginStore.find({username: username});\n  return loginData.pin2Key\n}\n\n/**\n * Logs a user in using their PIN.\n * @param username string\n * @param pin2Key the recovery key, as a base58 string.\n * @param pin the PIN, as a string.\n * @param `Login` object promise\n */\nfunction login$1 (io, pin2Key, username, pin) {\n  pin2Key = base58.parse(pin2Key);\n\n  var request = {\n    'pin2Id': base64.stringify(pin2Id(pin2Key, username)),\n    'pin2Auth': base64.stringify(pin2Auth(pin2Key, pin))\n    // \"otp\": null\n  };\n  return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n    // PIN login:\n    var pin2Box = reply['pin2Box'];\n    if (!pin2Box) {\n      throw new Error('Missing data for PIN v2 login')\n    }\n\n    // Decrypt the dataKey:\n    var dataKey = decrypt(pin2Box, pin2Key);\n\n    // Build the login object:\n    return io.loginStore.getUserId(username).then(function (userId) {\n      return Login.online(io, username, userId, dataKey, reply)\n    })\n  })\n}\n\n/**\n * Creates the data needed to set up a PIN on the account.\n */\nfunction makeSetup$1 (io, login, pin) {\n  var pin2Key = login.pin2Key || io.random(32);\n\n  var pin2Box = encrypt(io, login.dataKey, pin2Key);\n  var pin2KeyBox = encrypt(io, pin2Key, login.dataKey);\n\n  return {\n    server: {\n      'pin2Id': base64.stringify(pin2Id(pin2Key, login.username)),\n      'pin2Auth': base64.stringify(pin2Auth(pin2Key, pin)),\n      'pin2Box': pin2Box,\n      'pin2KeyBox': pin2KeyBox\n    },\n    storage: {\n      'pin2Key': base58.stringify(pin2Key)\n    },\n    pin2Key: pin2Key\n  }\n}\n\n/**\n * Sets up PIN login v2.\n */\nfunction setup$1 (io, login, pin) {\n  var setup = makeSetup$1(io, login, pin);\n\n  var request = login.authJson();\n  request['data'] = setup.server;\n  return io.authRequest('POST', '/v2/login/pin2', request).then(function (reply) {\n    io.loginStore.update(login.userId, setup.storage);\n    return base58.stringify(setup.pin2Key)\n  })\n}\n\nfunction recovery2Id (recovery2Key, username) {\n  return hmacSha256(fixUsername(username), recovery2Key)\n}\n\nfunction recovery2Auth (recovery2Key, answers) {\n  return answers.map(function (answer) {\n    var data = utf8.parse(answer);\n    return base64.stringify(hmacSha256(data, recovery2Key))\n  })\n}\n\n/**\n * Returns a copy of the recovery key if one exists on the local device.\n */\nfunction getKey$1 (io, username) {\n  var loginData = io.loginStore.find({username: username});\n  return loginData.recovery2Key\n}\n\n/**\n * Logs a user in using recovery answers.\n * @param username string\n * @param recovery2Key an ArrayBuffer recovery key\n * @param array of answer strings\n * @param `Login` object promise\n */\nfunction login$2 (io, recovery2Key, username, answers) {\n  recovery2Key = base58.parse(recovery2Key);\n\n  var request = {\n    'recovery2Id': base64.stringify(recovery2Id(recovery2Key, username)),\n    'recovery2Auth': recovery2Auth(recovery2Key, answers)\n    // \"otp\": null\n  };\n  return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n    // Recovery login:\n    var recovery2Box = reply['recovery2Box'];\n    if (recovery2Box == null) {\n      throw new Error('Missing data for recovery v2 login')\n    }\n\n    // Decrypt the dataKey:\n    var dataKey = decrypt(recovery2Box, recovery2Key);\n\n    // Build the login object:\n    return io.loginStore.getUserId(username).then(function (userId) {\n      return Login.online(io, username, userId, dataKey, reply)\n    })\n  })\n}\n\n/**\n * Fetches the questions for a login\n * @param username string\n * @param recovery2Key an ArrayBuffer recovery key\n * @param Question array promise\n */\nfunction questions (io, recovery2Key, username) {\n  recovery2Key = base58.parse(recovery2Key);\n\n  var request = {\n    'recovery2Id': base64.stringify(recovery2Id(recovery2Key, username))\n    // \"otp\": null\n  };\n  return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n    // Recovery login:\n    var question2Box = reply['question2Box'];\n    if (question2Box == null) {\n      throw new Error('Login has no recovery questions')\n    }\n\n    // Decrypt the questions:\n    var questions = decrypt(question2Box, recovery2Key);\n    return JSON.parse(utf8.stringify(questions))\n  })\n}\n\n/**\n * Creates the data needed to set up recovery questions on the account.\n */\nfunction makeSetup$2 (io, login, questions, answers) {\n  if (!(Object.prototype.toString.call(questions) === '[object Array]')) {\n    throw new TypeError('Questions must be an array of strings')\n  }\n  if (!(Object.prototype.toString.call(answers) === '[object Array]')) {\n    throw new TypeError('Answers must be an array of strings')\n  }\n\n  var recovery2Key = login.recovery2Key || io.random(32);\n\n  var question2Box = encrypt(io, utf8.parse(JSON.stringify(questions), 'utf8'), recovery2Key);\n  var recovery2Box = encrypt(io, login.dataKey, recovery2Key);\n  var recovery2KeyBox = encrypt(io, recovery2Key, login.dataKey);\n\n  return {\n    server: {\n      'recovery2Id': base64.stringify(recovery2Id(recovery2Key, login.username)),\n      'recovery2Auth': recovery2Auth(recovery2Key, answers),\n      'recovery2Box': recovery2Box,\n      'recovery2KeyBox': recovery2KeyBox,\n      'question2Box': question2Box\n    },\n    storage: {\n      'recovery2Key': base58.stringify(recovery2Key)\n    },\n    recovery2Key: recovery2Key\n  }\n}\n\n/**\n * Sets up recovery questions for the login.\n */\nfunction setup$2 (io, login, questions, answers) {\n  var setup = makeSetup$2(io, login, questions, answers);\n\n  var request = login.authJson();\n  request['data'] = setup.server;\n  return io.authRequest('POST', '/v2/login/recovery2', request).then(function (reply) {\n    io.loginStore.update(login.userId, setup.storage);\n    return base58.stringify(setup.recovery2Key)\n  })\n}\n\nvar listRecoveryQuestionChoices = function listRecoveryQuestionChoices (io) {\n  return io.authRequest('POST', '/v1/questions', '')\n};\n\nvar syncServers = [\n  'https://git-js.airbitz.co',\n  'https://git4-js.airbitz.co'\n];\n\n/**\n * Fetches some resource from a sync server.\n */\nfunction syncRequest (io, method, uri, body) {\n  return syncRequestInner(io, method, uri, body, 0)\n}\n\nfunction syncRequestInner (io, method, uri, body, serverIndex) {\n  uri = syncServers[serverIndex] + uri;\n  io.log.info((\"sync: \" + method + \" \" + uri));\n  var headers = {\n    method: method,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  if (method !== 'GET') {\n    headers.body = JSON.stringify(body);\n  }\n\n  return io.fetch(uri, headers).then(function (response) {\n    return response.json().catch(function (jsonError) {\n      throw new Error('Non-JSON reply, HTTP status ' + response.status)\n    })\n  }, function (networkError) {\n    if (serverIndex + 1 < syncServers.length) {\n      return syncRequestInner(io, method, uri, body, serverIndex + 1)\n    }\n    throw new Error('NetworkError: Could not connect to sync server')\n  })\n}\n\n/**\n * Normalizes a path, returning its components as an array.\n */\nfunction pathSplit (path) {\n  // TODO: Handle dots (escapes, `.`, and `..`).\n  return path.split('/')\n}\n\n/**\n * Converts a server-format path to our internal format.\n */\nfunction pathFix (path) {\n  if (path.slice(-5) !== '.json') {\n    return null\n  }\n  return pathSplit(path.slice(0, -5)).join('.')\n}\n\n/**\n * This will merge a changeset into the local storage.\n * This function ignores folder-level deletes and overwrites,\n * but those can't happen under the current rules anyhow.\n */\nfunction mergeChanges (store, changes) {\n  Object.keys(changes).forEach(function (key) {\n    var path = pathFix(key);\n    if (path != null) {\n      store.setJson(path, changes[key]);\n    }\n  });\n}\n\n/**\n * Creates an ID string from a repo's dataKey.\n */\nfunction repoId (dataKey) {\n  return base58.stringify(hmacSha256(dataKey, dataKey))\n}\n\n/**\n * Creates a data storage and syncing object.\n * The data inside the repo is encrypted with `dataKey`.\n */\nfunction Repo (io, dataKey, syncKey) {\n  this.io = io;\n  this.dataKey = dataKey;\n  this.syncKey = syncKey;\n\n  var prefix = 'airbitz.repo.' + repoId(dataKey);\n  this.store = new ScopedStorage(io.localStorage, prefix);\n  this.changeStore = this.store.subStore('changes');\n  this.dataStore = this.store.subStore('data');\n}\n\n/**\n * Creates a secure file name by hashing\n * the provided binary data with the repo's dataKey.\n */\nRepo.prototype.secureFilename = function (data) {\n  return base58.stringify(hmacSha256(data, this.dataKey))\n};\n\n/**\n * Decrypts and returns the file at the given path.\n * The return value will either be a byte buffer or null.\n */\nRepo.prototype.getData = function (path) {\n  path = pathSplit(path).join('.');\n\n  var box =\n    this.changeStore.getJson(path) ||\n    this.dataStore.getJson(path);\n  return box ? decrypt(box, this.dataKey) : null\n};\n\n/**\n * Decrypts and returns the file at the given path,\n * treating the contents as text.\n */\nRepo.prototype.getText = function (path) {\n  var data = this.getData(path);\n  if (data == null) {\n    return null\n  }\n  // Due to a legacy bug, some Airbitz data contains trailing nulls:\n  if (data.length && data[data.length - 1] === 0) {\n    data = data.slice(0, data.length - 1);\n  }\n  return utf8.stringify(data)\n};\n\n/**\n * Decrypts and returns the file at the given path,\n * treating the contents as JSON.\n */\nRepo.prototype.getJson = function (path) {\n  var text = this.getText(path);\n  return text == null ? null : JSON.parse(text)\n};\n\n/**\n * Lists the files (not folders) contained in the given path.\n */\nRepo.prototype.keys = function (path) {\n  path = path ? pathSplit(path).join('.') + '.' : '';\n  var search = new RegExp('^' + path + '([^\\\\.]+)$');\n  function filter (key) {\n    return search.test(key)\n  }\n  function strip (key) {\n    return key.replace(search, '$1')\n  }\n\n  var changeKeys = this.changeStore.keys().filter(filter).map(strip);\n  var dataKeys = this.dataStore.keys().filter(filter).map(strip);\n  var keys = changeKeys.concat(dataKeys);\n\n  // Remove duplicates:\n  return keys.sort().filter(function (item, i, array) {\n    return !i || item !== array[i - 1]\n  })\n};\n\n/**\n * Deletes a particular file path.\n */\nRepo.prototype.removeItem = function (path) {\n  this.set(path, null);\n};\n\n/**\n * Encrypts a value and saves it at the provided file path.\n * The value must be either a byte buffer or null.\n */\nRepo.prototype.setData = function (path, value) {\n  if (/\\./.test(path)) {\n    throw new Error('Dots are not allowed in paths')\n  }\n  path += '.json';\n\n  var changes = {};\n  changes[path] = value ? encrypt(this.io, value, this.dataKey) : null;\n  mergeChanges(this.changeStore, changes);\n};\n\n/**\n * Encrypts a text string and saves it as the provided file path.\n */\nRepo.prototype.setText = function (path, value) {\n  return this.setData(path, utf8.parse(value))\n};\n\n/**\n * Encrypts a JSON object and saves it as the provided file path.\n */\nRepo.prototype.setJson = function (path, value) {\n  return this.setText(path, JSON.stringify(value))\n};\n\n/**\n * Synchronizes the local store with the remote server.\n */\nRepo.prototype.sync = function () {\n  var this$1 = this;\n\n  var self = this;\n\n  // If we have local changes, we need to bundle those:\n  var request = {};\n  var changeKeys = this.changeStore.keys();\n  if (changeKeys.length > 0) {\n    request.changes = {};\n    changeKeys.forEach(function (key) {\n      var path = key.replace(/\\./g, '/') + '.json';\n      request.changes[path] = this$1.changeStore.getJson(key);\n    });\n  }\n\n  // Calculate the URI:\n  var uri = '/api/v2/store/' + base16.stringify(this.syncKey);\n  var lastHash = this.store.getItem('lastHash');\n  if (lastHash != null) {\n    uri = uri + '/' + lastHash;\n  }\n\n  // Make the request:\n  return syncRequest(this.io, request.changes ? 'POST' : 'GET', uri, request).then(function (reply) {\n    var changed = false;\n\n    // Delete any changed keys (since the upload is done):\n    changeKeys.forEach(function (key) {\n      self.changeStore.removeItem(key);\n    });\n\n    // Process the change list:\n    var changes = reply['changes'];\n    if (changes != null) {\n      if (Object.keys(changes).length > 0) {\n        changed = true;\n      }\n      mergeChanges(self.dataStore, changes);\n    }\n\n    // Save the current hash:\n    var hash = reply['hash'];\n    if (hash != null) {\n      self.store.setItem('lastHash', hash);\n    }\n\n    return changed\n  })\n};\n\nfunction Wallet (type, keysJson) {\n  this.type = type;\n  this.keys = keysJson;\n}\n\nfunction walletType (walletJson) {\n  return walletJson['type'] || 'wallet:repo:bitcoin:bip32'\n}\n\nfunction walletKeys (walletJson) {\n  return walletJson['keys'] || {\n    dataKey: walletJson['MK'],\n    syncKey: walletJson['SyncKey'],\n    bitcoinKey: walletJson['BitcoinSeed']\n  }\n}\n\nfunction walletId (walletJson) {\n  return repoId(base16.parse(walletKeys(walletJson)['dataKey']))\n}\n\n/**\n * An list of wallets stored in a repo.\n * Uses a write-through cache to avoid repeated encryption and decryption.\n */\nfunction WalletList (repo, folder) {\n  this.folder = folder || 'Wallets';\n  this.repo = repo;\n\n  this.wallets = {};\n  this.load();\n}\n\n/**\n * Loads the list of wallets into the cache.\n */\nWalletList.prototype.load = function () {\n  var this$1 = this;\n\n  this.repo.keys(this.folder).forEach(function (key) {\n    var walletJson = this$1.repo.getJson(this$1.folder + '/' + key);\n    this$1.wallets[walletId(walletJson)] = walletJson;\n  });\n};\n\n/**\n * Lists the wallets id's in the repo, sorted by index.\n */\nWalletList.prototype.listIds = function () {\n  var this$1 = this;\n\n  // Load the ids and their sort indices:\n  var ids = [];\n  var indices = {};\n  Object.keys(this.wallets).forEach(function (id) {\n    ids.push(id);\n    indices[id] = this$1.wallets[id]['SortIndex'];\n  });\n\n  // Do the sort:\n  return ids.sort(function (a, b) {\n    return indices[a] < indices[b]\n  })\n};\n\n/**\n * Returns the type of a particular wallet.\n */\nWalletList.prototype.getType = function (id) {\n  var walletJson = this.wallets[id];\n  if (!walletJson) { throw new Error('No such wallet ' + id) }\n\n  return walletType(walletJson)\n};\n\n/**\n * Obtains the keys JSON for a particular wallet.\n */\nWalletList.prototype.getKeys = function (id) {\n  var walletJson = this.wallets[id];\n  if (!walletJson) { throw new Error('No such wallet ' + id) }\n\n  return walletKeys(walletJson)\n};\n\n/**\n * Inserts a wallet into the list.\n * @param type: The data type for the wallet, like 'wallet:repo:bitcoin.bip32'\n * @param keys: A JSON object with arbitrary keys to the wallet.\n * This will typically include `dataKey`, `syncKey`,\n * and some type of crytpocurrency key.\n */\nWalletList.prototype.addWallet = function (type, keysJson) {\n  var walletJson = {\n    'type': type,\n    'keys': keysJson,\n    'Archived': false,\n    'SortIndex': 0\n  };\n\n  var dataKey = base16.parse(keysJson['dataKey']);\n  var filename = this.repo.secureFilename(dataKey);\n  this.repo.setJson(this.folder + '/' + filename, walletJson);\n\n  var id = walletId(walletJson);\n  this.wallets[id] = walletJson;\n  return id\n};\n\n/**\n * This is a thin shim object,\n * which wraps the core implementation in a more OOP-style API.\n */\nfunction Account (ctx, login$$1) {\n  this.io = ctx.io;\n  this.login = login$$1;\n  this.keys = login$$1.accountFind(ctx.accountType);\n  this.repoInfo = this.keys; // Deprecated name\n  this.loggedIn = true;\n  this.edgeLogin = false;\n  this.pinLogin = false;\n  this.passwordLogin = false;\n  this.newAccount = false;\n  this.recoveryLogin = false;\n  this.username = login$$1.username;\n\n  this.repo = new Repo(this.io, base16.parse(this.keys.dataKey), base16.parse(this.keys.syncKey));\n  this.walletList = new WalletList(this.repo);\n}\n\nAccount.prototype.logout = function () {\n  this.login = null;\n  this.loggedIn = false;\n};\n\nAccount.prototype.passwordOk = nodeify(function (password) {\n  return check(this.io, this.login, password)\n});\nAccount.prototype.checkPassword = Account.prototype.passwordOk;\n\nAccount.prototype.passwordSetup = nodeify(function (password) {\n  return setup(this.io, this.login, password)\n});\nAccount.prototype.changePassword = Account.prototype.passwordSetup;\n\nAccount.prototype.pinSetup = nodeify(function (pin) {\n  return setup$1(this.io, this.login, pin)\n});\nAccount.prototype.changePIN = Account.prototype.pinSetup;\n\nAccount.prototype.recovery2Set = nodeify(function (questions$$1, answers) {\n  return setup$2(this.io, this.login, questions$$1, answers)\n});\n\nAccount.prototype.setupRecovery2Questions = Account.prototype.recovery2Set;\n\nAccount.prototype.isLoggedIn = function () {\n  return this.loggedIn\n};\n\nAccount.prototype.sync = nodeify(function () {\n  var this$1 = this;\n\n  return this.repo.sync().then(function (changed) {\n    if (changed) {\n      this$1.walletList.load();\n    }\n    return changed\n  })\n});\n\nAccount.prototype.listWalletIds = function () {\n  return this.walletList.listIds()\n};\n\nAccount.prototype.getWallet = function (id) {\n  return new Wallet(this.walletList.getType(id), this.walletList.getKeys(id))\n};\n\n/**\n * Gets the first wallet in an account (the first by sort order).\n * If type is a string, finds the first wallet with the same type.\n * Might return null if there are no wallets.\n */\nAccount.prototype.getFirstWallet = function (type) {\n  var this$1 = this;\n\n  var id = this.walletList.listIds().find(\n    function (id) { return type == null || this$1.walletList.getType(id) === type; }\n  );\n  return id ? this.getWallet(id) : null\n};\n\n/**\n * Creates a new wallet repo, and attaches it to the account.\n * @param keysJson An object with any user-provided keys\n * that should be stored along with the wallet. For example,\n * Airbitz Bitcoin wallets would place their `bitcoinKey` here.\n */\nAccount.prototype.createWallet = nodeify(function (type, keysJson) {\n  var this$1 = this;\n\n  return repoCreate(this.io, this.login, keysJson).then(function (keysJson) {\n    var id = this$1.walletList.addWallet(type, keysJson);\n    return this$1.sync().then(function (dirty) {\n      return repoActivate(this$1.io, this$1.login, keysJson).then(function () { return id; })\n    })\n  })\n});\n\n/**\n * Merges the keys from several objects into one.\n * Can also be used to copy a single object.\n */\nfunction mergeObjects () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  var out = {};\n\n  args.forEach(function (arg) {\n    Object.keys(arg).forEach(function (key) {\n      out[key] = arg[key];\n    });\n  });\n\n  return out\n}\n\n/**\n * Determines whether or not a username is available.\n */\nfunction usernameAvailable (io, username) {\n  return io.loginStore.getUserId(username).then(function (userId) {\n    var request = {\n      'l1': base64.stringify(userId)\n    };\n    return io.authRequest('POST', '/v1/account/available', request)\n  })\n}\n\n/**\n * Creates a new login on the auth server.\n */\nfunction create (io, username, password, opts) {\n  // Create account repo info:\n  var dataKey = io.random(32);\n  var syncKey = opts.syncKey || io.random(20);\n  var syncKeyBox = encrypt(io, syncKey, dataKey);\n\n  return Promise.all([\n    io.loginStore.getUserId(username),\n    makeSetup(io, dataKey, username, password)\n  ]).then(function (values) {\n    var userId = values[0];\n    var passwordSetup = values[1];\n\n    // Package:\n    var carePackage = {\n      'SNRP2': passwordSetup.server.passwordKeySnrp\n    };\n    var loginPackage = {\n      'EMK_LP2': passwordSetup.server.passwordBox,\n      'ESyncKey': syncKeyBox,\n      'ELP1': passwordSetup.server.passwordAuthBox\n    };\n    var request = {\n      'l1': base64.stringify(userId),\n      'lp1': passwordSetup.server.passwordAuth,\n      'care_package': JSON.stringify(carePackage),\n      'login_package': JSON.stringify(loginPackage),\n      'repo_account_key': base16.stringify(syncKey)\n    };\n    var loginData = mergeObjects({\n      username: fixUsername(username), syncKeyBox: syncKeyBox\n    }, passwordSetup.storage);\n\n    return io.authRequest('POST', '/v1/account/create', request).then(function (reply) {\n      // Cache everything for future logins:\n      io.loginStore.update(userId, loginData);\n\n      var login$$1 = Login.offline(io, username, userId, dataKey);\n\n      // Now activate:\n      var auth = login$$1.authJson();\n      var request = {\n        l1: auth.userId,\n        lp1: auth.passwordAuth\n      };\n      return io.authRequest('POST', '/v1/account/activate', request).then(function (reply) { return login$$1; })\n    })\n  })\n}\n\nvar EllipticCurve = elliptic.ec;\nvar secp256k1 = new EllipticCurve('secp256k1');\n\nfunction ABCEdgeLoginRequest (id) {\n  this.id = id;\n  this.done_ = false;\n}\n\nABCEdgeLoginRequest.prototype.cancelRequest = function () {\n  this.done_ = true;\n};\n\n/**\n * Creates a new login object, and attaches the account repo info to it.\n */\nfunction createLogin (io, accountReply) {\n  var username = accountReply.username + '-' + base58.stringify(io.random(4));\n  var password = base58.stringify(io.random(24));\n  var pin = accountReply.pinString;\n\n  var opts = {};\n  if (accountReply.type === 'account:repo:co.airbitz.wallet') {\n    opts.syncKey = base16.parse(accountReply.info['syncKey']);\n  }\n\n  return create(io, username, password, opts).then(function (login$$1) {\n    return login$$1.accountAttach(io, accountReply.type, accountReply.info).then(function () {\n      if (typeof pin === 'string' && pin.length === 4) {\n        if (getKey(io, username) == null) {\n          return setup$1(io, login$$1, pin).then(function () { return login$$1; }, function () { return login$$1; })\n        }\n      }\n      return login$$1\n    })\n  })\n}\n\n/**\n * Opens a lobby object to determine if it contains a resolved account request.\n * Returns the account info if so, or null otherwise.\n */\nfunction decodeAccountReply (keys, lobby) {\n  var accountRequest = lobby['accountRequest'];\n  var replyBox = accountRequest['replyBox'];\n  var replyKey = accountRequest['replyKey'];\n\n  // If the reply is missing, just return false:\n  if (replyBox == null || replyKey == null) {\n    return null\n  }\n\n  var replyPubkey = secp256k1.keyFromPublic(replyKey, 'hex').getPublic();\n  var secret = keys.derive(replyPubkey).toArray('be');\n  var dataKey = hmacSha256('dataKey', new Uint8Array(secret));\n  var reply = JSON.parse(utf8.stringify(decrypt(replyBox, dataKey)));\n\n  var returnObj = {\n    type: accountRequest['type'],\n    info: reply['keys'] || reply['info'],\n    username: reply['username']\n  };\n  if (typeof reply.pinString === 'string') {\n    returnObj.pinString = reply['pinString'];\n  }\n\n  return returnObj\n}\n\n/**\n * Polls the lobby every second or so,\n * looking for a reply to our account request.\n */\nfunction pollServer (io, edgeLogin, keys, onLogin, onProcessLogin) {\n  // Don't do anything if the user has cancelled this request:\n  if (edgeLogin.done_) {\n    return\n  }\n\n  setTimeout(function () {\n    io.authRequest('GET', '/v2/lobby/' + edgeLogin.id, '').then(function (reply) {\n      var accountReply = decodeAccountReply(keys, reply);\n      if (accountReply == null) {\n        return pollServer(io, edgeLogin, keys, onLogin, onProcessLogin)\n      }\n      if (onProcessLogin != null) {\n        onProcessLogin(accountReply.username);\n      }\n      return createLogin(io, accountReply).then(\n        function (login$$1) { return onLogin(null, login$$1); }, function (e) { return onLogin(e); }\n      )\n    }).catch(function (e) {\n      return onLogin(e)\n    });\n  }, 1000);\n}\n\n/**\n * Creates a new account request lobby on the server.\n */\nfunction create$1 (io, opts) {\n  var keys = secp256k1.genKeyPair({entropy: io.random(32)});\n\n  var data = {\n    'accountRequest': {\n      'displayName': opts['displayName'] || '',\n      'requestKey': keys.getPublic().encodeCompressed('hex'),\n      'type': opts.type\n    }\n  };\n\n  if (typeof opts.displayImageUrl === 'string') {\n    data.accountRequest.displayImageUrl = opts.displayImageUrl;\n  } else {\n    data.accountRequest.displayImageUrl = '';\n  }\n\n  var request = {\n    'expires': 300,\n    'data': data\n  };\n\n  return io.authRequest('POST', '/v2/lobby', request).then(function (reply) {\n    var edgeLogin = new ABCEdgeLoginRequest(reply.id);\n    var onProcessLogin = null;\n    if (opts.onProcessLogin != null) {\n      onProcessLogin = opts.onProcessLogin;\n    }\n    pollServer(io, edgeLogin, keys, opts.onLogin, onProcessLogin);\n    return edgeLogin\n  })\n}\n\n/**\n * @param opts An object containing optional arguments.\n */\nfunction Context (io, opts) {\n  this.io = io;\n  this.accountType = opts.accountType || 'account:repo:co.airbitz.wallet';\n}\n\nContext.prototype.usernameList = function () {\n  return this.io.loginStore.listUsernames()\n};\nContext.prototype.listUsernames = Context.prototype.usernameList;\n\nContext.prototype.fixUsername = fixUsername;\n\nContext.prototype.removeUsername = function (username) {\n  this.io.loginStore.remove({username: username});\n};\n\nContext.prototype.usernameAvailable = nodeify(function (username) {\n  return usernameAvailable(this.io, username)\n});\n\n/**\n * Creates a login, then creates and attaches an account to it.\n */\nContext.prototype.createAccount = nodeify(function (username, password, pin) {\n  var this$1 = this;\n\n  return create(this.io, username, password, {}).then(function (login$$1) {\n    try {\n      login$$1.accountFind(this$1.accountType);\n    } catch (e) {\n      // If the login doesn't have the correct account type, add it first:\n      return login$$1.accountCreate(this$1.io, this$1.accountType).then(function () {\n        return setup$1(this$1.io, login$$1, pin).then(function () {\n          var account = new Account(this$1, login$$1);\n          account.newAccount = true;\n          return account.sync().then(function () { return account; })\n        })\n      })\n    }\n\n    // Otherwise, we have the correct account type, and can simply return:\n    return setup$1(this$1.io, login$$1, pin).then(function () {\n      var account = new Account(this$1, login$$1);\n      account.newAccount = true;\n      return account.sync().then(function () { return account; })\n    })\n  })\n});\n\nContext.prototype.loginWithPassword = nodeify(function (username, password, otp, opts) {\n  var this$1 = this;\n\n  return login(this.io, username, password).then(function (login$$1) {\n    var account = new Account(this$1, login$$1);\n    account.passwordLogin = true;\n    return account.sync().then(function () { return account; })\n  })\n});\n\nContext.prototype.pinExists = function (username) {\n  return getKey(this.io, username) != null\n};\nContext.prototype.pinLoginEnabled = function (username) {\n  return getKey(this.io, username) != null\n};\n\nContext.prototype.loginWithPIN = nodeify(function (username, pin) {\n  var this$1 = this;\n\n  var pin2Key = getKey(this.io, username);\n  if (pin2Key == null) {\n    throw new Error('No PIN set locally for this account')\n  }\n  return login$1(this.io, pin2Key, username, pin).then(function (login$$1) {\n    var account = new Account(this$1, login$$1);\n    account.pinLogin = true;\n    return account.sync().then(function () { return account; })\n  })\n});\n\nContext.prototype.getRecovery2Key = nodeify(function (username) {\n  var recovery2Key = getKey$1(this.io, username);\n  if (recovery2Key == null) {\n    return Promise.reject(new Error('No recovery key stored locally.'))\n  }\n  return Promise.resolve(recovery2Key)\n});\n\nContext.prototype.loginWithRecovery2 = nodeify(function (recovery2Key, username, answers, otp, options) {\n  var this$1 = this;\n\n  return login$2(this.io, recovery2Key, username, answers).then(function (login$$1) {\n    var account = new Account(this$1, login$$1);\n    account.recoveryLogin = true;\n    return account.sync().then(function () { return account; })\n  })\n});\n\nContext.prototype.fetchRecovery2Questions = nodeify(function (recovery2Key, username) {\n  return questions(this.io, recovery2Key, username)\n});\n\nContext.prototype.checkPasswordRules = function (password) {\n  var tooShort = password.length < 10;\n  var noNumber = password.match(/\\d/) == null;\n  var noUpperCase = password.match(/[A-Z]/) == null;\n  var noLowerCase = password.match(/[a-z]/) == null;\n  var extraLong = password.length >= 16;\n\n  return {\n    'tooShort': tooShort,\n    'noNumber': noNumber,\n    'noUpperCase': noUpperCase,\n    'noLowerCase': noLowerCase,\n    'passed': extraLong || !(tooShort || noNumber || noUpperCase || noLowerCase)\n  }\n};\n\nContext.prototype.requestEdgeLogin = nodeify(function (opts) {\n  var this$1 = this;\n\n  var onLogin = opts.onLogin;\n  opts.onLogin = function (err, login$$1) {\n    if (err) { return onLogin(err) }\n    var account = new Account(this$1, login$$1);\n    account.edgeLogin = true;\n    account.sync().then(function (dirty) { return onLogin(null, account); }, function (err) { return onLogin(err); });\n  };\n  opts.type = opts.type || this.accountType;\n  return create$1(this.io, opts)\n});\n\nContext.prototype.listRecoveryQuestionChoices = nodeify(function () {\n  return listRecoveryQuestionChoices(this)\n});\n\n/*\n * These are errors the core knows about.\n *\n * The GUI should handle these errors in an \"intelligent\" way, such as by\n * displaying a localized error message or asking the user for more info.\n * All these errors have a `type` field, which the GUI can use to select\n * the appropriate response.\n *\n * Other errors are possible, of course, since the Javascript language\n * itself can generate exceptions. Those errors won't have a `type` field,\n * and the GUI should just show them with a stack trace & generic message,\n * since the program has basically crashed at that point.\n */\n\n/**\n * Creates an error constructor with the given type and default message.\n */\nfunction defineError (type, defaultMessage) {\n  var f = function ConstructError (message) {\n    var e = new Error(message || defaultMessage);\n    e.type = type;\n    return e\n  };\n  f.type = type;\n  return f\n}\n\n/**\n * Could not reach the server at all.\n */\nvar NetworkError =\n  defineError('NetworkError', 'Cannot reach the network');\n\n/**\n * The endpoint on the server is obsolete, and the app needs to be upgraded.\n */\nvar ObsoleteApiError =\n  defineError('ObsoleteApiError', 'The application is too old. Please upgrade.');\n\n/**\n * Cannot find a login with that id.\n *\n * Reasons could include:\n * - Password login: wrong username\n * - PIN login: wrong PIN key\n * - Recovery login: wrong username, or wrong recovery key\n */\nvar UsernameError =\n  defineError('UsernameError', 'Invaid username');\n\n/**\n * The provided authentication is incorrect.\n *\n * Reasons could include:\n * - Password login: wrong password\n * - PIN login: wrong PIN\n * - Recovery login: wrong answers\n *\n * The error object may include a `wait` member,\n * which is the number of seconds the user must wait before trying again.\n */\nfunction PasswordError (resultsJson, message) {\n  if ( resultsJson === void 0 ) resultsJson = {};\n\n  var e = new Error(message || 'Invalid password');\n  e.type = PasswordError.name;\n  e.wait = resultsJson['wait_seconds'];\n  return e\n}\nPasswordError.type = PasswordError.name;\n\n/**\n * The OTP token was missing / incorrect.\n *\n * The error object should include a `resetToken` member,\n * which can be used to reset OTP protection on the account.\n *\n * The error object may include a `resetDate` member,\n * which indicates that an OTP reset is already pending,\n * and when it will complete.\n */\nfunction OtpError (resultsJson, message) {\n  if ( resultsJson === void 0 ) resultsJson = {};\n\n  var e = new Error(message || 'Invalid OTP token');\n  e.type = OtpError.name;\n  e.resetToken = resultsJson['otp_reset_auth'];\n  if (resultsJson.otp_timeout_date != null) {\n    e.resetDate = new Date(resultsJson.otp_timeout_date);\n  }\n  return e\n}\nOtpError.type = OtpError.name;\n\n/**\n * Waits for the first successful promise.\n * If no promise succeeds, returns the last failure.\n */\n\n\n/**\n * If the promise doesn't resolve in the given time,\n * reject it with the provided error, or a generic error if none is provided.\n */\nfunction timeout (promise, ms, error) {\n  error = error || new Error((\"Timeout of \" + ms + \"ms exceeded\"));\n  return Promise.race([\n    promise,\n    new Promise(function (resolve, reject) {\n      var timer = setTimeout(function () { return reject(error); }, ms);\n      var onDone = function () { return clearTimeout(timer); };\n      promise.then(onDone, onDone);\n    })\n  ])\n}\n\nvar serverRoot = 'https://auth.airbitz.co/api';\n// const serverRoot = 'https://test-auth.airbitz.co/api'\n\nfunction parseReply (json) {\n  switch (json['status_code']) {\n    case 0: // Success\n      return json['results']\n\n    case 2: // Account exists\n      throw new UsernameError('Account already exists on server')\n\n    case 3: // Account does not exist\n      throw new UsernameError('Account does not exist on server')\n\n    case 4: // Invalid password\n    case 5: // Invalid answers\n      throw new PasswordError(json['results'])\n\n    case 6: // Invalid API key\n      throw new Error('Invalid API key')\n\n    case 8: // Invalid OTP\n      throw new OtpError(json['results'])\n\n    case 1000: // Endpoint obsolete\n      throw new ObsoleteApiError()\n\n    case 1: // Error\n    case 7: // Pin expired\n    default:\n      var message = json['message'] || json['detail'] || JSON.stringify(json);\n      throw new Error((\"Server error: \" + message))\n  }\n}\n\nvar AuthServer = function AuthServer (io, apiKey) {\n  // if (!apiKey) throw new TypeError('No API key provided')\n\n  this.io = io;\n  this.apiKey = apiKey;\n};\n\n/**\n * Wraps the raw `fetch` API with the headers and error processing needed\n * to talk to the auth server.\n * @param body JSON object to send\n * @return a promise of the server's JSON reply\n */\nAuthServer.prototype.request = function request (method, uri, body) {\n  var opts = {\n    method: method,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Token ' + this.apiKey\n    }\n  };\n  if (method !== 'GET') {\n    opts.body = JSON.stringify(body);\n  }\n\n  this.io.log.info((\"auth: \" + method + \" \" + uri));\n  return timeout(this.io.fetch(serverRoot + uri, opts).then(function (response) {\n    return response.json().then(parseReply, function (jsonError) {\n      throw new Error('Non-JSON reply, HTTP status ' + response.status)\n    })\n  }, function (networkError) {\n    throw new NetworkError('Could not reach the auth server')\n  }), 10000, new NetworkError('Could not reach the auth server: timeout'))\n};\n\n/**\n * Constructs an object containing the io resources used in this library,\n * along with the wrappers and caches needed to make use of them.\n */\nvar IoContext = function IoContext (nativeIo, opts) {\n  var this$1 = this;\n  if ( opts === void 0 ) opts = {};\n\n  // Copy native io resources:\n  var keys = ['console', 'fetch', 'localStorage', 'random'];\n  keys.forEach(function (key) {\n    if (opts[key] != null) {\n      this$1[key] = opts[key];\n    } else if (nativeIo[key] != null) {\n      this$1[key] = nativeIo[key];\n    } else {\n      throw new Error((\"Could not find \\\"\" + key + \"\\\" in the environment\"))\n    }\n  });\n\n  // Set up wrapper objects:\n  this.authServer = new AuthServer(this, opts.apiKey);\n  this.log = this.console;\n  this.loginStore = new LoginStore(this);\n};\n\nIoContext.prototype.authRequest = function authRequest () {\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n  return (ref = this.authServer).request.apply(ref, rest)\n    var ref;\n};\n\n/**\n * Extracts the io functions we need from the browser.\n */\nfunction makeBrowserIo (opts) {\n  if ( opts === void 0 ) opts = {};\n\n  var native = {};\n\n  if (typeof console !== 'undefined') {\n    native.console = console;\n  }\n\n  if (typeof window !== 'undefined') {\n    native.fetch = function () {\n      var rest = [], len = arguments.length;\n      while ( len-- ) rest[ len ] = arguments[ len ];\n\n      return window.fetch.apply(window, rest);\n    };\n    native.localStorage = window.localStorage;\n\n    if (window.crypto != null && window.crypto.getRandomValues != null) {\n      native.random = function (size) {\n        var out = new Uint8Array(size);\n        window.crypto.getRandomValues(out);\n        return out\n      };\n    }\n  }\n\n  return new IoContext(native, opts)\n}\n\nvar routes = [];\n\n/**\n * Wires one or more handlers into the routing table.\n */\nfunction addRoute (method, path) {\n  var handlers = [], len = arguments.length - 2;\n  while ( len-- > 0 ) handlers[ len ] = arguments[ len + 2 ];\n\n  handlers.forEach(function (handler) {\n    routes.push({\n      method: method,\n      path: new RegExp((\"^\" + path + \"$\")),\n      handler: handler\n    });\n  });\n}\n\n/**\n * Finds all matching handlers in the routing table.\n */\nfunction findRoute (method, path) {\n  return routes.filter(function (route) {\n    return route.method === method && route.path.test(path)\n  }).map(function (route) { return route.handler; })\n}\n\nvar errorCodes = {\n  success: 0,\n  error: 1,\n  accountExists: 2,\n  noAccount: 3,\n  invalidPassword: 4,\n  invalidAnswers: 5,\n  invalidApiKey: 6,\n  invalidOtp: 8,\n  conflict: 10,\n  obsolete: 1000\n};\n\nvar FakeResponse = function FakeResponse (body, opts) {\n  if ( body === void 0 ) body = '';\n  if ( opts === void 0 ) opts = {};\n\n  this.body = body;\n  this.status = opts.status || 200;\n  this.statusText = opts.statusText || 'OK';\n  this.ok = this.status >= 200 && this.status < 300;\n};\n\nFakeResponse.prototype.json = function json () {\n  try {\n    return Promise.resolve(JSON.parse(this.body))\n  } catch (e) {\n    return Promise.reject(e)\n  }\n};\n\nFakeResponse.prototype.text = function text () {\n  return Promise.resolve(this.body)\n};\n\nfunction makeResponse (results) {\n  var reply = {\n    'status_code': 0\n  };\n  if (results != null) {\n    reply['results'] = results;\n  }\n  return new FakeResponse(JSON.stringify(reply))\n}\n\nfunction makeErrorResponse (code, message, status) {\n  if ( message === void 0 ) message = '';\n  if ( status === void 0 ) status = 500;\n\n  var body = {\n    status_code: code,\n    message: message || 'Server error'\n  };\n  return new FakeResponse(JSON.stringify(body), {status: status})\n}\n\n// Authentication middleware: ----------------------------------------------\n\n/**\n * Verifies that the request contains valid v1 authenticaion.\n */\nfunction authHandler1 (req) {\n  // Password login:\n  if (req.body.l1 != null && req.body.lp1 != null) {\n    if (req.body.l1 !== this.db.userId) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    if (req.body.lp1 !== this.db.passwordAuth) {\n      return makeErrorResponse(errorCodes.invalidPassword)\n    }\n    return null\n  }\n  return makeErrorResponse(errorCodes.error)\n}\n\n/**\n * Verifies that the request contains valid v2 authenticaion.\n */\nfunction authHandler (req) {\n  // Password login:\n  if (req.body.userId != null && req.body.passwordAuth != null) {\n    if (req.body.userId !== this.db.userId) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    if (req.body.passwordAuth !== this.db.passwordAuth) {\n      return makeErrorResponse(errorCodes.invalidPassword)\n    }\n    return null\n  }\n\n  // PIN2 login:\n  if (req.body.pin2Id != null && req.body.pin2Auth != null) {\n    if (req.body.pin2Id !== this.db.pin2Id) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    if (req.body.pin2Auth !== this.db.pin2Auth) {\n      return makeErrorResponse(errorCodes.invalidPassword)\n    }\n    return null\n  }\n\n  // Recovery2 login:\n  if (req.body.recovery2Id != null && req.body.recovery2Auth != null) {\n    if (req.body.recovery2Id !== this.db.recovery2Id) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    var serverAuth = this.db.recovery2Auth;\n    var clientAuth = req.body.recovery2Auth;\n    if (clientAuth.length !== serverAuth.length) {\n      return makeErrorResponse(errorCodes.invalidAnswers)\n    }\n    for (var i = 0; i < clientAuth.length; ++i) {\n      if (clientAuth[i] !== serverAuth[i]) {\n        return makeErrorResponse(errorCodes.invalidAnswers)\n      }\n    }\n    return null\n  }\n  return makeErrorResponse(errorCodes.error)\n}\n\n// Account lifetime v1: ----------------------------------------------------\n\naddRoute('POST', '/api/v1/account/available', function (req) {\n  if (req.body.l1 != null && req.body.l1 === this.db.userId) {\n    return makeErrorResponse(errorCodes.accountExists)\n  }\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v1/account/create', function (req) {\n  this.db.userId = req.body['l1'];\n  this.db.passwordAuth = req.body['lp1'];\n\n  var carePackage = JSON.parse(req.body['care_package']);\n  this.db.passwordKeySnrp = carePackage['SNRP2'];\n\n  var loginPackage = JSON.parse(req.body['login_package']);\n  this.db.passwordAuthBox = loginPackage['ELP1'];\n  this.db.passwordBox = loginPackage['EMK_LP2'];\n  this.db.syncKeyBox = loginPackage['ESyncKey'];\n  this.repos[req.body['repo_account_key']] = {};\n\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v1/account/activate', authHandler1, function (req) {\n  return makeResponse()\n});\n\n// Login v1: ---------------------------------------------------------------\n\naddRoute('POST', '/api/v1/account/carepackage/get', function (req) {\n  if (req.body.l1 == null || req.body.l1 !== this.db.userId) {\n    return makeErrorResponse(errorCodes.noAccount)\n  }\n\n  return makeResponse({\n    'care_package': JSON.stringify({\n      'SNRP2': this.db.passwordKeySnrp\n    })\n  })\n});\n\naddRoute('POST', '/api/v1/account/loginpackage/get', authHandler1, function (req) {\n  var results = {\n    'login_package': JSON.stringify({\n      'ELP1': this.db.passwordAuthBox,\n      'EMK_LP2': this.db.passwordBox,\n      'ESyncKey': this.db.syncKeyBox\n    })\n  };\n  if (this.db.rootKeyBox != null) {\n    results['rootKeyBox'] = this.db.rootKeyBox;\n  }\n  return makeResponse(results)\n});\n\n// PIN login v1: -----------------------------------------------------------\n\naddRoute('POST', '/api/v1/account/pinpackage/update', authHandler1, function (req) {\n  this.db.pinKeyBox = JSON.parse(req.body['pin_package']);\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v1/account/pinpackage/get', function (req) {\n  if (this.db.pinKeyBox == null) {\n    return makeErrorResponse(errorCodes.noAccount)\n  }\n  return makeResponse({\n    'pin_package': JSON.stringify(this.db.pinKeyBox)\n  })\n});\n\n// Repo server v1: ---------------------------------------------------------\n\naddRoute('POST', '/api/v1/wallet/create', authHandler1, function (req) {\n  this.repos[req.body['repo_wallet_key']] = {};\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v1/wallet/activate', authHandler1, function (req) {\n  return makeResponse()\n});\n\n// login v2: ---------------------------------------------------------------\n\naddRoute('POST', '/api/v2/login', function (req) {\n  if (req.body.recovery2Id != null && req.body.recovery2Auth == null) {\n    if (req.body.recovery2Id !== this.db.recovery2Id) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    return makeResponse({\n      'question2Box': this.db.question2Box\n    })\n  }\n  return null\n}, authHandler, function (req) {\n  var this$1 = this;\n\n  var results = {};\n  var keys = [\n    'passwordAuthBox',\n    'passwordBox',\n    'passwordKeySnrp',\n    'pin2Box',\n    'pin2KeyBox',\n    'recovery2Box',\n    'recovery2KeyBox',\n    'rootKeyBox',\n    'syncKeyBox',\n    'repos'\n  ];\n  keys.forEach(function (key) {\n    if (key in this$1.db) {\n      results[key] = this$1.db[key];\n    }\n  });\n  return makeResponse(results)\n});\n\naddRoute('POST', '/api/v2/login/create', function (req) {\n  var this$1 = this;\n\n  var data = req.body['data'];\n\n  // Set up repos:\n  if (data.newSyncKeys != null) {\n    data.newSyncKeys.forEach(function (syncKey) {\n      this$1.repos[syncKey] = {};\n    });\n  }\n\n  // Set up login object:\n  var keys = [\n    'userId',\n    'passwordAuth',\n    'passwordAuthBox',\n    'passwordBox',\n    'passwordKeySnrp',\n    'pin2Auth',\n    'pin2Box',\n    'pin2Id',\n    'pin2KeyBox',\n    'question2Box',\n    'recovery2Auth',\n    'recovery2Box',\n    'recovery2Id',\n    'recovery2KeyBox',\n    'rootKeyBox',\n    'syncKeyBox',\n    'repos'\n  ];\n  keys.forEach(function (key) {\n    if (key in data) {\n      this$1.db[key] = data[key];\n    }\n  });\n\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v2/login/password', authHandler, function (req) {\n  var data = req.body['data'];\n  if (data.passwordAuth == null || data.passwordKeySnrp == null ||\n      data.passwordBox == null || data.passwordAuthBox == null) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  this.db.passwordAuth = data['passwordAuth'];\n  this.db.passwordKeySnrp = data['passwordKeySnrp'];\n  this.db.passwordBox = data['passwordBox'];\n  this.db.passwordAuthBox = data['passwordAuthBox'];\n\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v2/login/pin2', authHandler, function (req) {\n  var data = req.body['data'];\n  if (data.pin2Id == null || data.pin2Auth == null ||\n      data.pin2Box == null || data.pin2KeyBox == null) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  this.db.pin2Id = data['pin2Id'];\n  this.db.pin2Auth = data['pin2Auth'];\n  this.db.pin2Box = data['pin2Box'];\n  this.db.pin2KeyBox = data['pin2KeyBox'];\n\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v2/login/recovery2', authHandler, function (req) {\n  var data = req.body['data'];\n  if (data.recovery2Id == null || data.recovery2Auth == null ||\n      data.question2Box == null || data.recovery2Box == null ||\n      data.recovery2KeyBox == null) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  this.db.recovery2Id = data['recovery2Id'];\n  this.db.recovery2Auth = data['recovery2Auth'];\n  this.db.question2Box = data['question2Box'];\n  this.db.recovery2Box = data['recovery2Box'];\n  this.db.recovery2KeyBox = data['recovery2KeyBox'];\n\n  return makeResponse()\n});\n\naddRoute('POST', '/api/v2/login/repos', authHandler, function (req) {\n  var data = req.body['data'];\n  if (data.type == null || data.info == null) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  if (this.db.repos != null) {\n    this.db.repos.push(data);\n  } else {\n    this.db.repos = [data];\n  }\n\n  return makeResponse()\n});\n\n// lobby: ------------------------------------------------------------------\n\naddRoute('POST', '/api/v2/lobby', function (req) {\n  this.db.lobby = req.body['data'];\n  return makeResponse({\n    'id': 'IMEDGELOGIN'\n  })\n});\n\naddRoute('GET', '/api/v2/lobby/IMEDGELOGIN', function (req) {\n  return makeResponse(this.db.lobby)\n});\n\naddRoute('PUT', '/api/v2/lobby/IMEDGELOGIN', function (req) {\n  this.db.lobby = req.body['data'];\n  return makeResponse()\n});\n\n// sync: -------------------------------------------------------------------\n\nfunction storeRoute (req) {\n  var elements = req.path.split('/');\n  var syncKey = elements[4];\n  // const hash = elements[5]\n\n  var repo = this.repos[syncKey];\n  if (repo == null) {\n    return new FakeResponse('Cannot find repo ' + syncKey, {status: 404})\n  }\n\n  switch (req.method) {\n    case 'POST':\n      var changes = req.body['changes'];\n      Object.keys(changes).forEach(function (change) {\n        repo[change] = changes[change];\n      });\n      return new FakeResponse(JSON.stringify({\n        'changes': changes,\n        'hash': '1111111111111111111111111111111111111111'\n      }))\n\n    case 'GET':\n      return new FakeResponse(JSON.stringify({'changes': repo}))\n  }\n}\n\naddRoute('GET', '/api/v2/store/.*', storeRoute);\naddRoute('POST', '/api/v2/store/.*', storeRoute);\n\n/**\n * Emulates the Airbitz login server.\n */\nvar FakeServer = function FakeServer () {\n  var this$1 = this;\n\n  this.db = {};\n  this.repos = {};\n  this.fetch = function (uri, opts) {\n    if ( opts === void 0 ) opts = {};\n\n    try {\n      return Promise.resolve(this$1.request(uri, opts))\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  };\n};\n\nFakeServer.prototype.request = function request (uri, opts) {\n    var this$1 = this;\n\n  var req = {\n    method: opts.method || 'GET',\n    body: opts.body ? JSON.parse(opts.body) : null,\n    path: url.parse(uri).pathname\n  };\n\n  var handlers = findRoute(req.method, req.path);\n  for (var i = 0, list = handlers; i < list.length; i += 1) {\n    var handler = list[i];\n\n      var out = handler.call(this$1, req);\n    if (out != null) {\n      return out\n    }\n  }\n  return makeErrorResponse(errorCodes.error, (\"Unknown API endpoint \" + (req.path)), 404)\n};\n\n/**\n * Emulates the `localStorage` browser API.\n */\nfunction FakeStorage () {\n  this.items = {};\n}\nFakeStorage.prototype.getItem = function (key) {\n  return key in this.items ? this.items[key] : null\n};\nFakeStorage.prototype.setItem = function (key, value) {\n  this.items[key] = value;\n};\nFakeStorage.prototype.removeItem = function (key) {\n  delete this.items[key];\n};\nFakeStorage.prototype.key = function (n) {\n  return Object.keys(this.items)[n]\n};\nObject.defineProperty(FakeStorage.prototype, 'length', {\n  get: function () {\n    return Object.keys(this.items).length\n  }\n});\n\n/**\n * Empties the `FakeStorage` instance.\n */\nFakeStorage.prototype.clear = function () {\n  this.items = {};\n};\n\n/**\n * Silences all logging.\n */\nvar fakeConsole = {\n  info: function () {},\n  warn: function () {},\n  error: function () {}\n};\n\n/**\n * Generates deterministic \"random\" data for unit-testing.\n */\nfunction fakeRandom (bytes) {\n  var out = [];\n  var x = 0;\n  for (var i = 0; i < bytes; ++i) {\n    // Simplest numbers that give a full-period generator with\n    // a good mix of high & low values within the first few bytes:\n    x = ((5 * x) + 3) & 0xff;\n    out[i] = x;\n  }\n  return out\n}\n\n/**\n * Creates an array of io context objects.\n * Each object has its own storage, but all contexts share a server.\n * @param {number} count number of io contexts to create\n */\nfunction makeFakeIos (count, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  // The common server used by all contexts:\n  var server = new FakeServer();\n\n  // Make the io objects:\n  var out = [];\n  for (var i = 0; i < count; ++i) {\n    var native = {\n      console: fakeConsole,\n      fetch: server.fetch,\n      localStorage: new FakeStorage(),\n      random: fakeRandom\n    };\n    out[i] = new IoContext(native, opts);\n  }\n\n  return out\n}\n\nfunction makeNodeIo (path, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  var native = {\n    console: console,\n    fetch: fetch,\n    localStorage: new nodeLocalstorage.LocalStorage(path),\n    random: function (bytes) { return crypto.randomBytes(bytes); }\n  };\n\n  return new IoContext(native, opts)\n}\n\n/**\n * ABCConditionCode\n * Error codes for ABCError object\n */\n\nvar abcc = {\n  ABCConditionCodeOk: 0,\n  ABCConditionCodeError: 1,\n  ABCConditionCodeNULLPtr: 2,\n  ABCConditionCodeNoAvailAccountSpace: 3,\n  ABCConditionCodeDirReadError: 4,\n  ABCConditionCodeFileOpenError: 5,\n  ABCConditionCodeFileReadError: 6,\n  ABCConditionCodeFileWriteError: 7,\n  ABCConditionCodeFileDoesNotExist: 8,\n  ABCConditionCodeUnknownCryptoType: 9,\n  ABCConditionCodeInvalidCryptoType: 10,\n  ABCConditionCodeDecryptError: 11,\n  ABCConditionCodeDecryptFailure: 12,\n  ABCConditionCodeEncryptError: 13,\n  ABCConditionCodeScryptError: 14,\n  ABCConditionCodeAccountAlreadyExists: 15,\n  ABCConditionCodeAccountDoesNotExist: 16,\n  ABCConditionCodeJSONError: 17,\n  ABCConditionCodeBadPassword: 18,\n  ABCConditionCodeWalletAlreadyExists: 19,\n  ABCConditionCodeURLError: 20,\n  ABCConditionCodeSysError: 21,\n  ABCConditionCodeNotInitialized: 22,\n  ABCConditionCodeReinitialization: 23,\n  ABCConditionCodeServerError: 24,\n  ABCConditionCodeNoRecoveryQuestions: 25,\n  ABCConditionCodeNotSupported: 26,\n  ABCConditionCodeMutexError: 27,\n  ABCConditionCodeNoTransaction: 28,\n  ABCConditionCodeEmpty_Wallet: 28,\n  ABCConditionCodeParseError: 29,\n  ABCConditionCodeInvalidWalletID: 30,\n  ABCConditionCodeNoRequest: 31,\n  ABCConditionCodeInsufficientFunds: 32,\n  ABCConditionCodeSynchronizing: 33,\n  ABCConditionCodeNonNumericPin: 34,\n  ABCConditionCodeNoAvailableAddress: 35,\n  ABCConditionCodeInvalidPinWait: 36,\n  ABCConditionCodePinExpired: 36,\n  ABCConditionCodeInvalidOTP: 37,\n  ABCConditionCodeSpendDust: 38,\n  ABCConditionCodeObsolete: 1000\n};\n\n/**\n * ABCError\n *\n * Error structure returned in all ABC callbacks\n *   code: ABCConditionCode\n *   message: Error message\n *   message2 (optional):\n *   message3 (optional):\n */\n\nfunction errorMap (cc) {\n  if (cc === abcc.ABCConditionCodeOk) { return 'The function completed without an error' }\n  if (cc === abcc.ABCConditionCodeError) { return 'An error occured' }\n  if (cc === abcc.ABCConditionCodeNULLPtr) { return 'Unexpected NULL pointer' }\n  if (cc === abcc.ABCConditionCodeNoAvailAccountSpace) { return 'Max number of accounts have been created' }\n  if (cc === abcc.ABCConditionCodeDirReadError) { return 'Could not read directory' }\n  if (cc === abcc.ABCConditionCodeFileOpenError) { return 'Could not open file' }\n  if (cc === abcc.ABCConditionCodeFileReadError) { return 'Could not read from file' }\n  if (cc === abcc.ABCConditionCodeFileWriteError) { return 'Could not write to file' }\n  if (cc === abcc.ABCConditionCodeFileDoesNotExist) { return 'No such file' }\n  if (cc === abcc.ABCConditionCodeUnknownCryptoType) { return 'Unknown crypto type' }\n  if (cc === abcc.ABCConditionCodeInvalidCryptoType) { return 'Invalid crypto type' }\n  if (cc === abcc.ABCConditionCodeDecryptError) { return 'Decryption error' }\n  if (cc === abcc.ABCConditionCodeDecryptFailure) { return 'Decryption failure due to incorrect key' }\n  if (cc === abcc.ABCConditionCodeEncryptError) { return 'Encryption error' }\n  if (cc === abcc.ABCConditionCodeScryptError) { return 'Scrypt error' }\n  if (cc === abcc.ABCConditionCodeAccountAlreadyExists) { return 'Account already exists' }\n  if (cc === abcc.ABCConditionCodeAccountDoesNotExist) { return 'Account does not exist' }\n  if (cc === abcc.ABCConditionCodeJSONError) { return 'JSON parsing error' }\n  if (cc === abcc.ABCConditionCodeBadPassword) { return 'Incorrect password' }\n  if (cc === abcc.ABCConditionCodeWalletAlreadyExists) { return 'Wallet already exists' }\n  if (cc === abcc.ABCConditionCodeURLError) { return 'URL call failure' }\n  if (cc === abcc.ABCConditionCodeSysError) { return 'An call to an external API failed' }\n  if (cc === abcc.ABCConditionCodeNotInitialized) { return 'No required initialization made' }\n  if (cc === abcc.ABCConditionCodeReinitialization) { return 'Initialization after already initializing' }\n  if (cc === abcc.ABCConditionCodeServerError) { return 'Server error' }\n  if (cc === abcc.ABCConditionCodeNoRecoveryQuestions) { return 'The user has not set recovery questions' }\n  if (cc === abcc.ABCConditionCodeNotSupported) { return 'Functionality not supported' }\n  if (cc === abcc.ABCConditionCodeMutexError) { return 'Mutex error if some type' }\n  if (cc === abcc.ABCConditionCodeNoTransaction) { return 'Transaction not found' }\n  if (cc === abcc.ABCConditionCodeEmpty_Wallet) { return 'Wallet is Empty' }\n  if (cc === abcc.ABCConditionCodeParseError) { return 'Failed to parse input text' }\n  if (cc === abcc.ABCConditionCodeInvalidWalletID) { return 'Invalid wallet ID' }\n  if (cc === abcc.ABCConditionCodeNoRequest) { return 'Request (address) not found' }\n  if (cc === abcc.ABCConditionCodeInsufficientFunds) { return 'Not enough money to send transaction' }\n  if (cc === abcc.ABCConditionCodeSynchronizing) { return 'We are still sync-ing' }\n  if (cc === abcc.ABCConditionCodeNonNumericPin) { return 'Problem with the PIN' }\n  if (cc === abcc.ABCConditionCodeNoAvailableAddress) { return 'Unable to find an address' }\n  if (cc === abcc.ABCConditionCodeInvalidPinWait) { return 'The user has entered a bad PIN, and must wait.' }\n  if (cc === abcc.ABCConditionCodePinExpired) { return 'Server expired PIN. (Deprecated)' }\n  if (cc === abcc.ABCConditionCodeInvalidOTP) { return 'Two Factor required' }\n  if (cc === abcc.ABCConditionCodeSpendDust) { return 'Trying to send too little money.' }\n  if (cc === abcc.ABCConditionCodeObsolete) { return 'The server says app is obsolete and needs to be upgraded.' }\n  return null\n}\n\nfunction ABCErrorObject (code, message) {\n  this.code = code;\n  this.message = message;\n}\n\nfunction ABCError (code, message) {\n  var conditionCode = 1;\n  var msg = null;\n  var json = null;\n  if (code === null) {\n    return null\n  } else if (typeof code.message === 'string') {\n    try {\n      json = JSON.parse(code.message);\n      conditionCode = json.status_code;\n      msg = json.message;\n    } catch (e) {\n      conditionCode = 1;\n      msg = message;\n    }\n  } else if (typeof code === 'number') {\n    conditionCode = code;\n  } else {\n    conditionCode = 1;\n    msg = message;\n  }\n\n  if (msg === null) {\n    msg = errorMap(conditionCode);\n  }\n\n  if (msg === null) {\n    msg = message;\n  }\n  return new ABCErrorObject(conditionCode, msg)\n  // return {'code': conditionCode, 'message': msg}\n}\n\n/**\n * Initializes the Airbitz core library for use in a browser.\n * @return An Airbitz core library instance.\n */\nfunction makeBrowserContext (opts) {\n  if ( opts === void 0 ) opts = {};\n\n  return new Context(makeBrowserIo(opts), opts)\n}\n\n/**\n * Creates mock Airbitz contexts for use in unit tests.\n * All the contexts share a fake in-memory server,\n * so accounts created on one context can be loaded from another context.\n * This makes it possible to unit-test various peer-to-peer scenarios.\n * @return An Airbitz core library instance.\n */\nfunction makeFakeContexts (count, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  return makeFakeIos(count, opts).map(function (io) { return new Context(io, opts); })\n}\n\n/**\n * Initializes the Airbitz core library for use on node.js.\n * @param workDir The path to a directory where the core can save information.\n * @return An Airbitz core library instance.\n */\nfunction makeNodeContext (path, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  return new Context(makeNodeIo(path, opts), opts)\n}\n\nexports.makeBrowserContext = makeBrowserContext;\nexports.makeFakeContexts = makeFakeContexts;\nexports.makeNodeContext = makeNodeContext;\nexports.Context = Context;\nexports.makeABCContext = makeBrowserContext;\nexports.makeContext = makeBrowserContext;\nexports.makeRandomGenerator = makeRandomGenerator;\nexports.ABCConditionCode = abcc;\nexports.ABCError = ABCError;\nexports.usernameFix = fixUsername;\nexports.NetworkError = NetworkError;\nexports.ObsoleteApiError = ObsoleteApiError;\nexports.UsernameError = UsernameError;\nexports.PasswordError = PasswordError;\nexports.OtpError = OtpError;\n//# sourceMappingURL=abc.cjs.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/airbitz-core-js/dist/abc.cjs.js\n// module id = 1\n// module chunks = 0","// base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nmodule.exports = function base (ALPHABET) {\n  var ALPHABET_MAP = {}\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n\n  // pre-compute lookup table\n  for (var i = 0; i < ALPHABET.length; i++) {\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i\n  }\n\n  function encode (source) {\n    if (source.length === 0) return ''\n\n    var digits = [0]\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8\n        digits[j] = carry % BASE\n        carry = (carry / BASE) | 0\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE)\n        carry = (carry / BASE) | 0\n      }\n    }\n\n    var string = ''\n\n    // deal with leading zeros\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += ALPHABET[0]\n    // convert digits to a string\n    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]\n\n    return string\n  }\n\n  function decodeUnsafe (string) {\n    if (string.length === 0) return []\n\n    var bytes = [0]\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]]\n      if (value === undefined) return\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE\n        bytes[j] = carry & 0xff\n        carry >>= 8\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff)\n        carry >>= 8\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0)\n    }\n\n    return bytes.reverse()\n  }\n\n  function decode (string) {\n    var array = decodeUnsafe(string)\n    if (array) return array\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base-x/index.js\n// module id = 2\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 3\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 4\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 5\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/~/isarray/index.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\n(function(root) {\n\n    var createBuffer = null, copyBuffer = null, convertBytesToString, convertStringToBytes = null;\n\n    var slowCreateBuffer = function(arg) {\n\n        // Passed in a single number, the length to pre-allocate\n        if (typeof arg === 'number') {\n            var result = [];\n            for (var i = 0; i < arg; i++) {\n                result.push(0);\n            }\n            return result;\n\n        } else  {\n            // Make sure they are passing sensible data\n            for (var i = 0; i < arg.length; i++) {\n                if (arg[i] < 0 || arg[i] >= 256 || typeof arg[i] !== 'number') {\n                    throw new Error('invalid byte (' + arg[i] + ':' + i + ')');\n                }\n            }\n\n            // Most array-like things should support this\n            if (arg.slice) {\n                return arg.slice(0);\n            }\n\n            // Something *weird*; copy it into an array (see PR#2)\n            var result = [];\n            for (var i = 0; i < arg.length; i++) {\n                result.push(arg[i]);\n            }\n            return result;\n        }\n    }\n\n    if (typeof(Buffer) === 'undefined') {\n        createBuffer = slowCreateBuffer;\n\n        copyBuffer = function(sourceBuffer, targetBuffer, targetStart, sourceStart, sourceEnd) {\n            if (targetStart == null) { targetStart = 0; }\n            if (sourceStart == null) { sourceStart = 0; }\n            if (sourceEnd == null) { sourceEnd = sourceBuffer.length; }\n            for (var i = sourceStart; i < sourceEnd; i++) {\n                targetBuffer[targetStart++] = sourceBuffer[i];\n            }\n        }\n\n        convertStringToBytes = function(text, encoding) {\n\n            // \"utf8\", \"utf-8\", \"utf 8\", etc\n            if (encoding == null || encoding.toLowerCase().replace(/ |-/g, \"\") == 'utf8') {\n                var result = [], i = 0;\n                text = encodeURI(text);\n                while (i < text.length) {\n                    var c = text.charCodeAt(i++);\n\n                    // if it is a % sign, encode the following 2 bytes as a hex value\n                    if (c === 37) {\n                        result.push(parseInt(text.substr(i, 2), 16))\n                        i += 2;\n\n                    // otherwise, just the actual byte\n                    } else {\n                        result.push(c)\n                    }\n                }\n\n                return result;\n\n            // \"hex\"\n            } else if (encoding.toLowerCase() == 'hex') {\n                var result = [];\n                for (var i = 0; i < text.length; i += 2) {\n                    result.push(parseInt(text.substr(i, 2), 16));\n                }\n\n                return result;\n            }\n\n            // @TODO: Base64...\n\n            return null;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n        convertBytesToString = function(bytes, encoding) {\n\n            // \"utf8\", \"utf-8\", \"utf 8\", etc\n            if (encoding == null || encoding.toLowerCase().replace(/ |-/g, \"\") == 'utf8') {\n                var result = [], i = 0;\n\n                while (i < bytes.length) {\n                    var c = bytes[i];\n\n                    if (c < 128) {\n                        result.push(String.fromCharCode(c));\n                        i++;\n                    } else if (c > 191 && c < 224) {\n                        result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                        i += 2;\n                    } else {\n                        result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                        i += 3;\n                    }\n                }\n\n                return result.join('');\n\n            // \"hex\"\n            } else if (encoding.toLowerCase() == 'hex') {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n            }\n\n            return result\n        }\n\n    } else {\n        createBuffer = function(arg) { return new Buffer(arg); }\n\n        copyBuffer = function(sourceBuffer, targetBuffer, targetStart, sourceStart, sourceEnd) {\n            sourceBuffer.copy(targetBuffer, targetStart, sourceStart, sourceEnd);\n        }\n\n        convertStringToBytes = function(text, encoding) {\n            return new Buffer(text, encoding);\n        }\n\n        convertBytesToString = function(bytes, encoding) {\n            return (new Buffer(bytes)).toString(encoding);\n        }\n    }\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n\n\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.key = createBuffer(key);\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice(0);\n        }\n\n        // the last round is special\n        var result = createBuffer(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice(0);\n        }\n\n        // the last round is special\n        var result = createBuffer(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createBuffer(plaintext.length);\n        var block = createBuffer(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyBuffer(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyBuffer(block, ciphertext, i, 0, 16);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createBuffer(ciphertext.length);\n        var block = createBuffer(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyBuffer(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyBuffer(block, plaintext, i, 0, 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createBuffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = createBuffer(iv);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createBuffer(plaintext.length);\n        var block = createBuffer(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyBuffer(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyBuffer(this._lastCipherblock, ciphertext, i, 0, 16);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createBuffer(ciphertext.length);\n        var block = createBuffer(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyBuffer(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyBuffer(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createBuffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = createBuffer(iv);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = createBuffer(plaintext);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyBuffer(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyBuffer(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = createBuffer(ciphertext);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyBuffer(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyBuffer(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createBuffer([0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = createBuffer(iv);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = createBuffer(plaintext);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createBuffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n        this._counter = createBuffer(bytes);\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = createBuffer(plaintext);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    // The basic modes of operation as a map\n    var ModeOfOperation = {\n        ecb: ModeOfOperationECB,\n        cbc: ModeOfOperationCBC,\n        cfb: ModeOfOperationCFB,\n        ofb: ModeOfOperationOFB,\n        ctr: ModeOfOperationCTR\n    };\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = createBuffer(data);\n        var padder = 16 - (data.length % 16);\n        var result = createBuffer(data.length + padder);\n        copyBuffer(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = createBuffer(data);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createBuffer(length);\n        copyBuffer(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n        ModeOfOperation: ModeOfOperation,\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n        util: {\n            convertBytesToString: convertBytesToString,\n            convertStringToBytes: convertStringToBytes,\n            _slowCreateBuffer: slowCreateBuffer\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aes\" make sure it's still available\n        if (root.aes) {\n            aesjs._aes = root.aes;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aes-js/index.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this.reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this.reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this.reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this.reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this.reseed++;\n  return utils.encode(res, enc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hmac-drbg/lib/hmac-drbg.js\n// module id = 8\n// module chunks = 0","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hash.js/lib/hash.js\n// module id = 9\n// module chunks = 0","var utils = exports;\nvar inherits = require('inherits');\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (var i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nutils.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nutils.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nutils.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nutils.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nutils.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nutils.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nutils.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nutils.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nutils.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nutils.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nutils.sum32_5 = sum32_5;\n\nfunction assert(cond, msg) {\n  if (!cond)\n    throw new Error(msg || 'Assertion failed');\n}\nutils.assert = assert;\n\nutils.inherits = inherits;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n};\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n};\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n};\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n};\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n};\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n};\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n};\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n};\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n};\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n};\nexports.shr64_lo = shr64_lo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hash.js/lib/hash/utils.js\n// module id = 10\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 11\n// module chunks = 0","var hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hash.js/lib/hash/common.js\n// module id = 12\n// module chunks = 0","var hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nvar rotr32 = utils.rotr32;\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\nvar BlockHash = hash.common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nexports.sha256 = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nexports.sha224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [ 0x6a09e667, 0xf3bcc908,\n             0xbb67ae85, 0x84caa73b,\n             0x3c6ef372, 0xfe94f82b,\n             0xa54ff53a, 0x5f1d36f1,\n             0x510e527f, 0xade682d1,\n             0x9b05688c, 0x2b3e6c1f,\n             0x1f83d9ab, 0xfb41bd6b,\n             0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nexports.sha512 = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(c0_hi, c0_lo,\n                      c1_hi, c1_lo,\n                      c2_hi, c2_lo,\n                      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,\n                          c1_hi, c1_lo,\n                          c2_hi, c2_lo,\n                          c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(c0_hi, c0_lo,\n                           c1_hi, c1_lo,\n                           c2_hi, c2_lo,\n                           c3_hi, c3_lo,\n                           c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(c0_hi, c0_lo,\n                           c1_hi, c1_lo,\n                           c2_hi, c2_lo,\n                           c3_hi, c3_lo,\n                           c4_hi, c4_lo);\n\n    var c0_hi = s0_512_hi(ah, al);\n    var c0_lo = s0_512_lo(ah, al);\n    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [ 0xcbbb9d5d, 0xc1059ed8,\n             0x629a292a, 0x367cd507,\n             0x9159015a, 0x3070dd17,\n             0x152fecd8, 0xf70e5939,\n             0x67332667, 0xffc00b31,\n             0x8eb44a87, 0x68581511,\n             0xdb0c2e0d, 0x64f98fa7,\n             0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nexports.sha384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,\n             0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nexports.sha1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (var i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\n\nfunction ch64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hash.js/lib/hash/sha.js\n// module id = 13\n// module chunks = 0","var hash = require('../hash');\nvar utils = hash.utils;\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = hash.common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hash.js/lib/hash/ripemd.js\n// module id = 14\n// module chunks = 0","var hmac = exports;\n\nvar hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (var i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (var i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hash.js/lib/hash/hmac.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/minimalistic-crypto-utils/lib/utils.js\n// module id = 16\n// module chunks = 0","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/minimalistic-assert/index.js\n// module id = 17\n// module chunks = 0","\"use strict\";\n\n(function(root) {\n    var MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        var K = [\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ];\n\n        var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        var h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        var w = new Array(64);\n\n        function blocks(p) {\n            var off = 0, len = p.length;\n            while (len >= 64) {\n                var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        var i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi>>>24) & 0xff);\n        p.push((bitLenHi>>>16) & 0xff);\n        p.push((bitLenHi>>>8)  & 0xff);\n        p.push((bitLenHi>>>0)  & 0xff);\n        p.push((bitLenLo>>>24) & 0xff);\n        p.push((bitLenLo>>>16) & 0xff);\n        p.push((bitLenLo>>>8)  & 0xff);\n        p.push((bitLenLo>>>0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0>>>24) & 0xff, (h0>>>16) & 0xff, (h0>>>8) & 0xff, (h0>>>0) & 0xff,\n            (h1>>>24) & 0xff, (h1>>>16) & 0xff, (h1>>>8) & 0xff, (h1>>>0) & 0xff,\n            (h2>>>24) & 0xff, (h2>>>16) & 0xff, (h2>>>8) & 0xff, (h2>>>0) & 0xff,\n            (h3>>>24) & 0xff, (h3>>>16) & 0xff, (h3>>>8) & 0xff, (h3>>>0) & 0xff,\n            (h4>>>24) & 0xff, (h4>>>16) & 0xff, (h4>>>8) & 0xff, (h4>>>0) & 0xff,\n            (h5>>>24) & 0xff, (h5>>>16) & 0xff, (h5>>>8) & 0xff, (h5>>>0) & 0xff,\n            (h6>>>24) & 0xff, (h6>>>16) & 0xff, (h6>>>8) & 0xff, (h6>>>0) & 0xff,\n            (h7>>>24) & 0xff, (h7>>>16) & 0xff, (h7>>>8) & 0xff, (h7>>>0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = password.length <= 64 ? password : SHA256(password);\n\n        var i;\n        var innerLen = 64 + salt.length + 4;\n        var inner = new Array(innerLen);\n        var outerKey = new Array(64);\n        var dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) inner[i] = 0x36;\n        for (i = 0; i < password.length; i++) inner[i] ^= password[i];\n        for (i = 0; i < salt.length; i++) inner[64+i] = salt[i];\n        for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (var i = innerLen-1; i >= innerLen-4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        var i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (var i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (var i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') {\n            return false;\n        }\n        for (var i = 0; i < o.length; i++) {\n            if (typeof(o[i]) !== 'number') { return false; }\n\n            var v = parseInt(o[i]);\n            if (v != o[i] || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        var intValue = parseInt(value);\n        if (value != intValue) { throw new Error('invalid ' + name); }\n        return intValue;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        if (!callback) { throw new Error('missing callback'); }\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n\n        var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        var B = new Uint32Array(p * 32 * r)\n        for (var i = 0; i < B.length; i++) {\n            var j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        var XY = new Uint32Array(64 * r);\n        var V = new Uint32Array(32 * r * N);\n\n        var Yi = 32 * r;\n\n        // scratch space\n        var x = new Uint32Array(16);       // salsa20_8\n        var _X = new Uint32Array(16);      // blockmix_salsa8\n\n        var totalOps = p * N * 2;\n        var currentOp = 0;\n        var lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        var stop = false;\n\n        // State information\n        var state = 0;\n        var i0 = 0, i1;\n        var Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        var limit = parseInt(1000 / r);\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        var nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        var incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                // ROMix - 6\n                        var offset = (2 * r - 1) * 16;               // ROMix - 7\n                        var j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (var i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Done; don't break (which would reschedule)\n                    return callback(null, 1.0, derivedKey);\n                }\n\n                // Schedule the next steps\n                nextTick(incrementalSMix);\n            }\n\n            // Bootstrap the incremental smix\n            incrementalSMix();\n    }\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = scrypt;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(scrypt);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = scrypt;\n    }\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scrypt-js/scrypt.js\n// module id = 18\n// module chunks = 0","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 19\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 20\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/url.js\n// module id = 21\n// module chunks = 0","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/~/punycode/punycode.js\n// module id = 22\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/index.js\n// module id = 24\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/decode.js\n// module id = 25\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/encode.js\n// module id = 26\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 27\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// node-fetch (ignored)\n// module id = 28\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// node-localstorage (ignored)\n// module id = 29\n// module chunks = 0"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtrXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrvjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnwhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdhQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtnjzrcnlsjhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/DA;;;;;;ACAA;;;;;;ACAA;;;","sourceRoot":""}